[014] 00000000: PUSH1 0x80                     // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[014] 00000002: PUSH1 0x40                     // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[014] 00000004: MSTORE                         // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[014] 00000005: CALLVALUE                      // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[014] 00000006: DUP1                           // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[014] 00000007: ISZERO                         // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[014] 00000008: PUSH2 0x10                     // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[014] 0000000b: JUMPI                          // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
      0000000c: PUSH1 0x0                      // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
      0000000e: DUP1                           // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
      0000000f: REVERT                         // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[014] 00000010: JUMPDEST                       // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[014] 00000011: POP                            // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[014] 00000012: PUSH1 0x4                      // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[014] 00000014: CALLDATASIZE                   // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[014] 00000015: LT                             // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[014] 00000016: PUSH2 0x137                    // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[014] 00000019: JUMPI                          // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[014] 0000001a: PUSH1 0x0                      // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[014] 0000001c: CALLDATALOAD                   // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[014] 0000001d: PUSH1 0xe0                     // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[014] 0000001f: SHR                            // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[014] 00000020: DUP1                           // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[014] 00000021: PUSH4 0x85226c81               // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[014] 00000026: GT                             // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[014] 00000027: PUSH2 0xb8                     // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[014] 0000002a: JUMPI                          // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[005] 0000002b: DUP1                           // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[005] 0000002c: PUSH4 0xb39b1433               // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[005] 00000031: GT                             // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[005] 00000032: PUSH2 0x7c                     // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[005] 00000035: JUMPI                          // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[002] 00000036: DUP1                           // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[002] 00000037: PUSH4 0xb39b1433               // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[002] 0000003c: EQ                             // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[002] 0000003d: PUSH2 0x286                    // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[002] 00000040: JUMPI                          // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[001] 00000041: DUP1                           // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[001] 00000042: PUSH4 0xb5508aa9               // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[001] 00000047: EQ                             // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[001] 00000048: PUSH2 0x290                    // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[001] 0000004b: JUMPI                          // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[001] 0000004c: DUP1                           // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[001] 0000004d: PUSH4 0xba414fa6               // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[001] 00000052: EQ                             // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[001] 00000053: PUSH2 0x2ae                    // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[001] 00000056: JUMPI                          // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[001] 00000057: DUP1                           // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[001] 00000058: PUSH4 0xe1b3b44f               // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[001] 0000005d: EQ                             // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[001] 0000005e: PUSH2 0x2cc                    // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[001] 00000061: JUMPI                          // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
      00000062: DUP1                           // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
      00000063: PUSH4 0xe20c9f71               // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
      00000068: EQ                             // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
      00000069: PUSH2 0x2d6                    // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
      0000006c: JUMPI                          // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
      0000006d: DUP1                           // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
      0000006e: PUSH4 0xfa7626d4               // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
      00000073: EQ                             // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
      00000074: PUSH2 0x2f4                    // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
      00000077: JUMPI                          // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
      00000078: PUSH2 0x137                    // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
      0000007b: JUMP                           // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[003] 0000007c: JUMPDEST                       // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[003] 0000007d: DUP1                           // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[003] 0000007e: PUSH4 0x85226c81               // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[003] 00000083: EQ                             // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[003] 00000084: PUSH2 0x22c                    // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[003] 00000087: JUMPI                          // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[003] 00000088: DUP1                           // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[003] 00000089: PUSH4 0x916a17c6               // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[003] 0000008e: EQ                             // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[003] 0000008f: PUSH2 0x24a                    // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[003] 00000092: JUMPI                          // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[003] 00000093: DUP1                           // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[003] 00000094: PUSH4 0x95b5432e               // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[003] 00000099: EQ                             // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[003] 0000009a: PUSH2 0x268                    // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[003] 0000009d: JUMPI                          // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[002] 0000009e: DUP1                           // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[002] 0000009f: PUSH4 0xa5f61ea9               // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[002] 000000a4: EQ                             // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[002] 000000a5: PUSH2 0x272                    // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[002] 000000a8: JUMPI                          // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[001] 000000a9: DUP1                           // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[001] 000000aa: PUSH4 0xb2155d2d               // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[001] 000000af: EQ                             // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[001] 000000b0: PUSH2 0x27c                    // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[001] 000000b3: JUMPI                          // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
      000000b4: PUSH2 0x137                    // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
      000000b7: JUMP                           // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[009] 000000b8: JUMPDEST                       // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[009] 000000b9: DUP1                           // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[009] 000000ba: PUSH4 0x3f7286f4               // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[009] 000000bf: GT                             // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[009] 000000c0: PUSH2 0xff                     // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[009] 000000c3: JUMPI                          // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[001] 000000c4: DUP1                           // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[001] 000000c5: PUSH4 0x3f7286f4               // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[001] 000000ca: EQ                             // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[001] 000000cb: PUSH2 0x1aa                    // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[001] 000000ce: JUMPI                          // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[001] 000000cf: DUP1                           // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[001] 000000d0: PUSH4 0x48db5f89               // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[001] 000000d5: EQ                             // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[001] 000000d6: PUSH2 0x1c8                    // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[001] 000000d9: JUMPI                          // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[001] 000000da: DUP1                           // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[001] 000000db: PUSH4 0x66d9a9a0               // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[001] 000000e0: EQ                             // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[001] 000000e1: PUSH2 0x1e6                    // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[001] 000000e4: JUMPI                          // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[001] 000000e5: DUP1                           // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[001] 000000e6: PUSH4 0x6c8bd061               // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[001] 000000eb: EQ                             // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[001] 000000ec: PUSH2 0x204                    // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[001] 000000ef: JUMPI                          // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
      000000f0: DUP1                           // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
      000000f1: PUSH4 0x78adffe4               // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
      000000f6: EQ                             // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
      000000f7: PUSH2 0x20e                    // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
      000000fa: JUMPI                          // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
      000000fb: PUSH2 0x137                    // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
      000000fe: JUMP                           // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[008] 000000ff: JUMPDEST                       // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[008] 00000100: DUP1                           // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[008] 00000101: PUSH4 0xa9254e4                // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[008] 00000106: EQ                             // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[008] 00000107: PUSH2 0x13c                    // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[008] 0000010a: JUMPI                          // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[001] 0000010b: DUP1                           // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[001] 0000010c: PUSH4 0x1b073c42               // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[001] 00000111: EQ                             // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[001] 00000112: PUSH2 0x146                    // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[001] 00000115: JUMPI                          // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
      00000116: DUP1                           // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
      00000117: PUSH4 0x1ed7831c               // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
      0000011c: EQ                             // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
      0000011d: PUSH2 0x150                    // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
      00000120: JUMPI                          // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
      00000121: DUP1                           // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
      00000122: PUSH4 0x2ade3880               // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
      00000127: EQ                             // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
      00000128: PUSH2 0x16e                    // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
      0000012b: JUMPI                          // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
      0000012c: DUP1                           // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
      0000012d: PUSH4 0x3e5e3c23               // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
      00000132: EQ                             // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
      00000133: PUSH2 0x18c                    // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
      00000136: JUMPI                          // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
      00000137: JUMPDEST                       // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
      00000138: PUSH1 0x0                      // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
      0000013a: DUP1                           // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
      0000013b: REVERT                         // test/unit/Raffle.t.sol: 10:1-102:2 (292-3127)
[007] 0000013c: JUMPDEST                       // test/unit/Raffle.t.sol: 28:5-40:6 (710-1112)
[007] 0000013d: PUSH2 0x144                    // test/unit/Raffle.t.sol: 28:5-40:6 (710-1112)
[007] 00000140: PUSH2 0x312                    // test/unit/Raffle.t.sol: 28:5-40:6 (710-1112)
[007] 00000143: JUMP                           // test/unit/Raffle.t.sol: 28:5-40:6 (710-1112)
[007] 00000144: JUMPDEST                       // test/unit/Raffle.t.sol: 28:5-40:6 (710-1112)
[007] 00000145: STOP                           // test/unit/Raffle.t.sol: 28:5-40:6 (710-1112)
[001] 00000146: JUMPDEST                       // test/unit/Raffle.t.sol: 42:5-44:6 (1118-1310)
[001] 00000147: PUSH2 0x14e                    // test/unit/Raffle.t.sol: 42:5-44:6 (1118-1310)
[001] 0000014a: PUSH2 0x67b                    // test/unit/Raffle.t.sol: 42:5-44:6 (1118-1310)
[001] 0000014d: JUMP                           // test/unit/Raffle.t.sol: 42:5-44:6 (1118-1310)
[001] 0000014e: JUMPDEST                       // test/unit/Raffle.t.sol: 42:5-44:6 (1118-1310)
[001] 0000014f: STOP                           // test/unit/Raffle.t.sol: 42:5-44:6 (1118-1310)
      00000150: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 80:5-82:6 (2452-2586)
      00000151: PUSH2 0x158                    // lib/forge-std/src/StdInvariant.sol: 80:5-82:6 (2452-2586)
      00000154: PUSH2 0x742                    // lib/forge-std/src/StdInvariant.sol: 80:5-82:6 (2452-2586)
      00000157: JUMP                           // lib/forge-std/src/StdInvariant.sol: 80:5-82:6 (2452-2586)
      00000158: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 80:5-82:6 (2452-2586)
      00000159: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 80:5-82:6 (2452-2586)
      0000015b: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 80:5-82:6 (2452-2586)
      0000015c: PUSH2 0x165                    // lib/forge-std/src/StdInvariant.sol: 80:5-82:6 (2452-2586)
      0000015f: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 80:5-82:6 (2452-2586)
      00000160: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 80:5-82:6 (2452-2586)
      00000161: PUSH2 0x231e                   // lib/forge-std/src/StdInvariant.sol: 80:5-82:6 (2452-2586)
      00000164: JUMP                           // lib/forge-std/src/StdInvariant.sol: 80:5-82:6 (2452-2586)
      00000165: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 80:5-82:6 (2452-2586)
      00000166: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 80:5-82:6 (2452-2586)
      00000168: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 80:5-82:6 (2452-2586)
      00000169: DUP1                           // lib/forge-std/src/StdInvariant.sol: 80:5-82:6 (2452-2586)
      0000016a: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 80:5-82:6 (2452-2586)
      0000016b: SUB                            // lib/forge-std/src/StdInvariant.sol: 80:5-82:6 (2452-2586)
      0000016c: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 80:5-82:6 (2452-2586)
      0000016d: RETURN                         // lib/forge-std/src/StdInvariant.sol: 80:5-82:6 (2452-2586)
      0000016e: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 104:5-106:6 (3360-3511)
      0000016f: PUSH2 0x176                    // lib/forge-std/src/StdInvariant.sol: 104:5-106:6 (3360-3511)
      00000172: PUSH2 0x7d0                    // lib/forge-std/src/StdInvariant.sol: 104:5-106:6 (3360-3511)
      00000175: JUMP                           // lib/forge-std/src/StdInvariant.sol: 104:5-106:6 (3360-3511)
      00000176: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 104:5-106:6 (3360-3511)
      00000177: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 104:5-106:6 (3360-3511)
      00000179: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 104:5-106:6 (3360-3511)
      0000017a: PUSH2 0x183                    // lib/forge-std/src/StdInvariant.sol: 104:5-106:6 (3360-3511)
      0000017d: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 104:5-106:6 (3360-3511)
      0000017e: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:5-106:6 (3360-3511)
      0000017f: PUSH2 0x2591                   // lib/forge-std/src/StdInvariant.sol: 104:5-106:6 (3360-3511)
      00000182: JUMP                           // lib/forge-std/src/StdInvariant.sol: 104:5-106:6 (3360-3511)
      00000183: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 104:5-106:6 (3360-3511)
      00000184: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 104:5-106:6 (3360-3511)
      00000186: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 104:5-106:6 (3360-3511)
      00000187: DUP1                           // lib/forge-std/src/StdInvariant.sol: 104:5-106:6 (3360-3511)
      00000188: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 104:5-106:6 (3360-3511)
      00000189: SUB                            // lib/forge-std/src/StdInvariant.sol: 104:5-106:6 (3360-3511)
      0000018a: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:5-106:6 (3360-3511)
      0000018b: RETURN                         // lib/forge-std/src/StdInvariant.sol: 104:5-106:6 (3360-3511)
      0000018c: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 100:5-102:6 (3221-3354)
      0000018d: PUSH2 0x194                    // lib/forge-std/src/StdInvariant.sol: 100:5-102:6 (3221-3354)
      00000190: PUSH2 0x95e                    // lib/forge-std/src/StdInvariant.sol: 100:5-102:6 (3221-3354)
      00000193: JUMP                           // lib/forge-std/src/StdInvariant.sol: 100:5-102:6 (3221-3354)
      00000194: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 100:5-102:6 (3221-3354)
      00000195: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 100:5-102:6 (3221-3354)
      00000197: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 100:5-102:6 (3221-3354)
      00000198: PUSH2 0x1a1                    // lib/forge-std/src/StdInvariant.sol: 100:5-102:6 (3221-3354)
      0000019b: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 100:5-102:6 (3221-3354)
      0000019c: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 100:5-102:6 (3221-3354)
      0000019d: PUSH2 0x231e                   // lib/forge-std/src/StdInvariant.sol: 100:5-102:6 (3221-3354)
      000001a0: JUMP                           // lib/forge-std/src/StdInvariant.sol: 100:5-102:6 (3221-3354)
      000001a1: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 100:5-102:6 (3221-3354)
      000001a2: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 100:5-102:6 (3221-3354)
      000001a4: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 100:5-102:6 (3221-3354)
      000001a5: DUP1                           // lib/forge-std/src/StdInvariant.sol: 100:5-102:6 (3221-3354)
      000001a6: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 100:5-102:6 (3221-3354)
      000001a7: SUB                            // lib/forge-std/src/StdInvariant.sol: 100:5-102:6 (3221-3354)
      000001a8: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 100:5-102:6 (3221-3354)
      000001a9: RETURN                         // lib/forge-std/src/StdInvariant.sol: 100:5-102:6 (3221-3354)
      000001aa: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 92:5-94:6 (2922-3063)
      000001ab: PUSH2 0x1b2                    // lib/forge-std/src/StdInvariant.sol: 92:5-94:6 (2922-3063)
      000001ae: PUSH2 0x9ec                    // lib/forge-std/src/StdInvariant.sol: 92:5-94:6 (2922-3063)
      000001b1: JUMP                           // lib/forge-std/src/StdInvariant.sol: 92:5-94:6 (2922-3063)
      000001b2: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 92:5-94:6 (2922-3063)
      000001b3: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 92:5-94:6 (2922-3063)
      000001b5: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 92:5-94:6 (2922-3063)
      000001b6: PUSH2 0x1bf                    // lib/forge-std/src/StdInvariant.sol: 92:5-94:6 (2922-3063)
      000001b9: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 92:5-94:6 (2922-3063)
      000001ba: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 92:5-94:6 (2922-3063)
      000001bb: PUSH2 0x231e                   // lib/forge-std/src/StdInvariant.sol: 92:5-94:6 (2922-3063)
      000001be: JUMP                           // lib/forge-std/src/StdInvariant.sol: 92:5-94:6 (2922-3063)
      000001bf: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 92:5-94:6 (2922-3063)
      000001c0: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 92:5-94:6 (2922-3063)
      000001c2: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 92:5-94:6 (2922-3063)
      000001c3: DUP1                           // lib/forge-std/src/StdInvariant.sol: 92:5-94:6 (2922-3063)
      000001c4: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 92:5-94:6 (2922-3063)
      000001c5: SUB                            // lib/forge-std/src/StdInvariant.sol: 92:5-94:6 (2922-3063)
      000001c6: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 92:5-94:6 (2922-3063)
      000001c7: RETURN                         // lib/forge-std/src/StdInvariant.sol: 92:5-94:6 (2922-3063)
      000001c8: JUMPDEST                       // test/unit/Raffle.t.sol: 25:5-25:47 (599-641)
      000001c9: PUSH2 0x1d0                    // test/unit/Raffle.t.sol: 25:5-25:47 (599-641)
      000001cc: PUSH2 0xa7a                    // test/unit/Raffle.t.sol: 25:5-25:47 (599-641)
      000001cf: JUMP                           // test/unit/Raffle.t.sol: 25:5-25:47 (599-641)
      000001d0: JUMPDEST                       // test/unit/Raffle.t.sol: 25:5-25:47 (599-641)
      000001d1: PUSH1 0x40                     // test/unit/Raffle.t.sol: 25:5-25:47 (599-641)
      000001d3: MLOAD                          // test/unit/Raffle.t.sol: 25:5-25:47 (599-641)
      000001d4: PUSH2 0x1dd                    // test/unit/Raffle.t.sol: 25:5-25:47 (599-641)
      000001d7: SWAP2                          // test/unit/Raffle.t.sol: 25:5-25:47 (599-641)
      000001d8: SWAP1                          // test/unit/Raffle.t.sol: 25:5-25:47 (599-641)
      000001d9: PUSH2 0x25c2                   // test/unit/Raffle.t.sol: 25:5-25:47 (599-641)
      000001dc: JUMP                           // test/unit/Raffle.t.sol: 25:5-25:47 (599-641)
      000001dd: JUMPDEST                       // test/unit/Raffle.t.sol: 25:5-25:47 (599-641)
      000001de: PUSH1 0x40                     // test/unit/Raffle.t.sol: 25:5-25:47 (599-641)
      000001e0: MLOAD                          // test/unit/Raffle.t.sol: 25:5-25:47 (599-641)
      000001e1: DUP1                           // test/unit/Raffle.t.sol: 25:5-25:47 (599-641)
      000001e2: SWAP2                          // test/unit/Raffle.t.sol: 25:5-25:47 (599-641)
      000001e3: SUB                            // test/unit/Raffle.t.sol: 25:5-25:47 (599-641)
      000001e4: SWAP1                          // test/unit/Raffle.t.sol: 25:5-25:47 (599-641)
      000001e5: RETURN                         // test/unit/Raffle.t.sol: 25:5-25:47 (599-641)
      000001e6: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 88:5-90:6 (2738-2916)
      000001e7: PUSH2 0x1ee                    // lib/forge-std/src/StdInvariant.sol: 88:5-90:6 (2738-2916)
      000001ea: PUSH2 0xaa0                    // lib/forge-std/src/StdInvariant.sol: 88:5-90:6 (2738-2916)
      000001ed: JUMP                           // lib/forge-std/src/StdInvariant.sol: 88:5-90:6 (2738-2916)
      000001ee: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 88:5-90:6 (2738-2916)
      000001ef: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 88:5-90:6 (2738-2916)
      000001f1: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 88:5-90:6 (2738-2916)
      000001f2: PUSH2 0x1fb                    // lib/forge-std/src/StdInvariant.sol: 88:5-90:6 (2738-2916)
      000001f5: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 88:5-90:6 (2738-2916)
      000001f6: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 88:5-90:6 (2738-2916)
      000001f7: PUSH2 0x27c6                   // lib/forge-std/src/StdInvariant.sol: 88:5-90:6 (2738-2916)
      000001fa: JUMP                           // lib/forge-std/src/StdInvariant.sol: 88:5-90:6 (2738-2916)
      000001fb: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 88:5-90:6 (2738-2916)
      000001fc: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 88:5-90:6 (2738-2916)
      000001fe: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 88:5-90:6 (2738-2916)
      000001ff: DUP1                           // lib/forge-std/src/StdInvariant.sol: 88:5-90:6 (2738-2916)
      00000200: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 88:5-90:6 (2738-2916)
      00000201: SUB                            // lib/forge-std/src/StdInvariant.sol: 88:5-90:6 (2738-2916)
      00000202: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 88:5-90:6 (2738-2916)
      00000203: RETURN                         // lib/forge-std/src/StdInvariant.sol: 88:5-90:6 (2738-2916)
[001] 00000204: JUMPDEST                       // test/unit/Raffle.t.sol: 71:5-80:6 (2060-2455)
[001] 00000205: PUSH2 0x20c                    // test/unit/Raffle.t.sol: 71:5-80:6 (2060-2455)
[001] 00000208: PUSH2 0xbef                    // test/unit/Raffle.t.sol: 71:5-80:6 (2060-2455)
[001] 0000020b: JUMP                           // test/unit/Raffle.t.sol: 71:5-80:6 (2060-2455)
[001] 0000020c: JUMPDEST                       // test/unit/Raffle.t.sol: 71:5-80:6 (2060-2455)
[001] 0000020d: STOP                           // test/unit/Raffle.t.sol: 71:5-80:6 (2060-2455)
      0000020e: JUMPDEST                       // test/unit/Raffle.t.sol: 26:5-26:61 (647-703)
      0000020f: PUSH2 0x216                    // test/unit/Raffle.t.sol: 26:5-26:61 (647-703)
      00000212: PUSH2 0x10bc                   // test/unit/Raffle.t.sol: 26:5-26:61 (647-703)
      00000215: JUMP                           // test/unit/Raffle.t.sol: 26:5-26:61 (647-703)
      00000216: JUMPDEST                       // test/unit/Raffle.t.sol: 26:5-26:61 (647-703)
      00000217: PUSH1 0x40                     // test/unit/Raffle.t.sol: 26:5-26:61 (647-703)
      00000219: MLOAD                          // test/unit/Raffle.t.sol: 26:5-26:61 (647-703)
      0000021a: PUSH2 0x223                    // test/unit/Raffle.t.sol: 26:5-26:61 (647-703)
      0000021d: SWAP2                          // test/unit/Raffle.t.sol: 26:5-26:61 (647-703)
      0000021e: SWAP1                          // test/unit/Raffle.t.sol: 26:5-26:61 (647-703)
      0000021f: PUSH2 0x2801                   // test/unit/Raffle.t.sol: 26:5-26:61 (647-703)
      00000222: JUMP                           // test/unit/Raffle.t.sol: 26:5-26:61 (647-703)
      00000223: JUMPDEST                       // test/unit/Raffle.t.sol: 26:5-26:61 (647-703)
      00000224: PUSH1 0x40                     // test/unit/Raffle.t.sol: 26:5-26:61 (647-703)
      00000226: MLOAD                          // test/unit/Raffle.t.sol: 26:5-26:61 (647-703)
      00000227: DUP1                           // test/unit/Raffle.t.sol: 26:5-26:61 (647-703)
      00000228: SWAP2                          // test/unit/Raffle.t.sol: 26:5-26:61 (647-703)
      00000229: SUB                            // test/unit/Raffle.t.sol: 26:5-26:61 (647-703)
      0000022a: SWAP1                          // test/unit/Raffle.t.sol: 26:5-26:61 (647-703)
      0000022b: RETURN                         // test/unit/Raffle.t.sol: 26:5-26:61 (647-703)
      0000022c: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 84:5-86:6 (2592-2732)
      0000022d: PUSH2 0x234                    // lib/forge-std/src/StdInvariant.sol: 84:5-86:6 (2592-2732)
      00000230: PUSH2 0x10c8                   // lib/forge-std/src/StdInvariant.sol: 84:5-86:6 (2592-2732)
      00000233: JUMP                           // lib/forge-std/src/StdInvariant.sol: 84:5-86:6 (2592-2732)
      00000234: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 84:5-86:6 (2592-2732)
      00000235: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 84:5-86:6 (2592-2732)
      00000237: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 84:5-86:6 (2592-2732)
      00000238: PUSH2 0x241                    // lib/forge-std/src/StdInvariant.sol: 84:5-86:6 (2592-2732)
      0000023b: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 84:5-86:6 (2592-2732)
      0000023c: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 84:5-86:6 (2592-2732)
      0000023d: PUSH2 0x28a2                   // lib/forge-std/src/StdInvariant.sol: 84:5-86:6 (2592-2732)
      00000240: JUMP                           // lib/forge-std/src/StdInvariant.sol: 84:5-86:6 (2592-2732)
      00000241: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 84:5-86:6 (2592-2732)
      00000242: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 84:5-86:6 (2592-2732)
      00000244: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 84:5-86:6 (2592-2732)
      00000245: DUP1                           // lib/forge-std/src/StdInvariant.sol: 84:5-86:6 (2592-2732)
      00000246: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 84:5-86:6 (2592-2732)
      00000247: SUB                            // lib/forge-std/src/StdInvariant.sol: 84:5-86:6 (2592-2732)
      00000248: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 84:5-86:6 (2592-2732)
      00000249: RETURN                         // lib/forge-std/src/StdInvariant.sol: 84:5-86:6 (2592-2732)
      0000024a: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 96:5-98:6 (3069-3215)
      0000024b: PUSH2 0x252                    // lib/forge-std/src/StdInvariant.sol: 96:5-98:6 (3069-3215)
      0000024e: PUSH2 0x11a1                   // lib/forge-std/src/StdInvariant.sol: 96:5-98:6 (3069-3215)
      00000251: JUMP                           // lib/forge-std/src/StdInvariant.sol: 96:5-98:6 (3069-3215)
      00000252: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 96:5-98:6 (3069-3215)
      00000253: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 96:5-98:6 (3069-3215)
      00000255: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 96:5-98:6 (3069-3215)
      00000256: PUSH2 0x25f                    // lib/forge-std/src/StdInvariant.sol: 96:5-98:6 (3069-3215)
      00000259: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 96:5-98:6 (3069-3215)
      0000025a: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 96:5-98:6 (3069-3215)
      0000025b: PUSH2 0x27c6                   // lib/forge-std/src/StdInvariant.sol: 96:5-98:6 (3069-3215)
      0000025e: JUMP                           // lib/forge-std/src/StdInvariant.sol: 96:5-98:6 (3069-3215)
      0000025f: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 96:5-98:6 (3069-3215)
      00000260: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 96:5-98:6 (3069-3215)
      00000262: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 96:5-98:6 (3069-3215)
      00000263: DUP1                           // lib/forge-std/src/StdInvariant.sol: 96:5-98:6 (3069-3215)
      00000264: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 96:5-98:6 (3069-3215)
      00000265: SUB                            // lib/forge-std/src/StdInvariant.sol: 96:5-98:6 (3069-3215)
      00000266: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 96:5-98:6 (3069-3215)
      00000267: RETURN                         // lib/forge-std/src/StdInvariant.sol: 96:5-98:6 (3069-3215)
[001] 00000268: JUMPDEST                       // test/unit/Raffle.t.sol: 57:5-62:6 (1581-1815)
[001] 00000269: PUSH2 0x270                    // test/unit/Raffle.t.sol: 57:5-62:6 (1581-1815)
[001] 0000026c: PUSH2 0x12f0                   // test/unit/Raffle.t.sol: 57:5-62:6 (1581-1815)
[001] 0000026f: JUMP                           // test/unit/Raffle.t.sol: 57:5-62:6 (1581-1815)
[001] 00000270: JUMPDEST                       // test/unit/Raffle.t.sol: 57:5-62:6 (1581-1815)
[001] 00000271: STOP                           // test/unit/Raffle.t.sol: 57:5-62:6 (1581-1815)
[001] 00000272: JUMPDEST                       // test/unit/Raffle.t.sol: 82:5-89:6 (2461-2729)
[001] 00000273: PUSH2 0x27a                    // test/unit/Raffle.t.sol: 82:5-89:6 (2461-2729)
[001] 00000276: PUSH2 0x1527                   // test/unit/Raffle.t.sol: 82:5-89:6 (2461-2729)
[001] 00000279: JUMP                           // test/unit/Raffle.t.sol: 82:5-89:6 (2461-2729)
[001] 0000027a: JUMPDEST                       // test/unit/Raffle.t.sol: 82:5-89:6 (2461-2729)
[001] 0000027b: STOP                           // test/unit/Raffle.t.sol: 82:5-89:6 (2461-2729)
[001] 0000027c: JUMPDEST                       // test/unit/Raffle.t.sol: 64:5-69:6 (1821-2050)
[001] 0000027d: PUSH2 0x284                    // test/unit/Raffle.t.sol: 64:5-69:6 (1821-2050)
[001] 00000280: PUSH2 0x171a                   // test/unit/Raffle.t.sol: 64:5-69:6 (1821-2050)
[001] 00000283: JUMP                           // test/unit/Raffle.t.sol: 64:5-69:6 (1821-2050)
[001] 00000284: JUMPDEST                       // test/unit/Raffle.t.sol: 64:5-69:6 (1821-2050)
[001] 00000285: STOP                           // test/unit/Raffle.t.sol: 64:5-69:6 (1821-2050)
[001] 00000286: JUMPDEST                       // test/unit/Raffle.t.sol: 91:5-101:6 (2735-3125)
[001] 00000287: PUSH2 0x28e                    // test/unit/Raffle.t.sol: 91:5-101:6 (2735-3125)
[001] 0000028a: PUSH2 0x1971                   // test/unit/Raffle.t.sol: 91:5-101:6 (2735-3125)
[001] 0000028d: JUMP                           // test/unit/Raffle.t.sol: 91:5-101:6 (2735-3125)
[001] 0000028e: JUMPDEST                       // test/unit/Raffle.t.sol: 91:5-101:6 (2735-3125)
[001] 0000028f: STOP                           // test/unit/Raffle.t.sol: 91:5-101:6 (2735-3125)
      00000290: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 72:5-74:6 (2157-2298)
      00000291: PUSH2 0x298                    // lib/forge-std/src/StdInvariant.sol: 72:5-74:6 (2157-2298)
      00000294: PUSH2 0x1d2e                   // lib/forge-std/src/StdInvariant.sol: 72:5-74:6 (2157-2298)
      00000297: JUMP                           // lib/forge-std/src/StdInvariant.sol: 72:5-74:6 (2157-2298)
      00000298: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 72:5-74:6 (2157-2298)
      00000299: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 72:5-74:6 (2157-2298)
      0000029b: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 72:5-74:6 (2157-2298)
      0000029c: PUSH2 0x2a5                    // lib/forge-std/src/StdInvariant.sol: 72:5-74:6 (2157-2298)
      0000029f: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 72:5-74:6 (2157-2298)
      000002a0: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 72:5-74:6 (2157-2298)
      000002a1: PUSH2 0x28a2                   // lib/forge-std/src/StdInvariant.sol: 72:5-74:6 (2157-2298)
      000002a4: JUMP                           // lib/forge-std/src/StdInvariant.sol: 72:5-74:6 (2157-2298)
      000002a5: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 72:5-74:6 (2157-2298)
      000002a6: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 72:5-74:6 (2157-2298)
      000002a8: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 72:5-74:6 (2157-2298)
      000002a9: DUP1                           // lib/forge-std/src/StdInvariant.sol: 72:5-74:6 (2157-2298)
      000002aa: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 72:5-74:6 (2157-2298)
      000002ab: SUB                            // lib/forge-std/src/StdInvariant.sol: 72:5-74:6 (2157-2298)
      000002ac: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 72:5-74:6 (2157-2298)
      000002ad: RETURN                         // lib/forge-std/src/StdInvariant.sol: 72:5-74:6 (2157-2298)
      000002ae: JUMPDEST                       // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      000002af: PUSH2 0x2b6                    // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      000002b2: PUSH2 0x1e07                   // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      000002b5: JUMP                           // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      000002b6: JUMPDEST                       // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      000002b7: PUSH1 0x40                     // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      000002b9: MLOAD                          // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      000002ba: PUSH2 0x2c3                    // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      000002bd: SWAP2                          // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      000002be: SWAP1                          // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      000002bf: PUSH2 0x28df                   // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      000002c2: JUMP                           // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      000002c3: JUMPDEST                       // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      000002c4: PUSH1 0x40                     // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      000002c6: MLOAD                          // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      000002c7: DUP1                           // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      000002c8: SWAP2                          // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      000002c9: SUB                            // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      000002ca: SWAP1                          // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      000002cb: RETURN                         // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
[001] 000002cc: JUMPDEST                       // test/unit/Raffle.t.sol: 48:5-55:6 (1337-1575)
[001] 000002cd: PUSH2 0x2d4                    // test/unit/Raffle.t.sol: 48:5-55:6 (1337-1575)
[001] 000002d0: PUSH2 0x1f23                   // test/unit/Raffle.t.sol: 48:5-55:6 (1337-1575)
[001] 000002d3: JUMP                           // test/unit/Raffle.t.sol: 48:5-55:6 (1337-1575)
[001] 000002d4: JUMPDEST                       // test/unit/Raffle.t.sol: 48:5-55:6 (1337-1575)
[001] 000002d5: STOP                           // test/unit/Raffle.t.sol: 48:5-55:6 (1337-1575)
      000002d6: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 76:5-78:6 (2304-2446)
      000002d7: PUSH2 0x2de                    // lib/forge-std/src/StdInvariant.sol: 76:5-78:6 (2304-2446)
      000002da: PUSH2 0x20ec                   // lib/forge-std/src/StdInvariant.sol: 76:5-78:6 (2304-2446)
      000002dd: JUMP                           // lib/forge-std/src/StdInvariant.sol: 76:5-78:6 (2304-2446)
      000002de: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 76:5-78:6 (2304-2446)
      000002df: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 76:5-78:6 (2304-2446)
      000002e1: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 76:5-78:6 (2304-2446)
      000002e2: PUSH2 0x2eb                    // lib/forge-std/src/StdInvariant.sol: 76:5-78:6 (2304-2446)
      000002e5: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 76:5-78:6 (2304-2446)
      000002e6: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 76:5-78:6 (2304-2446)
      000002e7: PUSH2 0x231e                   // lib/forge-std/src/StdInvariant.sol: 76:5-78:6 (2304-2446)
      000002ea: JUMP                           // lib/forge-std/src/StdInvariant.sol: 76:5-78:6 (2304-2446)
      000002eb: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 76:5-78:6 (2304-2446)
      000002ec: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 76:5-78:6 (2304-2446)
      000002ee: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 76:5-78:6 (2304-2446)
      000002ef: DUP1                           // lib/forge-std/src/StdInvariant.sol: 76:5-78:6 (2304-2446)
      000002f0: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 76:5-78:6 (2304-2446)
      000002f1: SUB                            // lib/forge-std/src/StdInvariant.sol: 76:5-78:6 (2304-2446)
      000002f2: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 76:5-78:6 (2304-2446)
      000002f3: RETURN                         // lib/forge-std/src/StdInvariant.sol: 76:5-78:6 (2304-2446)
      000002f4: JUMPDEST                       // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      000002f5: PUSH2 0x2fc                    // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      000002f8: PUSH2 0x217a                   // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      000002fb: JUMP                           // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      000002fc: JUMPDEST                       // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      000002fd: PUSH1 0x40                     // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      000002ff: MLOAD                          // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      00000300: PUSH2 0x309                    // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      00000303: SWAP2                          // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      00000304: SWAP1                          // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      00000305: PUSH2 0x28df                   // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      00000308: JUMP                           // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      00000309: JUMPDEST                       // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      0000030a: PUSH1 0x40                     // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      0000030c: MLOAD                          // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      0000030d: DUP1                           // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      0000030e: SWAP2                          // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      0000030f: SUB                            // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      00000310: SWAP1                          // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      00000311: RETURN                         // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
[007] 00000312: JUMPDEST                       // test/unit/Raffle.t.sol: 28:5-40:6 (710-1112)
[007] 00000313: PUSH1 0x0                      // test/unit/Raffle.t.sol: 29:9-29:30 (746-767)
[007] 00000315: PUSH1 0x40                     // test/unit/Raffle.t.sol: 29:33-29:51 (770-788)
[007] 00000317: MLOAD                          // test/unit/Raffle.t.sol: 29:33-29:51 (770-788)
[007] 00000318: PUSH2 0x320                    // test/unit/Raffle.t.sol: 29:33-29:51 (770-788)
[007] 0000031b: SWAP1                          // test/unit/Raffle.t.sol: 29:33-29:51 (770-788)
[007] 0000031c: PUSH2 0x221f                   // test/unit/Raffle.t.sol: 29:33-29:51 (770-788)
[007] 0000031f: JUMP                           // test/unit/Raffle.t.sol: 29:33-29:51 (770-788)
[007] 00000320: JUMPDEST                       // test/unit/Raffle.t.sol: 29:33-29:51 (770-788)
[007] 00000321: PUSH1 0x40                     // test/unit/Raffle.t.sol: 29:33-29:51 (770-788)
[007] 00000323: MLOAD                          // test/unit/Raffle.t.sol: 29:33-29:51 (770-788)
[007] 00000324: DUP1                           // test/unit/Raffle.t.sol: 29:33-29:51 (770-788)
[007] 00000325: SWAP2                          // test/unit/Raffle.t.sol: 29:33-29:51 (770-788)
[007] 00000326: SUB                            // test/unit/Raffle.t.sol: 29:33-29:51 (770-788)
[007] 00000327: SWAP1                          // test/unit/Raffle.t.sol: 29:33-29:51 (770-788)
[007] 00000328: PUSH1 0x0                      // test/unit/Raffle.t.sol: 29:33-29:51 (770-788)
[007] 0000032a: CREATE                         // test/unit/Raffle.t.sol: 29:33-29:51 (770-788)
[007] 0000032b: DUP1                           // test/unit/Raffle.t.sol: 29:33-29:51 (770-788)
[007] 0000032c: ISZERO                         // test/unit/Raffle.t.sol: 29:33-29:51 (770-788)
[007] 0000032d: DUP1                           // test/unit/Raffle.t.sol: 29:33-29:51 (770-788)
[007] 0000032e: ISZERO                         // test/unit/Raffle.t.sol: 29:33-29:51 (770-788)
[007] 0000032f: PUSH2 0x33c                    // test/unit/Raffle.t.sol: 29:33-29:51 (770-788)
[007] 00000332: JUMPI                          // test/unit/Raffle.t.sol: 29:33-29:51 (770-788)
      00000333: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 29:33-29:51 (770-788)
      00000334: PUSH1 0x0                      // test/unit/Raffle.t.sol: 29:33-29:51 (770-788)
      00000336: DUP1                           // test/unit/Raffle.t.sol: 29:33-29:51 (770-788)
      00000337: RETURNDATACOPY                 // test/unit/Raffle.t.sol: 29:33-29:51 (770-788)
      00000338: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 29:33-29:51 (770-788)
      00000339: PUSH1 0x0                      // test/unit/Raffle.t.sol: 29:33-29:51 (770-788)
      0000033b: REVERT                         // test/unit/Raffle.t.sol: 29:33-29:51 (770-788)
[007] 0000033c: JUMPDEST                       // test/unit/Raffle.t.sol: 29:33-29:51 (770-788)
[007] 0000033d: POP                            // test/unit/Raffle.t.sol: 29:33-29:51 (770-788)
[007] 0000033e: SWAP1                          // test/unit/Raffle.t.sol: 29:9-29:51 (746-788)
[007] 0000033f: POP                            // test/unit/Raffle.t.sol: 29:9-29:51 (746-788)
[007] 00000340: DUP1                           // test/unit/Raffle.t.sol: 30:34-30:42 (823-831)
[007] 00000341: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 30:34-30:46 (823-835)
[007] 00000356: AND                            // test/unit/Raffle.t.sol: 30:34-30:46 (823-835)
[007] 00000357: PUSH4 0xc0406226               // test/unit/Raffle.t.sol: 30:34-30:46 (823-835)
[007] 0000035c: PUSH1 0x40                     // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 0000035e: MLOAD                          // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 0000035f: DUP2                           // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 00000360: PUSH4 0xffffffff               // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 00000365: AND                            // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 00000366: PUSH1 0xe0                     // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 00000368: SHL                            // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 00000369: DUP2                           // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 0000036a: MSTORE                         // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 0000036b: PUSH1 0x4                      // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 0000036d: ADD                            // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 0000036e: PUSH1 0x40                     // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 00000370: DUP1                           // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 00000371: MLOAD                          // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 00000372: DUP1                           // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 00000373: DUP4                           // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 00000374: SUB                            // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 00000375: DUP2                           // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 00000376: PUSH1 0x0                      // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 00000378: DUP8                           // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 00000379: GAS                            // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 0000037a: CALL                           // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 0000037b: ISZERO                         // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 0000037c: DUP1                           // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 0000037d: ISZERO                         // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 0000037e: PUSH2 0x38b                    // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 00000381: JUMPI                          // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
      00000382: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
      00000383: PUSH1 0x0                      // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
      00000385: DUP1                           // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
      00000386: RETURNDATACOPY                 // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
      00000387: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
      00000388: PUSH1 0x0                      // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
      0000038a: REVERT                         // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 0000038b: JUMPDEST                       // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 0000038c: POP                            // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 0000038d: POP                            // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 0000038e: POP                            // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 0000038f: POP                            // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 00000390: PUSH1 0x40                     // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 00000392: MLOAD                          // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 00000393: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 00000394: PUSH1 0x1f                     // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 00000396: NOT                            // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 00000397: PUSH1 0x1f                     // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 00000399: DUP3                           // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 0000039a: ADD                            // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 0000039b: AND                            // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 0000039c: DUP3                           // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 0000039d: ADD                            // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 0000039e: DUP1                           // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 0000039f: PUSH1 0x40                     // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 000003a1: MSTORE                         // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 000003a2: POP                            // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 000003a3: DUP2                           // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 000003a4: ADD                            // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 000003a5: SWAP1                          // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 000003a6: PUSH2 0x3af                    // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 000003a9: SWAP2                          // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 000003aa: SWAP1                          // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 000003ab: PUSH2 0x298a                   // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 000003ae: JUMP                           // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 000003af: JUMPDEST                       // test/unit/Raffle.t.sol: 30:34-30:48 (823-837)
[007] 000003b0: PUSH1 0x1e                     // test/unit/Raffle.t.sol: 30:10-30:16 (799-805)
[007] 000003b2: PUSH1 0x1                      // test/unit/Raffle.t.sol: 30:10-30:16 (799-805)
[007] 000003b4: PUSH1 0x1f                     // test/unit/Raffle.t.sol: 30:18-30:30 (807-819)
[007] 000003b6: PUSH1 0x0                      // test/unit/Raffle.t.sol: 30:18-30:30 (807-819)
[007] 000003b8: DUP5                           // test/unit/Raffle.t.sol: 30:9-30:48 (798-837)
[007] 000003b9: SWAP2                          // test/unit/Raffle.t.sol: 30:9-30:48 (798-837)
[007] 000003ba: SWAP1                          // test/unit/Raffle.t.sol: 30:9-30:48 (798-837)
[007] 000003bb: PUSH2 0x100                    // test/unit/Raffle.t.sol: 30:9-30:48 (798-837)
[007] 000003be: EXP                            // test/unit/Raffle.t.sol: 30:9-30:48 (798-837)
[007] 000003bf: DUP2                           // test/unit/Raffle.t.sol: 30:9-30:48 (798-837)
[007] 000003c0: SLOAD                          // test/unit/Raffle.t.sol: 30:9-30:48 (798-837)
[007] 000003c1: DUP2                           // test/unit/Raffle.t.sol: 30:9-30:48 (798-837)
[007] 000003c2: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 30:9-30:48 (798-837)
[007] 000003d7: MUL                            // test/unit/Raffle.t.sol: 30:9-30:48 (798-837)
[007] 000003d8: NOT                            // test/unit/Raffle.t.sol: 30:9-30:48 (798-837)
[007] 000003d9: AND                            // test/unit/Raffle.t.sol: 30:9-30:48 (798-837)
[007] 000003da: SWAP1                          // test/unit/Raffle.t.sol: 30:9-30:48 (798-837)
[007] 000003db: DUP4                           // test/unit/Raffle.t.sol: 30:9-30:48 (798-837)
[007] 000003dc: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 30:9-30:48 (798-837)
[007] 000003f1: AND                            // test/unit/Raffle.t.sol: 30:9-30:48 (798-837)
[007] 000003f2: MUL                            // test/unit/Raffle.t.sol: 30:9-30:48 (798-837)
[007] 000003f3: OR                             // test/unit/Raffle.t.sol: 30:9-30:48 (798-837)
[007] 000003f4: SWAP1                          // test/unit/Raffle.t.sol: 30:9-30:48 (798-837)
[007] 000003f5: SSTORE                         // test/unit/Raffle.t.sol: 30:9-30:48 (798-837)
[007] 000003f6: POP                            // test/unit/Raffle.t.sol: 30:9-30:48 (798-837)
[007] 000003f7: DUP4                           // test/unit/Raffle.t.sol: 30:9-30:48 (798-837)
[007] 000003f8: SWAP2                          // test/unit/Raffle.t.sol: 30:9-30:48 (798-837)
[007] 000003f9: SWAP1                          // test/unit/Raffle.t.sol: 30:9-30:48 (798-837)
[007] 000003fa: PUSH2 0x100                    // test/unit/Raffle.t.sol: 30:9-30:48 (798-837)
[007] 000003fd: EXP                            // test/unit/Raffle.t.sol: 30:9-30:48 (798-837)
[007] 000003fe: DUP2                           // test/unit/Raffle.t.sol: 30:9-30:48 (798-837)
[007] 000003ff: SLOAD                          // test/unit/Raffle.t.sol: 30:9-30:48 (798-837)
[007] 00000400: DUP2                           // test/unit/Raffle.t.sol: 30:9-30:48 (798-837)
[007] 00000401: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 30:9-30:48 (798-837)
[007] 00000416: MUL                            // test/unit/Raffle.t.sol: 30:9-30:48 (798-837)
[007] 00000417: NOT                            // test/unit/Raffle.t.sol: 30:9-30:48 (798-837)
[007] 00000418: AND                            // test/unit/Raffle.t.sol: 30:9-30:48 (798-837)
[007] 00000419: SWAP1                          // test/unit/Raffle.t.sol: 30:9-30:48 (798-837)
[007] 0000041a: DUP4                           // test/unit/Raffle.t.sol: 30:9-30:48 (798-837)
[007] 0000041b: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 30:9-30:48 (798-837)
[007] 00000430: AND                            // test/unit/Raffle.t.sol: 30:9-30:48 (798-837)
[007] 00000431: MUL                            // test/unit/Raffle.t.sol: 30:9-30:48 (798-837)
[007] 00000432: OR                             // test/unit/Raffle.t.sol: 30:9-30:48 (798-837)
[007] 00000433: SWAP1                          // test/unit/Raffle.t.sol: 30:9-30:48 (798-837)
[007] 00000434: SSTORE                         // test/unit/Raffle.t.sol: 30:9-30:48 (798-837)
[007] 00000435: POP                            // test/unit/Raffle.t.sol: 30:9-30:48 (798-837)
[007] 00000436: POP                            // test/unit/Raffle.t.sol: 30:9-30:48 (798-837)
[007] 00000437: POP                            // test/unit/Raffle.t.sol: 30:9-30:48 (798-837)
[007] 00000438: PUSH1 0x1f                     // test/unit/Raffle.t.sol: 38:21-38:33 (1023-1035)
[007] 0000043a: PUSH1 0x0                      // test/unit/Raffle.t.sol: 38:21-38:33 (1023-1035)
[007] 0000043c: SWAP1                          // test/unit/Raffle.t.sol: 38:21-38:33 (1023-1035)
[007] 0000043d: SLOAD                          // test/unit/Raffle.t.sol: 38:21-38:33 (1023-1035)
[007] 0000043e: SWAP1                          // test/unit/Raffle.t.sol: 38:21-38:33 (1023-1035)
[007] 0000043f: PUSH2 0x100                    // test/unit/Raffle.t.sol: 38:21-38:33 (1023-1035)
[007] 00000442: EXP                            // test/unit/Raffle.t.sol: 38:21-38:33 (1023-1035)
[007] 00000443: SWAP1                          // test/unit/Raffle.t.sol: 38:21-38:33 (1023-1035)
[007] 00000444: DIV                            // test/unit/Raffle.t.sol: 38:21-38:33 (1023-1035)
[007] 00000445: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 38:21-38:33 (1023-1035)
[007] 0000045a: AND                            // test/unit/Raffle.t.sol: 38:21-38:33 (1023-1035)
[007] 0000045b: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 38:21-38:53 (1023-1055)
[007] 00000470: AND                            // test/unit/Raffle.t.sol: 38:21-38:53 (1023-1055)
[007] 00000471: PUSH4 0xd7b65745               // test/unit/Raffle.t.sol: 38:21-38:53 (1023-1055)
[007] 00000476: PUSH1 0x40                     // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 00000478: MLOAD                          // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 00000479: DUP2                           // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 0000047a: PUSH4 0xffffffff               // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 0000047f: AND                            // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 00000480: PUSH1 0xe0                     // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 00000482: SHL                            // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 00000483: DUP2                           // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 00000484: MSTORE                         // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 00000485: PUSH1 0x4                      // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 00000487: ADD                            // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 00000488: PUSH1 0xe0                     // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 0000048a: PUSH1 0x40                     // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 0000048c: MLOAD                          // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 0000048d: DUP1                           // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 0000048e: DUP4                           // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 0000048f: SUB                            // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 00000490: DUP2                           // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 00000491: DUP7                           // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 00000492: GAS                            // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 00000493: STATICCALL                     // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 00000494: ISZERO                         // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 00000495: DUP1                           // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 00000496: ISZERO                         // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 00000497: PUSH2 0x4a4                    // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 0000049a: JUMPI                          // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
      0000049b: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
      0000049c: PUSH1 0x0                      // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
      0000049e: DUP1                           // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
      0000049f: RETURNDATACOPY                 // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
      000004a0: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
      000004a1: PUSH1 0x0                      // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
      000004a3: REVERT                         // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 000004a4: JUMPDEST                       // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 000004a5: POP                            // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 000004a6: POP                            // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 000004a7: POP                            // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 000004a8: POP                            // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 000004a9: PUSH1 0x40                     // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 000004ab: MLOAD                          // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 000004ac: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 000004ad: PUSH1 0x1f                     // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 000004af: NOT                            // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 000004b0: PUSH1 0x1f                     // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 000004b2: DUP3                           // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 000004b3: ADD                            // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 000004b4: AND                            // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 000004b5: DUP3                           // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 000004b6: ADD                            // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 000004b7: DUP1                           // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 000004b8: PUSH1 0x40                     // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 000004ba: MSTORE                         // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 000004bb: POP                            // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 000004bc: DUP2                           // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 000004bd: ADD                            // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 000004be: SWAP1                          // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 000004bf: PUSH2 0x4c8                    // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 000004c2: SWAP2                          // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 000004c3: SWAP1                          // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 000004c4: PUSH2 0x2ad4                   // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 000004c7: JUMP                           // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 000004c8: JUMPDEST                       // test/unit/Raffle.t.sol: 38:21-38:55 (1023-1057)
[007] 000004c9: PUSH1 0x20                     // test/unit/Raffle.t.sol: 32:13-32:24 (861-872)
[007] 000004cb: PUSH1 0x0                      // test/unit/Raffle.t.sol: 32:13-32:24 (861-872)
[007] 000004cd: PUSH1 0x21                     // test/unit/Raffle.t.sol: 33:13-33:21 (886-894)
[007] 000004cf: PUSH1 0x0                      // test/unit/Raffle.t.sol: 33:13-33:21 (886-894)
[007] 000004d1: PUSH1 0x22                     // test/unit/Raffle.t.sol: 34:13-34:27 (908-922)
[007] 000004d3: PUSH1 0x0                      // test/unit/Raffle.t.sol: 34:13-34:27 (908-922)
[007] 000004d5: PUSH1 0x23                     // test/unit/Raffle.t.sol: 35:13-35:20 (936-943)
[007] 000004d7: PUSH1 0x0                      // test/unit/Raffle.t.sol: 35:13-35:20 (936-943)
[007] 000004d9: PUSH1 0x24                     // test/unit/Raffle.t.sol: 36:13-36:27 (957-971)
[007] 000004db: PUSH1 0x0                      // test/unit/Raffle.t.sol: 36:13-36:27 (957-971)
[007] 000004dd: PUSH1 0x24                     // test/unit/Raffle.t.sol: 37:13-37:29 (985-1001)
[007] 000004df: PUSH1 0x8                      // test/unit/Raffle.t.sol: 37:13-37:29 (985-1001)
[007] 000004e1: PUSH1 0x24                     // test/unit/Raffle.t.sol: 38:13-38:17 (1015-1019)
[007] 000004e3: PUSH1 0xc                      // test/unit/Raffle.t.sol: 38:13-38:17 (1015-1019)
[007] 000004e5: DUP15                          // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 000004e6: SWAP2                          // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 000004e7: SWAP1                          // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 000004e8: PUSH2 0x100                    // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 000004eb: EXP                            // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 000004ec: DUP2                           // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 000004ed: SLOAD                          // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 000004ee: DUP2                           // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 000004ef: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 00000504: MUL                            // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 00000505: NOT                            // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 00000506: AND                            // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 00000507: SWAP1                          // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 00000508: DUP4                           // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 00000509: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 0000051e: AND                            // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 0000051f: MUL                            // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 00000520: OR                             // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 00000521: SWAP1                          // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 00000522: SSTORE                         // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 00000523: POP                            // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 00000524: DUP14                          // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 00000525: SWAP2                          // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 00000526: SWAP1                          // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 00000527: PUSH2 0x100                    // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 0000052a: EXP                            // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 0000052b: DUP2                           // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 0000052c: SLOAD                          // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 0000052d: DUP2                           // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 0000052e: PUSH4 0xffffffff               // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 00000533: MUL                            // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 00000534: NOT                            // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 00000535: AND                            // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 00000536: SWAP1                          // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 00000537: DUP4                           // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 00000538: PUSH4 0xffffffff               // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 0000053d: AND                            // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 0000053e: MUL                            // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 0000053f: OR                             // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 00000540: SWAP1                          // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 00000541: SSTORE                         // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 00000542: POP                            // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 00000543: DUP13                          // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 00000544: SWAP2                          // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 00000545: SWAP1                          // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 00000546: PUSH2 0x100                    // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 00000549: EXP                            // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 0000054a: DUP2                           // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 0000054b: SLOAD                          // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 0000054c: DUP2                           // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 0000054d: PUSH8 0xffffffffffffffff       // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 00000556: MUL                            // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 00000557: NOT                            // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 00000558: AND                            // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 00000559: SWAP1                          // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 0000055a: DUP4                           // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 0000055b: PUSH8 0xffffffffffffffff       // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 00000564: AND                            // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 00000565: MUL                            // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 00000566: OR                             // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 00000567: SWAP1                          // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 00000568: SSTORE                         // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 00000569: POP                            // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 0000056a: DUP12                          // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 0000056b: SWAP2                          // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 0000056c: SWAP1                          // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 0000056d: POP                            // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 0000056e: SSTORE                         // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 0000056f: DUP11                          // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 00000570: SWAP2                          // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 00000571: SWAP1                          // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 00000572: PUSH2 0x100                    // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 00000575: EXP                            // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 00000576: DUP2                           // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 00000577: SLOAD                          // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 00000578: DUP2                           // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 00000579: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 0000058e: MUL                            // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 0000058f: NOT                            // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 00000590: AND                            // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 00000591: SWAP1                          // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 00000592: DUP4                           // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 00000593: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 000005a8: AND                            // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 000005a9: MUL                            // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 000005aa: OR                             // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 000005ab: SWAP1                          // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 000005ac: SSTORE                         // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 000005ad: POP                            // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 000005ae: DUP10                          // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 000005af: SWAP2                          // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 000005b0: SWAP1                          // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 000005b1: POP                            // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 000005b2: SSTORE                         // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 000005b3: DUP9                           // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 000005b4: SWAP2                          // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 000005b5: SWAP1                          // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 000005b6: POP                            // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 000005b7: SSTORE                         // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 000005b8: POP                            // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 000005b9: POP                            // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 000005ba: POP                            // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 000005bb: POP                            // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 000005bc: POP                            // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 000005bd: POP                            // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 000005be: POP                            // test/unit/Raffle.t.sol: 31:9-38:55 (847-1057)
[007] 000005bf: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/Base.sol: 9:68-9:96 (317-345)
[007] 000005e0: PUSH1 0x0                      // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[007] 000005e2: SHR                            // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[007] 000005e3: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 39:9-39:16 (1067-1074)
[007] 000005f8: AND                            // test/unit/Raffle.t.sol: 39:9-39:16 (1067-1074)
[007] 000005f9: PUSH4 0xc88a5e6d               // test/unit/Raffle.t.sol: 39:9-39:16 (1067-1074)
[007] 000005fe: PUSH1 0x25                     // test/unit/Raffle.t.sol: 39:17-39:23 (1075-1081)
[007] 00000600: PUSH1 0x0                      // test/unit/Raffle.t.sol: 39:17-39:23 (1075-1081)
[007] 00000602: SWAP1                          // test/unit/Raffle.t.sol: 39:17-39:23 (1075-1081)
[007] 00000603: SLOAD                          // test/unit/Raffle.t.sol: 39:17-39:23 (1075-1081)
[007] 00000604: SWAP1                          // test/unit/Raffle.t.sol: 39:17-39:23 (1075-1081)
[007] 00000605: PUSH2 0x100                    // test/unit/Raffle.t.sol: 39:17-39:23 (1075-1081)
[007] 00000608: EXP                            // test/unit/Raffle.t.sol: 39:17-39:23 (1075-1081)
[007] 00000609: SWAP1                          // test/unit/Raffle.t.sol: 39:17-39:23 (1075-1081)
[007] 0000060a: DIV                            // test/unit/Raffle.t.sol: 39:17-39:23 (1075-1081)
[007] 0000060b: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 39:17-39:23 (1075-1081)
[007] 00000620: AND                            // test/unit/Raffle.t.sol: 39:17-39:23 (1075-1081)
[007] 00000621: PUSH8 0x8ac7230489e80000       // test/unit/Raffle.t.sol: 26:53-26:61 (695-703)
[007] 0000062a: PUSH1 0x40                     // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
[007] 0000062c: MLOAD                          // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
[007] 0000062d: DUP4                           // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
[007] 0000062e: PUSH4 0xffffffff               // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
[007] 00000633: AND                            // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
[007] 00000634: PUSH1 0xe0                     // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
[007] 00000636: SHL                            // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
[007] 00000637: DUP2                           // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
[007] 00000638: MSTORE                         // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
[007] 00000639: PUSH1 0x4                      // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
[007] 0000063b: ADD                            // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
[007] 0000063c: PUSH2 0x646                    // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
[007] 0000063f: SWAP3                          // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
[007] 00000640: SWAP2                          // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
[007] 00000641: SWAP1                          // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
[007] 00000642: PUSH2 0x2b76                   // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
[007] 00000645: JUMP                           // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
[007] 00000646: JUMPDEST                       // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
[007] 00000647: PUSH1 0x0                      // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
[007] 00000649: PUSH1 0x40                     // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
[007] 0000064b: MLOAD                          // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
[007] 0000064c: DUP1                           // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
[007] 0000064d: DUP4                           // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
[007] 0000064e: SUB                            // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
[007] 0000064f: DUP2                           // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
[007] 00000650: PUSH1 0x0                      // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
[007] 00000652: DUP8                           // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
[007] 00000653: DUP1                           // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
[007] 00000654: EXTCODESIZE                    // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
[007] 00000655: ISZERO                         // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
[007] 00000656: DUP1                           // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
[007] 00000657: ISZERO                         // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
[007] 00000658: PUSH2 0x660                    // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
[007] 0000065b: JUMPI                          // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
      0000065c: PUSH1 0x0                      // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
      0000065e: DUP1                           // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
      0000065f: REVERT                         // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
[007] 00000660: JUMPDEST                       // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
[007] 00000661: POP                            // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
[007] 00000662: GAS                            // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
[007] 00000663: CALL                           // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
[007] 00000664: ISZERO                         // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
[007] 00000665: DUP1                           // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
[007] 00000666: ISZERO                         // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
[007] 00000667: PUSH2 0x674                    // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
[007] 0000066a: JUMPI                          // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
      0000066b: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
      0000066c: PUSH1 0x0                      // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
      0000066e: DUP1                           // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
      0000066f: RETURNDATACOPY                 // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
      00000670: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
      00000671: PUSH1 0x0                      // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
      00000673: REVERT                         // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
[007] 00000674: JUMPDEST                       // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
[007] 00000675: POP                            // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
[007] 00000676: POP                            // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
[007] 00000677: POP                            // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
[007] 00000678: POP                            // test/unit/Raffle.t.sol: 39:9-39:47 (1067-1105)
[007] 00000679: POP                            // test/unit/Raffle.t.sol: 28:31-40:6 (736-1112)
[007] 0000067a: JUMP                           // test/unit/Raffle.t.sol: 28:5-40:6 (710-1112)
[001] 0000067b: JUMPDEST                       // test/unit/Raffle.t.sol: 42:5-44:6 (1118-1310)
[001] 0000067c: PUSH1 0x0                      // test/unit/Raffle.t.sol: 43:43-43:66 (1218-1241)
[001] 0000067e: PUSH1 0x1                      // test/unit/Raffle.t.sol: 43:16-43:66 (1191-1241)
[001] 00000680: DUP2                           // test/unit/Raffle.t.sol: 43:16-43:66 (1191-1241)
[001] 00000681: GT                             // test/unit/Raffle.t.sol: 43:16-43:66 (1191-1241)
[001] 00000682: ISZERO                         // test/unit/Raffle.t.sol: 43:16-43:66 (1191-1241)
[001] 00000683: PUSH2 0x68f                    // test/unit/Raffle.t.sol: 43:16-43:66 (1191-1241)
[001] 00000686: JUMPI                          // test/unit/Raffle.t.sol: 43:16-43:66 (1191-1241)
      00000687: PUSH2 0x68e                    // test/unit/Raffle.t.sol: 43:16-43:66 (1191-1241)
      0000068a: PUSH2 0x2b9f                   // test/unit/Raffle.t.sol: 43:16-43:66 (1191-1241)
      0000068d: JUMP                           // test/unit/Raffle.t.sol: 43:16-43:66 (1191-1241)
      0000068e: JUMPDEST                       // test/unit/Raffle.t.sol: 43:16-43:66 (1191-1241)
[001] 0000068f: JUMPDEST                       // test/unit/Raffle.t.sol: 43:16-43:66 (1191-1241)
[001] 00000690: PUSH1 0x1e                     // test/unit/Raffle.t.sol: 43:16-43:22 (1191-1197)
[001] 00000692: PUSH1 0x1                      // test/unit/Raffle.t.sol: 43:16-43:22 (1191-1197)
[001] 00000694: SWAP1                          // test/unit/Raffle.t.sol: 43:16-43:22 (1191-1197)
[001] 00000695: SLOAD                          // test/unit/Raffle.t.sol: 43:16-43:22 (1191-1197)
[001] 00000696: SWAP1                          // test/unit/Raffle.t.sol: 43:16-43:22 (1191-1197)
[001] 00000697: PUSH2 0x100                    // test/unit/Raffle.t.sol: 43:16-43:22 (1191-1197)
[001] 0000069a: EXP                            // test/unit/Raffle.t.sol: 43:16-43:22 (1191-1197)
[001] 0000069b: SWAP1                          // test/unit/Raffle.t.sol: 43:16-43:22 (1191-1197)
[001] 0000069c: DIV                            // test/unit/Raffle.t.sol: 43:16-43:22 (1191-1197)
[001] 0000069d: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 43:16-43:22 (1191-1197)
[001] 000006b2: AND                            // test/unit/Raffle.t.sol: 43:16-43:22 (1191-1197)
[001] 000006b3: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 43:16-43:37 (1191-1212)
[001] 000006c8: AND                            // test/unit/Raffle.t.sol: 43:16-43:37 (1191-1212)
[001] 000006c9: PUSH4 0x115cbaf5               // test/unit/Raffle.t.sol: 43:16-43:37 (1191-1212)
[001] 000006ce: PUSH1 0x40                     // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 000006d0: MLOAD                          // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 000006d1: DUP2                           // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 000006d2: PUSH4 0xffffffff               // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 000006d7: AND                            // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 000006d8: PUSH1 0xe0                     // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 000006da: SHL                            // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 000006db: DUP2                           // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 000006dc: MSTORE                         // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 000006dd: PUSH1 0x4                      // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 000006df: ADD                            // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 000006e0: PUSH1 0x20                     // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 000006e2: PUSH1 0x40                     // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 000006e4: MLOAD                          // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 000006e5: DUP1                           // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 000006e6: DUP4                           // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 000006e7: SUB                            // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 000006e8: DUP2                           // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 000006e9: DUP7                           // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 000006ea: GAS                            // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 000006eb: STATICCALL                     // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 000006ec: ISZERO                         // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 000006ed: DUP1                           // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 000006ee: ISZERO                         // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 000006ef: PUSH2 0x6fc                    // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 000006f2: JUMPI                          // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
      000006f3: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
      000006f4: PUSH1 0x0                      // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
      000006f6: DUP1                           // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
      000006f7: RETURNDATACOPY                 // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
      000006f8: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
      000006f9: PUSH1 0x0                      // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
      000006fb: REVERT                         // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 000006fc: JUMPDEST                       // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 000006fd: POP                            // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 000006fe: POP                            // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 000006ff: POP                            // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 00000700: POP                            // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 00000701: PUSH1 0x40                     // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 00000703: MLOAD                          // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 00000704: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 00000705: PUSH1 0x1f                     // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 00000707: NOT                            // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 00000708: PUSH1 0x1f                     // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 0000070a: DUP3                           // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 0000070b: ADD                            // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 0000070c: AND                            // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 0000070d: DUP3                           // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 0000070e: ADD                            // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 0000070f: DUP1                           // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 00000710: PUSH1 0x40                     // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 00000712: MSTORE                         // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 00000713: POP                            // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 00000714: DUP2                           // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 00000715: ADD                            // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 00000716: SWAP1                          // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 00000717: PUSH2 0x720                    // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 0000071a: SWAP2                          // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 0000071b: SWAP1                          // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 0000071c: PUSH2 0x2bf3                   // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 0000071f: JUMP                           // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 00000720: JUMPDEST                       // test/unit/Raffle.t.sol: 43:16-43:39 (1191-1214)
[001] 00000721: PUSH1 0x1                      // test/unit/Raffle.t.sol: 43:16-43:66 (1191-1241)
[001] 00000723: DUP2                           // test/unit/Raffle.t.sol: 43:16-43:66 (1191-1241)
[001] 00000724: GT                             // test/unit/Raffle.t.sol: 43:16-43:66 (1191-1241)
[001] 00000725: ISZERO                         // test/unit/Raffle.t.sol: 43:16-43:66 (1191-1241)
[001] 00000726: PUSH2 0x732                    // test/unit/Raffle.t.sol: 43:16-43:66 (1191-1241)
[001] 00000729: JUMPI                          // test/unit/Raffle.t.sol: 43:16-43:66 (1191-1241)
      0000072a: PUSH2 0x731                    // test/unit/Raffle.t.sol: 43:16-43:66 (1191-1241)
      0000072d: PUSH2 0x2b9f                   // test/unit/Raffle.t.sol: 43:16-43:66 (1191-1241)
      00000730: JUMP                           // test/unit/Raffle.t.sol: 43:16-43:66 (1191-1241)
      00000731: JUMPDEST                       // test/unit/Raffle.t.sol: 43:16-43:66 (1191-1241)
[001] 00000732: JUMPDEST                       // test/unit/Raffle.t.sol: 43:16-43:66 (1191-1241)
[001] 00000733: EQ                             // test/unit/Raffle.t.sol: 43:16-43:66 (1191-1241)
[001] 00000734: PUSH2 0x740                    // test/unit/Raffle.t.sol: 43:9-43:67 (1184-1242)
[001] 00000737: JUMPI                          // test/unit/Raffle.t.sol: 43:9-43:67 (1184-1242)
      00000738: PUSH2 0x73f                    // test/unit/Raffle.t.sol: 43:9-43:67 (1184-1242)
      0000073b: PUSH2 0x2c20                   // test/unit/Raffle.t.sol: 43:9-43:67 (1184-1242)
      0000073e: JUMP                           // test/unit/Raffle.t.sol: 43:9-43:67 (1184-1242)
      0000073f: JUMPDEST                       // test/unit/Raffle.t.sol: 43:9-43:67 (1184-1242)
[001] 00000740: JUMPDEST                       // test/unit/Raffle.t.sol: 43:9-43:67 (1184-1242)
[001] 00000741: JUMP                           // test/unit/Raffle.t.sol: 42:5-44:6 (1118-1310)
      00000742: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 80:5-82:6 (2452-2586)
      00000743: PUSH1 0x60                     // lib/forge-std/src/StdInvariant.sol: 80:52-80:85 (2499-2532)
      00000745: PUSH1 0x16                     // lib/forge-std/src/StdInvariant.sol: 81:28-81:44 (2563-2579)
      00000747: DUP1                           // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      00000748: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      00000749: DUP1                           // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      0000074a: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      0000074c: MUL                            // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      0000074d: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      0000074f: ADD                            // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      00000750: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      00000752: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      00000753: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      00000754: DUP2                           // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      00000755: ADD                            // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      00000756: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      00000758: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      00000759: DUP1                           // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      0000075a: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      0000075b: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      0000075c: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      0000075d: DUP2                           // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      0000075e: DUP2                           // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      0000075f: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      00000760: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      00000762: ADD                            // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      00000763: DUP3                           // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      00000764: DUP1                           // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      00000765: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      00000766: DUP1                           // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      00000767: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      00000768: PUSH2 0x7c6                    // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      0000076b: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      0000076c: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      0000076e: MUL                            // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      0000076f: DUP3                           // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      00000770: ADD                            // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      00000771: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      00000772: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      00000773: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      00000775: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      00000776: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      00000778: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      0000077a: SHA3                           // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      0000077b: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      0000077c: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      0000077d: DUP2                           // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      0000077e: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      00000780: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      00000781: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      00000782: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      00000783: PUSH2 0x100                    // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      00000786: EXP                            // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      00000787: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      00000788: DIV                            // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      00000789: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      0000079e: AND                            // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      0000079f: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      000007b4: AND                            // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      000007b5: DUP2                           // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      000007b6: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      000007b7: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      000007b9: ADD                            // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      000007ba: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      000007bb: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      000007bd: ADD                            // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      000007be: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      000007bf: DUP1                           // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      000007c0: DUP4                           // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      000007c1: GT                             // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      000007c2: PUSH2 0x77c                    // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      000007c5: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      000007c6: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      000007c7: POP                            // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      000007c8: POP                            // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      000007c9: POP                            // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      000007ca: POP                            // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      000007cb: POP                            // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      000007cc: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      000007cd: POP                            // lib/forge-std/src/StdInvariant.sol: 81:9-81:44 (2544-2579)
      000007ce: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 80:5-82:6 (2452-2586)
      000007cf: JUMP                           // lib/forge-std/src/StdInvariant.sol: 80:5-82:6 (2452-2586)
      000007d0: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 104:5-106:6 (3360-3511)
      000007d1: PUSH1 0x60                     // lib/forge-std/src/StdInvariant.sol: 104:54-104:96 (3409-3451)
      000007d3: PUSH1 0x1d                     // lib/forge-std/src/StdInvariant.sol: 105:31-105:50 (3485-3504)
      000007d5: DUP1                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000007d6: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000007d7: DUP1                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000007d8: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000007da: MUL                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000007db: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000007dd: ADD                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000007de: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000007e0: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000007e1: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000007e2: DUP2                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000007e3: ADD                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000007e4: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000007e6: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000007e7: DUP1                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000007e8: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000007e9: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000007ea: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000007eb: DUP2                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000007ec: DUP2                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000007ed: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000007ee: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000007f0: ADD                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000007f1: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000007f3: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000007f4: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000007f5: DUP3                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000007f6: DUP3                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000007f7: LT                             // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000007f8: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000007f9: PUSH2 0x955                    // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000007fc: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000007fd: DUP4                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000007fe: DUP3                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000007ff: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000800: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000802: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000803: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000805: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000807: SHA3                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000808: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000809: PUSH1 0x2                      // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000080b: MUL                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000080c: ADD                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000080d: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000080f: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000810: DUP1                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000811: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000813: ADD                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000814: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000816: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000817: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000818: DUP2                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000819: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000081b: DUP3                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000081c: ADD                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000081d: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000081f: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000820: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000821: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000822: PUSH2 0x100                    // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000825: EXP                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000826: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000827: DIV                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000828: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000083d: AND                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000083e: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000853: AND                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000854: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000869: AND                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000086a: DUP2                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000086b: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000086c: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000086e: ADD                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000086f: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000871: DUP3                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000872: ADD                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000873: DUP1                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000874: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000875: DUP1                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000876: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000878: MUL                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000879: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000087b: ADD                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000087c: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000087e: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000087f: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000880: DUP2                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000881: ADD                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000882: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000884: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000885: DUP1                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000886: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000887: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000888: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000889: DUP2                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000088a: DUP2                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000088b: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000088c: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000088e: ADD                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000088f: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000891: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000892: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000893: DUP3                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000894: DUP3                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000895: LT                             // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000896: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000897: PUSH2 0x93e                    // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000089a: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000089b: DUP4                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000089c: DUP3                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000089d: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000089e: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008a0: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008a1: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008a3: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008a5: SHA3                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008a6: ADD                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008a7: DUP1                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008a8: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008a9: PUSH2 0x8b1                    // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008ac: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008ad: PUSH2 0x2c7e                   // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008b0: JUMP                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008b1: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008b2: DUP1                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008b3: PUSH1 0x1f                     // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008b5: ADD                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008b6: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008b8: DUP1                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008b9: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008ba: DIV                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008bb: MUL                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008bc: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008be: ADD                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008bf: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008c1: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008c2: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008c3: DUP2                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008c4: ADD                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008c5: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008c7: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008c8: DUP1                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008c9: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008ca: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008cb: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008cc: DUP2                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008cd: DUP2                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008ce: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008cf: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008d1: ADD                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008d2: DUP3                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008d3: DUP1                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008d4: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008d5: PUSH2 0x8dd                    // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008d8: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008d9: PUSH2 0x2c7e                   // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008dc: JUMP                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008dd: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008de: DUP1                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008df: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008e0: PUSH2 0x92a                    // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008e3: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008e4: DUP1                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008e5: PUSH1 0x1f                     // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008e7: LT                             // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008e8: PUSH2 0x8ff                    // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008eb: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008ec: PUSH2 0x100                    // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008ef: DUP1                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008f0: DUP4                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008f1: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008f2: DIV                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008f3: MUL                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008f4: DUP4                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008f5: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008f6: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008f7: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008f9: ADD                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008fa: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008fb: PUSH2 0x92a                    // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008fe: JUMP                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      000008ff: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000900: DUP3                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000901: ADD                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000902: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000903: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000904: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000906: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000907: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000909: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000090b: SHA3                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000090c: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000090d: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000090e: DUP2                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000090f: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000910: DUP2                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000911: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000912: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000913: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000915: ADD                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000916: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000917: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000919: ADD                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000091a: DUP1                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000091b: DUP4                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000091c: GT                             // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000091d: PUSH2 0x90d                    // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000920: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000921: DUP3                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000922: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000923: SUB                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000924: PUSH1 0x1f                     // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000926: AND                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000927: DUP3                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000928: ADD                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000929: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000092a: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000092b: POP                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000092c: POP                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000092d: POP                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000092e: POP                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000092f: POP                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000930: DUP2                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000931: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000932: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000934: ADD                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000935: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000936: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000938: ADD                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000939: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000093a: PUSH2 0x892                    // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000093d: JUMP                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000093e: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000093f: POP                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000940: POP                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000941: POP                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000942: POP                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000943: DUP2                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000944: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000945: POP                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000946: POP                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000947: DUP2                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000948: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000949: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000094b: ADD                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000094c: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000094d: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000094f: ADD                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000950: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000951: PUSH2 0x7f4                    // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000954: JUMP                           // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000955: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000956: POP                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000957: POP                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000958: POP                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      00000959: POP                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000095a: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000095b: POP                            // lib/forge-std/src/StdInvariant.sol: 105:9-105:50 (3463-3504)
      0000095c: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 104:5-106:6 (3360-3511)
      0000095d: JUMP                           // lib/forge-std/src/StdInvariant.sol: 104:5-106:6 (3360-3511)
      0000095e: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 100:5-102:6 (3221-3354)
      0000095f: PUSH1 0x60                     // lib/forge-std/src/StdInvariant.sol: 100:51-100:84 (3267-3300)
      00000961: PUSH1 0x18                     // lib/forge-std/src/StdInvariant.sol: 101:28-101:44 (3331-3347)
      00000963: DUP1                           // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      00000964: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      00000965: DUP1                           // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      00000966: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      00000968: MUL                            // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      00000969: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      0000096b: ADD                            // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      0000096c: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      0000096e: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      0000096f: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      00000970: DUP2                           // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      00000971: ADD                            // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      00000972: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      00000974: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      00000975: DUP1                           // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      00000976: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      00000977: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      00000978: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      00000979: DUP2                           // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      0000097a: DUP2                           // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      0000097b: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      0000097c: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      0000097e: ADD                            // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      0000097f: DUP3                           // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      00000980: DUP1                           // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      00000981: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      00000982: DUP1                           // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      00000983: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      00000984: PUSH2 0x9e2                    // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      00000987: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      00000988: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      0000098a: MUL                            // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      0000098b: DUP3                           // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      0000098c: ADD                            // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      0000098d: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      0000098e: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      0000098f: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      00000991: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      00000992: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      00000994: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      00000996: SHA3                           // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      00000997: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      00000998: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      00000999: DUP2                           // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      0000099a: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      0000099c: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      0000099d: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      0000099e: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      0000099f: PUSH2 0x100                    // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      000009a2: EXP                            // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      000009a3: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      000009a4: DIV                            // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      000009a5: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      000009ba: AND                            // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      000009bb: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      000009d0: AND                            // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      000009d1: DUP2                           // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      000009d2: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      000009d3: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      000009d5: ADD                            // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      000009d6: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      000009d7: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      000009d9: ADD                            // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      000009da: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      000009db: DUP1                           // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      000009dc: DUP4                           // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      000009dd: GT                             // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      000009de: PUSH2 0x998                    // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      000009e1: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      000009e2: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      000009e3: POP                            // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      000009e4: POP                            // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      000009e5: POP                            // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      000009e6: POP                            // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      000009e7: POP                            // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      000009e8: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      000009e9: POP                            // lib/forge-std/src/StdInvariant.sol: 101:9-101:44 (3312-3347)
      000009ea: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 100:5-102:6 (3221-3354)
      000009eb: JUMP                           // lib/forge-std/src/StdInvariant.sol: 100:5-102:6 (3221-3354)
      000009ec: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 92:5-94:6 (2922-3063)
      000009ed: PUSH1 0x60                     // lib/forge-std/src/StdInvariant.sol: 92:53-92:88 (2970-3005)
      000009ef: PUSH1 0x17                     // lib/forge-std/src/StdInvariant.sol: 93:30-93:48 (3038-3056)
      000009f1: DUP1                           // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      000009f2: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      000009f3: DUP1                           // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      000009f4: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      000009f6: MUL                            // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      000009f7: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      000009f9: ADD                            // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      000009fa: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      000009fc: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      000009fd: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      000009fe: DUP2                           // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      000009ff: ADD                            // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a00: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a02: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a03: DUP1                           // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a04: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a05: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a06: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a07: DUP2                           // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a08: DUP2                           // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a09: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a0a: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a0c: ADD                            // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a0d: DUP3                           // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a0e: DUP1                           // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a0f: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a10: DUP1                           // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a11: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a12: PUSH2 0xa70                    // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a15: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a16: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a18: MUL                            // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a19: DUP3                           // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a1a: ADD                            // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a1b: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a1c: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a1d: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a1f: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a20: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a22: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a24: SHA3                           // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a25: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a26: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a27: DUP2                           // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a28: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a2a: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a2b: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a2c: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a2d: PUSH2 0x100                    // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a30: EXP                            // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a31: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a32: DIV                            // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a33: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a48: AND                            // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a49: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a5e: AND                            // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a5f: DUP2                           // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a60: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a61: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a63: ADD                            // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a64: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a65: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a67: ADD                            // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a68: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a69: DUP1                           // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a6a: DUP4                           // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a6b: GT                             // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a6c: PUSH2 0xa26                    // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a6f: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a70: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a71: POP                            // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a72: POP                            // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a73: POP                            // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a74: POP                            // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a75: POP                            // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a76: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a77: POP                            // lib/forge-std/src/StdInvariant.sol: 93:9-93:48 (3017-3056)
      00000a78: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 92:5-94:6 (2922-3063)
      00000a79: JUMP                           // lib/forge-std/src/StdInvariant.sol: 92:5-94:6 (2922-3063)
      00000a7a: JUMPDEST                       // test/unit/Raffle.t.sol: 25:5-25:47 (599-641)
      00000a7b: PUSH1 0x25                     // test/unit/Raffle.t.sol: 25:5-25:47 (599-641)
      00000a7d: PUSH1 0x0                      // test/unit/Raffle.t.sol: 25:5-25:47 (599-641)
      00000a7f: SWAP1                          // test/unit/Raffle.t.sol: 25:5-25:47 (599-641)
      00000a80: SLOAD                          // test/unit/Raffle.t.sol: 25:5-25:47 (599-641)
      00000a81: SWAP1                          // test/unit/Raffle.t.sol: 25:5-25:47 (599-641)
      00000a82: PUSH2 0x100                    // test/unit/Raffle.t.sol: 25:5-25:47 (599-641)
      00000a85: EXP                            // test/unit/Raffle.t.sol: 25:5-25:47 (599-641)
      00000a86: SWAP1                          // test/unit/Raffle.t.sol: 25:5-25:47 (599-641)
      00000a87: DIV                            // test/unit/Raffle.t.sol: 25:5-25:47 (599-641)
      00000a88: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 25:5-25:47 (599-641)
      00000a9d: AND                            // test/unit/Raffle.t.sol: 25:5-25:47 (599-641)
      00000a9e: DUP2                           // test/unit/Raffle.t.sol: 25:5-25:47 (599-641)
      00000a9f: JUMP                           // test/unit/Raffle.t.sol: 25:5-25:47 (599-641)
      00000aa0: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 88:5-90:6 (2738-2916)
      00000aa1: PUSH1 0x60                     // lib/forge-std/src/StdInvariant.sol: 88:61-88:109 (2794-2842)
      00000aa3: PUSH1 0x1b                     // lib/forge-std/src/StdInvariant.sol: 89:38-89:64 (2883-2909)
      00000aa5: DUP1                           // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000aa6: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000aa7: DUP1                           // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000aa8: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000aaa: MUL                            // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000aab: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000aad: ADD                            // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000aae: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000ab0: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000ab1: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000ab2: DUP2                           // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000ab3: ADD                            // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000ab4: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000ab6: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000ab7: DUP1                           // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000ab8: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000ab9: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000aba: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000abb: DUP2                           // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000abc: DUP2                           // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000abd: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000abe: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000ac0: ADD                            // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000ac1: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000ac3: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000ac4: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000ac5: DUP3                           // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000ac6: DUP3                           // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000ac7: LT                             // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000ac8: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000ac9: PUSH2 0xbe6                    // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000acc: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000acd: DUP4                           // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000ace: DUP3                           // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000acf: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000ad0: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000ad2: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000ad3: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000ad5: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000ad7: SHA3                           // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000ad8: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000ad9: PUSH1 0x2                      // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000adb: MUL                            // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000adc: ADD                            // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000add: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000adf: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000ae0: DUP1                           // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000ae1: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000ae3: ADD                            // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000ae4: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000ae6: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000ae7: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000ae8: DUP2                           // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000ae9: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000aeb: DUP3                           // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000aec: ADD                            // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000aed: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000aef: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000af0: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000af1: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000af2: PUSH2 0x100                    // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000af5: EXP                            // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000af6: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000af7: DIV                            // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000af8: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b0d: AND                            // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b0e: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b23: AND                            // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b24: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b39: AND                            // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b3a: DUP2                           // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b3b: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b3c: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b3e: ADD                            // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b3f: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b41: DUP3                           // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b42: ADD                            // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b43: DUP1                           // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b44: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b45: DUP1                           // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b46: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b48: MUL                            // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b49: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b4b: ADD                            // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b4c: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b4e: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b4f: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b50: DUP2                           // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b51: ADD                            // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b52: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b54: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b55: DUP1                           // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b56: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b57: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b58: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b59: DUP2                           // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b5a: DUP2                           // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b5b: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b5c: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b5e: ADD                            // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b5f: DUP3                           // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b60: DUP1                           // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b61: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b62: DUP1                           // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b63: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b64: PUSH2 0xbce                    // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b67: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b68: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b6a: MUL                            // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b6b: DUP3                           // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b6c: ADD                            // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b6d: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b6e: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b6f: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b71: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b72: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b74: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b76: SHA3                           // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b77: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b78: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b7a: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b7b: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b7c: DUP3                           // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b7d: DUP3                           // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b7e: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b7f: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b80: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b81: PUSH2 0x100                    // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b84: EXP                            // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b85: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b86: DIV                            // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b87: PUSH1 0xe0                     // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b89: SHL                            // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000b8a: PUSH28 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000ba7: NOT                            // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000ba8: AND                            // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000ba9: DUP2                           // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000baa: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000bab: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000bad: ADD                            // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000bae: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000baf: PUSH1 0x4                      // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000bb1: ADD                            // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000bb2: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000bb3: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000bb5: DUP3                           // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000bb6: PUSH1 0x3                      // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000bb8: ADD                            // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000bb9: DIV                            // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000bba: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000bbb: DUP4                           // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000bbc: ADD                            // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000bbd: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000bbe: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000bc0: SUB                            // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000bc1: DUP3                           // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000bc2: MUL                            // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000bc3: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000bc4: POP                            // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000bc5: DUP1                           // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000bc6: DUP5                           // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000bc7: GT                             // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000bc8: PUSH2 0xb7b                    // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000bcb: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000bcc: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000bcd: POP                            // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000bce: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000bcf: POP                            // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000bd0: POP                            // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000bd1: POP                            // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000bd2: POP                            // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000bd3: POP                            // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000bd4: DUP2                           // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000bd5: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000bd6: POP                            // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000bd7: POP                            // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000bd8: DUP2                           // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000bd9: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000bda: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000bdc: ADD                            // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000bdd: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000bde: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000be0: ADD                            // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000be1: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000be2: PUSH2 0xac4                    // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000be5: JUMP                           // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000be6: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000be7: POP                            // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000be8: POP                            // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000be9: POP                            // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000bea: POP                            // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000beb: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000bec: POP                            // lib/forge-std/src/StdInvariant.sol: 89:9-89:64 (2854-2909)
      00000bed: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 88:5-90:6 (2738-2916)
      00000bee: JUMP                           // lib/forge-std/src/StdInvariant.sol: 88:5-90:6 (2738-2916)
[001] 00000bef: JUMPDEST                       // test/unit/Raffle.t.sol: 71:5-80:6 (2060-2455)
[001] 00000bf0: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/Base.sol: 9:68-9:96 (317-345)
[001] 00000c11: PUSH1 0x0                      // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00000c13: SHR                            // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00000c14: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 72:9-72:17 (2125-2133)
[001] 00000c29: AND                            // test/unit/Raffle.t.sol: 72:9-72:17 (2125-2133)
[001] 00000c2a: PUSH4 0xca669fa7               // test/unit/Raffle.t.sol: 72:9-72:17 (2125-2133)
[001] 00000c2f: PUSH1 0x25                     // test/unit/Raffle.t.sol: 72:18-72:24 (2134-2140)
[001] 00000c31: PUSH1 0x0                      // test/unit/Raffle.t.sol: 72:18-72:24 (2134-2140)
[001] 00000c33: SWAP1                          // test/unit/Raffle.t.sol: 72:18-72:24 (2134-2140)
[001] 00000c34: SLOAD                          // test/unit/Raffle.t.sol: 72:18-72:24 (2134-2140)
[001] 00000c35: SWAP1                          // test/unit/Raffle.t.sol: 72:18-72:24 (2134-2140)
[001] 00000c36: PUSH2 0x100                    // test/unit/Raffle.t.sol: 72:18-72:24 (2134-2140)
[001] 00000c39: EXP                            // test/unit/Raffle.t.sol: 72:18-72:24 (2134-2140)
[001] 00000c3a: SWAP1                          // test/unit/Raffle.t.sol: 72:18-72:24 (2134-2140)
[001] 00000c3b: DIV                            // test/unit/Raffle.t.sol: 72:18-72:24 (2134-2140)
[001] 00000c3c: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 72:18-72:24 (2134-2140)
[001] 00000c51: AND                            // test/unit/Raffle.t.sol: 72:18-72:24 (2134-2140)
[001] 00000c52: PUSH1 0x40                     // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
[001] 00000c54: MLOAD                          // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
[001] 00000c55: DUP3                           // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
[001] 00000c56: PUSH4 0xffffffff               // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
[001] 00000c5b: AND                            // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
[001] 00000c5c: PUSH1 0xe0                     // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
[001] 00000c5e: SHL                            // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
[001] 00000c5f: DUP2                           // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
[001] 00000c60: MSTORE                         // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
[001] 00000c61: PUSH1 0x4                      // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
[001] 00000c63: ADD                            // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
[001] 00000c64: PUSH2 0xc6d                    // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
[001] 00000c67: SWAP2                          // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
[001] 00000c68: SWAP1                          // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
[001] 00000c69: PUSH2 0x25c2                   // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
[001] 00000c6c: JUMP                           // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
[001] 00000c6d: JUMPDEST                       // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
[001] 00000c6e: PUSH1 0x0                      // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
[001] 00000c70: PUSH1 0x40                     // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
[001] 00000c72: MLOAD                          // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
[001] 00000c73: DUP1                           // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
[001] 00000c74: DUP4                           // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
[001] 00000c75: SUB                            // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
[001] 00000c76: DUP2                           // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
[001] 00000c77: PUSH1 0x0                      // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
[001] 00000c79: DUP8                           // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
[001] 00000c7a: DUP1                           // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
[001] 00000c7b: EXTCODESIZE                    // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
[001] 00000c7c: ISZERO                         // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
[001] 00000c7d: DUP1                           // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
[001] 00000c7e: ISZERO                         // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
[001] 00000c7f: PUSH2 0xc87                    // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
[001] 00000c82: JUMPI                          // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
      00000c83: PUSH1 0x0                      // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
      00000c85: DUP1                           // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
      00000c86: REVERT                         // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
[001] 00000c87: JUMPDEST                       // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
[001] 00000c88: POP                            // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
[001] 00000c89: GAS                            // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
[001] 00000c8a: CALL                           // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
[001] 00000c8b: ISZERO                         // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
[001] 00000c8c: DUP1                           // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
[001] 00000c8d: ISZERO                         // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
[001] 00000c8e: PUSH2 0xc9b                    // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
[001] 00000c91: JUMPI                          // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
      00000c92: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
      00000c93: PUSH1 0x0                      // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
      00000c95: DUP1                           // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
      00000c96: RETURNDATACOPY                 // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
      00000c97: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
      00000c98: PUSH1 0x0                      // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
      00000c9a: REVERT                         // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
[001] 00000c9b: JUMPDEST                       // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
[001] 00000c9c: POP                            // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
[001] 00000c9d: POP                            // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
[001] 00000c9e: POP                            // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
[001] 00000c9f: POP                            // test/unit/Raffle.t.sol: 72:9-72:25 (2125-2141)
[001] 00000ca0: PUSH1 0x1e                     // test/unit/Raffle.t.sol: 73:9-73:15 (2151-2157)
[001] 00000ca2: PUSH1 0x1                      // test/unit/Raffle.t.sol: 73:9-73:15 (2151-2157)
[001] 00000ca4: SWAP1                          // test/unit/Raffle.t.sol: 73:9-73:15 (2151-2157)
[001] 00000ca5: SLOAD                          // test/unit/Raffle.t.sol: 73:9-73:15 (2151-2157)
[001] 00000ca6: SWAP1                          // test/unit/Raffle.t.sol: 73:9-73:15 (2151-2157)
[001] 00000ca7: PUSH2 0x100                    // test/unit/Raffle.t.sol: 73:9-73:15 (2151-2157)
[001] 00000caa: EXP                            // test/unit/Raffle.t.sol: 73:9-73:15 (2151-2157)
[001] 00000cab: SWAP1                          // test/unit/Raffle.t.sol: 73:9-73:15 (2151-2157)
[001] 00000cac: DIV                            // test/unit/Raffle.t.sol: 73:9-73:15 (2151-2157)
[001] 00000cad: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 73:9-73:15 (2151-2157)
[001] 00000cc2: AND                            // test/unit/Raffle.t.sol: 73:9-73:15 (2151-2157)
[001] 00000cc3: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 73:9-73:27 (2151-2169)
[001] 00000cd8: AND                            // test/unit/Raffle.t.sol: 73:9-73:27 (2151-2169)
[001] 00000cd9: PUSH4 0x2cfcc539               // test/unit/Raffle.t.sol: 73:9-73:27 (2151-2169)
[001] 00000cde: PUSH1 0x20                     // test/unit/Raffle.t.sol: 73:35-73:46 (2177-2188)
[001] 00000ce0: SLOAD                          // test/unit/Raffle.t.sol: 73:35-73:46 (2177-2188)
[001] 00000ce1: PUSH1 0x40                     // test/unit/Raffle.t.sol: 73:9-73:49 (2151-2191)
[001] 00000ce3: MLOAD                          // test/unit/Raffle.t.sol: 73:9-73:49 (2151-2191)
[001] 00000ce4: DUP3                           // test/unit/Raffle.t.sol: 73:9-73:49 (2151-2191)
[001] 00000ce5: PUSH4 0xffffffff               // test/unit/Raffle.t.sol: 73:9-73:49 (2151-2191)
[001] 00000cea: AND                            // test/unit/Raffle.t.sol: 73:9-73:49 (2151-2191)
[001] 00000ceb: PUSH1 0xe0                     // test/unit/Raffle.t.sol: 73:9-73:49 (2151-2191)
[001] 00000ced: SHL                            // test/unit/Raffle.t.sol: 73:9-73:49 (2151-2191)
[001] 00000cee: DUP2                           // test/unit/Raffle.t.sol: 73:9-73:49 (2151-2191)
[001] 00000cef: MSTORE                         // test/unit/Raffle.t.sol: 73:9-73:49 (2151-2191)
[001] 00000cf0: PUSH1 0x4                      // test/unit/Raffle.t.sol: 73:9-73:49 (2151-2191)
[001] 00000cf2: ADD                            // test/unit/Raffle.t.sol: 73:9-73:49 (2151-2191)
[001] 00000cf3: PUSH1 0x0                      // test/unit/Raffle.t.sol: 73:9-73:49 (2151-2191)
[001] 00000cf5: PUSH1 0x40                     // test/unit/Raffle.t.sol: 73:9-73:49 (2151-2191)
[001] 00000cf7: MLOAD                          // test/unit/Raffle.t.sol: 73:9-73:49 (2151-2191)
[001] 00000cf8: DUP1                           // test/unit/Raffle.t.sol: 73:9-73:49 (2151-2191)
[001] 00000cf9: DUP4                           // test/unit/Raffle.t.sol: 73:9-73:49 (2151-2191)
[001] 00000cfa: SUB                            // test/unit/Raffle.t.sol: 73:9-73:49 (2151-2191)
[001] 00000cfb: DUP2                           // test/unit/Raffle.t.sol: 73:9-73:49 (2151-2191)
[001] 00000cfc: DUP6                           // test/unit/Raffle.t.sol: 73:9-73:49 (2151-2191)
[001] 00000cfd: DUP9                           // test/unit/Raffle.t.sol: 73:9-73:49 (2151-2191)
[001] 00000cfe: DUP1                           // test/unit/Raffle.t.sol: 73:9-73:49 (2151-2191)
[001] 00000cff: EXTCODESIZE                    // test/unit/Raffle.t.sol: 73:9-73:49 (2151-2191)
[001] 00000d00: ISZERO                         // test/unit/Raffle.t.sol: 73:9-73:49 (2151-2191)
[001] 00000d01: DUP1                           // test/unit/Raffle.t.sol: 73:9-73:49 (2151-2191)
[001] 00000d02: ISZERO                         // test/unit/Raffle.t.sol: 73:9-73:49 (2151-2191)
[001] 00000d03: PUSH2 0xd0b                    // test/unit/Raffle.t.sol: 73:9-73:49 (2151-2191)
[001] 00000d06: JUMPI                          // test/unit/Raffle.t.sol: 73:9-73:49 (2151-2191)
      00000d07: PUSH1 0x0                      // test/unit/Raffle.t.sol: 73:9-73:49 (2151-2191)
      00000d09: DUP1                           // test/unit/Raffle.t.sol: 73:9-73:49 (2151-2191)
      00000d0a: REVERT                         // test/unit/Raffle.t.sol: 73:9-73:49 (2151-2191)
[001] 00000d0b: JUMPDEST                       // test/unit/Raffle.t.sol: 73:9-73:49 (2151-2191)
[001] 00000d0c: POP                            // test/unit/Raffle.t.sol: 73:9-73:49 (2151-2191)
[001] 00000d0d: GAS                            // test/unit/Raffle.t.sol: 73:9-73:49 (2151-2191)
[001] 00000d0e: CALL                           // test/unit/Raffle.t.sol: 73:9-73:49 (2151-2191)
[001] 00000d0f: ISZERO                         // test/unit/Raffle.t.sol: 73:9-73:49 (2151-2191)
[001] 00000d10: DUP1                           // test/unit/Raffle.t.sol: 73:9-73:49 (2151-2191)
[001] 00000d11: ISZERO                         // test/unit/Raffle.t.sol: 73:9-73:49 (2151-2191)
[001] 00000d12: PUSH2 0xd1f                    // test/unit/Raffle.t.sol: 73:9-73:49 (2151-2191)
[001] 00000d15: JUMPI                          // test/unit/Raffle.t.sol: 73:9-73:49 (2151-2191)
      00000d16: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 73:9-73:49 (2151-2191)
      00000d17: PUSH1 0x0                      // test/unit/Raffle.t.sol: 73:9-73:49 (2151-2191)
      00000d19: DUP1                           // test/unit/Raffle.t.sol: 73:9-73:49 (2151-2191)
      00000d1a: RETURNDATACOPY                 // test/unit/Raffle.t.sol: 73:9-73:49 (2151-2191)
      00000d1b: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 73:9-73:49 (2151-2191)
      00000d1c: PUSH1 0x0                      // test/unit/Raffle.t.sol: 73:9-73:49 (2151-2191)
      00000d1e: REVERT                         // test/unit/Raffle.t.sol: 73:9-73:49 (2151-2191)
[001] 00000d1f: JUMPDEST                       // test/unit/Raffle.t.sol: 73:9-73:49 (2151-2191)
[001] 00000d20: POP                            // test/unit/Raffle.t.sol: 73:9-73:49 (2151-2191)
[001] 00000d21: POP                            // test/unit/Raffle.t.sol: 73:9-73:49 (2151-2191)
[001] 00000d22: POP                            // test/unit/Raffle.t.sol: 73:9-73:49 (2151-2191)
[001] 00000d23: POP                            // test/unit/Raffle.t.sol: 73:9-73:49 (2151-2191)
[001] 00000d24: POP                            // test/unit/Raffle.t.sol: 73:9-73:49 (2151-2191)
[001] 00000d25: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/Base.sol: 9:68-9:96 (317-345)
[001] 00000d46: PUSH1 0x0                      // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00000d48: SHR                            // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00000d49: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 74:9-74:16 (2201-2208)
[001] 00000d5e: AND                            // test/unit/Raffle.t.sol: 74:9-74:16 (2201-2208)
[001] 00000d5f: PUSH4 0xe5d6bf02               // test/unit/Raffle.t.sol: 74:9-74:16 (2201-2208)
[001] 00000d64: PUSH1 0x1                      // test/unit/Raffle.t.sol: 74:46-74:47 (2238-2239)
[001] 00000d66: PUSH1 0x21                     // test/unit/Raffle.t.sol: 74:35-74:43 (2227-2235)
[001] 00000d68: SLOAD                          // test/unit/Raffle.t.sol: 74:35-74:43 (2227-2235)
[001] 00000d69: TIMESTAMP                      // test/unit/Raffle.t.sol: 74:17-74:32 (2209-2224)
[001] 00000d6a: PUSH2 0xd73                    // test/unit/Raffle.t.sol: 74:17-74:43 (2209-2235)
[001] 00000d6d: SWAP2                          // test/unit/Raffle.t.sol: 74:17-74:43 (2209-2235)
[001] 00000d6e: SWAP1                          // test/unit/Raffle.t.sol: 74:17-74:43 (2209-2235)
[001] 00000d6f: PUSH2 0x2cde                   // test/unit/Raffle.t.sol: 74:17-74:43 (2209-2235)
[001] 00000d72: JUMP                           // test/unit/Raffle.t.sol: 74:17-74:43 (2209-2235)
[001] 00000d73: JUMPDEST                       // test/unit/Raffle.t.sol: 74:17-74:43 (2209-2235)
[001] 00000d74: PUSH2 0xd7d                    // test/unit/Raffle.t.sol: 74:17-74:47 (2209-2239)
[001] 00000d77: SWAP2                          // test/unit/Raffle.t.sol: 74:17-74:47 (2209-2239)
[001] 00000d78: SWAP1                          // test/unit/Raffle.t.sol: 74:17-74:47 (2209-2239)
[001] 00000d79: PUSH2 0x2cde                   // test/unit/Raffle.t.sol: 74:17-74:47 (2209-2239)
[001] 00000d7c: JUMP                           // test/unit/Raffle.t.sol: 74:17-74:47 (2209-2239)
[001] 00000d7d: JUMPDEST                       // test/unit/Raffle.t.sol: 74:17-74:47 (2209-2239)
[001] 00000d7e: PUSH1 0x40                     // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
[001] 00000d80: MLOAD                          // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
[001] 00000d81: DUP3                           // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
[001] 00000d82: PUSH4 0xffffffff               // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
[001] 00000d87: AND                            // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
[001] 00000d88: PUSH1 0xe0                     // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
[001] 00000d8a: SHL                            // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
[001] 00000d8b: DUP2                           // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
[001] 00000d8c: MSTORE                         // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
[001] 00000d8d: PUSH1 0x4                      // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
[001] 00000d8f: ADD                            // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
[001] 00000d90: PUSH2 0xd99                    // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
[001] 00000d93: SWAP2                          // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
[001] 00000d94: SWAP1                          // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
[001] 00000d95: PUSH2 0x2801                   // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
[001] 00000d98: JUMP                           // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
[001] 00000d99: JUMPDEST                       // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
[001] 00000d9a: PUSH1 0x0                      // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
[001] 00000d9c: PUSH1 0x40                     // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
[001] 00000d9e: MLOAD                          // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
[001] 00000d9f: DUP1                           // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
[001] 00000da0: DUP4                           // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
[001] 00000da1: SUB                            // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
[001] 00000da2: DUP2                           // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
[001] 00000da3: PUSH1 0x0                      // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
[001] 00000da5: DUP8                           // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
[001] 00000da6: DUP1                           // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
[001] 00000da7: EXTCODESIZE                    // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
[001] 00000da8: ISZERO                         // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
[001] 00000da9: DUP1                           // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
[001] 00000daa: ISZERO                         // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
[001] 00000dab: PUSH2 0xdb3                    // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
[001] 00000dae: JUMPI                          // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
      00000daf: PUSH1 0x0                      // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
      00000db1: DUP1                           // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
      00000db2: REVERT                         // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
[001] 00000db3: JUMPDEST                       // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
[001] 00000db4: POP                            // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
[001] 00000db5: GAS                            // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
[001] 00000db6: CALL                           // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
[001] 00000db7: ISZERO                         // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
[001] 00000db8: DUP1                           // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
[001] 00000db9: ISZERO                         // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
[001] 00000dba: PUSH2 0xdc7                    // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
[001] 00000dbd: JUMPI                          // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
      00000dbe: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
      00000dbf: PUSH1 0x0                      // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
      00000dc1: DUP1                           // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
      00000dc2: RETURNDATACOPY                 // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
      00000dc3: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
      00000dc4: PUSH1 0x0                      // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
      00000dc6: REVERT                         // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
[001] 00000dc7: JUMPDEST                       // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
[001] 00000dc8: POP                            // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
[001] 00000dc9: POP                            // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
[001] 00000dca: POP                            // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
[001] 00000dcb: POP                            // test/unit/Raffle.t.sol: 74:9-74:48 (2201-2240)
[001] 00000dcc: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/Base.sol: 9:68-9:96 (317-345)
[001] 00000ded: PUSH1 0x0                      // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00000def: SHR                            // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00000df0: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 75:9-75:16 (2250-2257)
[001] 00000e05: AND                            // test/unit/Raffle.t.sol: 75:9-75:16 (2250-2257)
[001] 00000e06: PUSH4 0x1f7b4f30               // test/unit/Raffle.t.sol: 75:9-75:16 (2250-2257)
[001] 00000e0b: PUSH1 0x1                      // test/unit/Raffle.t.sol: 75:32-75:33 (2273-2274)
[001] 00000e0d: NUMBER                         // test/unit/Raffle.t.sol: 75:17-75:29 (2258-2270)
[001] 00000e0e: PUSH2 0xe17                    // test/unit/Raffle.t.sol: 75:17-75:33 (2258-2274)
[001] 00000e11: SWAP2                          // test/unit/Raffle.t.sol: 75:17-75:33 (2258-2274)
[001] 00000e12: SWAP1                          // test/unit/Raffle.t.sol: 75:17-75:33 (2258-2274)
[001] 00000e13: PUSH2 0x2cde                   // test/unit/Raffle.t.sol: 75:17-75:33 (2258-2274)
[001] 00000e16: JUMP                           // test/unit/Raffle.t.sol: 75:17-75:33 (2258-2274)
[001] 00000e17: JUMPDEST                       // test/unit/Raffle.t.sol: 75:17-75:33 (2258-2274)
[001] 00000e18: PUSH1 0x40                     // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
[001] 00000e1a: MLOAD                          // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
[001] 00000e1b: DUP3                           // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
[001] 00000e1c: PUSH4 0xffffffff               // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
[001] 00000e21: AND                            // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
[001] 00000e22: PUSH1 0xe0                     // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
[001] 00000e24: SHL                            // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
[001] 00000e25: DUP2                           // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
[001] 00000e26: MSTORE                         // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
[001] 00000e27: PUSH1 0x4                      // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
[001] 00000e29: ADD                            // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
[001] 00000e2a: PUSH2 0xe33                    // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
[001] 00000e2d: SWAP2                          // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
[001] 00000e2e: SWAP1                          // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
[001] 00000e2f: PUSH2 0x2801                   // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
[001] 00000e32: JUMP                           // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
[001] 00000e33: JUMPDEST                       // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
[001] 00000e34: PUSH1 0x0                      // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
[001] 00000e36: PUSH1 0x40                     // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
[001] 00000e38: MLOAD                          // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
[001] 00000e39: DUP1                           // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
[001] 00000e3a: DUP4                           // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
[001] 00000e3b: SUB                            // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
[001] 00000e3c: DUP2                           // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
[001] 00000e3d: PUSH1 0x0                      // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
[001] 00000e3f: DUP8                           // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
[001] 00000e40: DUP1                           // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
[001] 00000e41: EXTCODESIZE                    // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
[001] 00000e42: ISZERO                         // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
[001] 00000e43: DUP1                           // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
[001] 00000e44: ISZERO                         // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
[001] 00000e45: PUSH2 0xe4d                    // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
[001] 00000e48: JUMPI                          // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
      00000e49: PUSH1 0x0                      // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
      00000e4b: DUP1                           // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
      00000e4c: REVERT                         // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
[001] 00000e4d: JUMPDEST                       // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
[001] 00000e4e: POP                            // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
[001] 00000e4f: GAS                            // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
[001] 00000e50: CALL                           // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
[001] 00000e51: ISZERO                         // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
[001] 00000e52: DUP1                           // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
[001] 00000e53: ISZERO                         // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
[001] 00000e54: PUSH2 0xe61                    // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
[001] 00000e57: JUMPI                          // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
      00000e58: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
      00000e59: PUSH1 0x0                      // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
      00000e5b: DUP1                           // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
      00000e5c: RETURNDATACOPY                 // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
      00000e5d: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
      00000e5e: PUSH1 0x0                      // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
      00000e60: REVERT                         // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
[001] 00000e61: JUMPDEST                       // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
[001] 00000e62: POP                            // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
[001] 00000e63: POP                            // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
[001] 00000e64: POP                            // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
[001] 00000e65: POP                            // test/unit/Raffle.t.sol: 75:9-75:34 (2250-2275)
[001] 00000e66: PUSH1 0x1e                     // test/unit/Raffle.t.sol: 76:9-76:15 (2285-2291)
[001] 00000e68: PUSH1 0x1                      // test/unit/Raffle.t.sol: 76:9-76:15 (2285-2291)
[001] 00000e6a: SWAP1                          // test/unit/Raffle.t.sol: 76:9-76:15 (2285-2291)
[001] 00000e6b: SLOAD                          // test/unit/Raffle.t.sol: 76:9-76:15 (2285-2291)
[001] 00000e6c: SWAP1                          // test/unit/Raffle.t.sol: 76:9-76:15 (2285-2291)
[001] 00000e6d: PUSH2 0x100                    // test/unit/Raffle.t.sol: 76:9-76:15 (2285-2291)
[001] 00000e70: EXP                            // test/unit/Raffle.t.sol: 76:9-76:15 (2285-2291)
[001] 00000e71: SWAP1                          // test/unit/Raffle.t.sol: 76:9-76:15 (2285-2291)
[001] 00000e72: DIV                            // test/unit/Raffle.t.sol: 76:9-76:15 (2285-2291)
[001] 00000e73: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 76:9-76:15 (2285-2291)
[001] 00000e88: AND                            // test/unit/Raffle.t.sol: 76:9-76:15 (2285-2291)
[001] 00000e89: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 76:9-76:28 (2285-2304)
[001] 00000e9e: AND                            // test/unit/Raffle.t.sol: 76:9-76:28 (2285-2304)
[001] 00000e9f: PUSH4 0xf21fbe0f               // test/unit/Raffle.t.sol: 76:9-76:28 (2285-2304)
[001] 00000ea4: PUSH1 0x40                     // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
[001] 00000ea6: MLOAD                          // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
[001] 00000ea7: DUP2                           // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
[001] 00000ea8: PUSH4 0xffffffff               // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
[001] 00000ead: AND                            // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
[001] 00000eae: PUSH1 0xe0                     // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
[001] 00000eb0: SHL                            // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
[001] 00000eb1: DUP2                           // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
[001] 00000eb2: MSTORE                         // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
[001] 00000eb3: PUSH1 0x4                      // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
[001] 00000eb5: ADD                            // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
[001] 00000eb6: PUSH2 0xebe                    // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
[001] 00000eb9: SWAP1                          // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
[001] 00000eba: PUSH2 0x2d49                   // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
[001] 00000ebd: JUMP                           // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
[001] 00000ebe: JUMPDEST                       // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
[001] 00000ebf: PUSH1 0x0                      // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
[001] 00000ec1: PUSH1 0x40                     // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
[001] 00000ec3: MLOAD                          // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
[001] 00000ec4: DUP1                           // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
[001] 00000ec5: DUP4                           // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
[001] 00000ec6: SUB                            // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
[001] 00000ec7: DUP2                           // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
[001] 00000ec8: PUSH1 0x0                      // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
[001] 00000eca: DUP8                           // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
[001] 00000ecb: DUP1                           // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
[001] 00000ecc: EXTCODESIZE                    // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
[001] 00000ecd: ISZERO                         // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
[001] 00000ece: DUP1                           // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
[001] 00000ecf: ISZERO                         // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
[001] 00000ed0: PUSH2 0xed8                    // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
[001] 00000ed3: JUMPI                          // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
      00000ed4: PUSH1 0x0                      // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
      00000ed6: DUP1                           // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
      00000ed7: REVERT                         // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
[001] 00000ed8: JUMPDEST                       // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
[001] 00000ed9: POP                            // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
[001] 00000eda: GAS                            // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
[001] 00000edb: CALL                           // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
[001] 00000edc: ISZERO                         // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
[001] 00000edd: DUP1                           // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
[001] 00000ede: ISZERO                         // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
[001] 00000edf: PUSH2 0xeec                    // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
[001] 00000ee2: JUMPI                          // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
      00000ee3: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
      00000ee4: PUSH1 0x0                      // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
      00000ee6: DUP1                           // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
      00000ee7: RETURNDATACOPY                 // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
      00000ee8: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
      00000ee9: PUSH1 0x0                      // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
      00000eeb: REVERT                         // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
[001] 00000eec: JUMPDEST                       // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
[001] 00000eed: POP                            // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
[001] 00000eee: POP                            // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
[001] 00000eef: POP                            // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
[001] 00000ef0: POP                            // test/unit/Raffle.t.sol: 76:9-76:32 (2285-2308)
[001] 00000ef1: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/Base.sol: 9:68-9:96 (317-345)
[001] 00000f12: PUSH1 0x0                      // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00000f14: SHR                            // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00000f15: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 77:9-77:24 (2318-2333)
[001] 00000f2a: AND                            // test/unit/Raffle.t.sol: 77:9-77:24 (2318-2333)
[001] 00000f2b: PUSH4 0xc31eb0e0               // test/unit/Raffle.t.sol: 77:9-77:24 (2318-2333)
[001] 00000f30: PUSH4 0xd24a2714               // test/unit/Raffle.t.sol: 77:25-77:62 (2334-2371)
[001] 00000f35: PUSH1 0xe0                     // test/unit/Raffle.t.sol: 77:25-77:62 (2334-2371)
[001] 00000f37: SHL                            // test/unit/Raffle.t.sol: 77:25-77:62 (2334-2371)
[001] 00000f38: PUSH1 0x40                     // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
[001] 00000f3a: MLOAD                          // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
[001] 00000f3b: DUP3                           // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
[001] 00000f3c: PUSH4 0xffffffff               // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
[001] 00000f41: AND                            // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
[001] 00000f42: PUSH1 0xe0                     // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
[001] 00000f44: SHL                            // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
[001] 00000f45: DUP2                           // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
[001] 00000f46: MSTORE                         // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
[001] 00000f47: PUSH1 0x4                      // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
[001] 00000f49: ADD                            // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
[001] 00000f4a: PUSH2 0xf53                    // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
[001] 00000f4d: SWAP2                          // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
[001] 00000f4e: SWAP1                          // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
[001] 00000f4f: PUSH2 0x2d78                   // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
[001] 00000f52: JUMP                           // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
[001] 00000f53: JUMPDEST                       // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
[001] 00000f54: PUSH1 0x0                      // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
[001] 00000f56: PUSH1 0x40                     // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
[001] 00000f58: MLOAD                          // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
[001] 00000f59: DUP1                           // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
[001] 00000f5a: DUP4                           // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
[001] 00000f5b: SUB                            // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
[001] 00000f5c: DUP2                           // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
[001] 00000f5d: PUSH1 0x0                      // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
[001] 00000f5f: DUP8                           // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
[001] 00000f60: DUP1                           // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
[001] 00000f61: EXTCODESIZE                    // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
[001] 00000f62: ISZERO                         // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
[001] 00000f63: DUP1                           // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
[001] 00000f64: ISZERO                         // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
[001] 00000f65: PUSH2 0xf6d                    // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
[001] 00000f68: JUMPI                          // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
      00000f69: PUSH1 0x0                      // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
      00000f6b: DUP1                           // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
      00000f6c: REVERT                         // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
[001] 00000f6d: JUMPDEST                       // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
[001] 00000f6e: POP                            // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
[001] 00000f6f: GAS                            // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
[001] 00000f70: CALL                           // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
[001] 00000f71: ISZERO                         // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
[001] 00000f72: DUP1                           // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
[001] 00000f73: ISZERO                         // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
[001] 00000f74: PUSH2 0xf81                    // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
[001] 00000f77: JUMPI                          // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
      00000f78: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
      00000f79: PUSH1 0x0                      // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
      00000f7b: DUP1                           // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
      00000f7c: RETURNDATACOPY                 // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
      00000f7d: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
      00000f7e: PUSH1 0x0                      // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
      00000f80: REVERT                         // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
[001] 00000f81: JUMPDEST                       // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
[001] 00000f82: POP                            // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
[001] 00000f83: POP                            // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
[001] 00000f84: POP                            // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
[001] 00000f85: POP                            // test/unit/Raffle.t.sol: 77:9-77:63 (2318-2372)
[001] 00000f86: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/Base.sol: 9:68-9:96 (317-345)
[001] 00000fa7: PUSH1 0x0                      // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00000fa9: SHR                            // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00000faa: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 78:9-78:17 (2382-2390)
[001] 00000fbf: AND                            // test/unit/Raffle.t.sol: 78:9-78:17 (2382-2390)
[001] 00000fc0: PUSH4 0xca669fa7               // test/unit/Raffle.t.sol: 78:9-78:17 (2382-2390)
[001] 00000fc5: PUSH1 0x25                     // test/unit/Raffle.t.sol: 78:18-78:24 (2391-2397)
[001] 00000fc7: PUSH1 0x0                      // test/unit/Raffle.t.sol: 78:18-78:24 (2391-2397)
[001] 00000fc9: SWAP1                          // test/unit/Raffle.t.sol: 78:18-78:24 (2391-2397)
[001] 00000fca: SLOAD                          // test/unit/Raffle.t.sol: 78:18-78:24 (2391-2397)
[001] 00000fcb: SWAP1                          // test/unit/Raffle.t.sol: 78:18-78:24 (2391-2397)
[001] 00000fcc: PUSH2 0x100                    // test/unit/Raffle.t.sol: 78:18-78:24 (2391-2397)
[001] 00000fcf: EXP                            // test/unit/Raffle.t.sol: 78:18-78:24 (2391-2397)
[001] 00000fd0: SWAP1                          // test/unit/Raffle.t.sol: 78:18-78:24 (2391-2397)
[001] 00000fd1: DIV                            // test/unit/Raffle.t.sol: 78:18-78:24 (2391-2397)
[001] 00000fd2: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 78:18-78:24 (2391-2397)
[001] 00000fe7: AND                            // test/unit/Raffle.t.sol: 78:18-78:24 (2391-2397)
[001] 00000fe8: PUSH1 0x40                     // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
[001] 00000fea: MLOAD                          // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
[001] 00000feb: DUP3                           // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
[001] 00000fec: PUSH4 0xffffffff               // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
[001] 00000ff1: AND                            // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
[001] 00000ff2: PUSH1 0xe0                     // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
[001] 00000ff4: SHL                            // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
[001] 00000ff5: DUP2                           // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
[001] 00000ff6: MSTORE                         // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
[001] 00000ff7: PUSH1 0x4                      // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
[001] 00000ff9: ADD                            // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
[001] 00000ffa: PUSH2 0x1003                   // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
[001] 00000ffd: SWAP2                          // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
[001] 00000ffe: SWAP1                          // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
[001] 00000fff: PUSH2 0x25c2                   // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
[001] 00001002: JUMP                           // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
[001] 00001003: JUMPDEST                       // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
[001] 00001004: PUSH1 0x0                      // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
[001] 00001006: PUSH1 0x40                     // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
[001] 00001008: MLOAD                          // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
[001] 00001009: DUP1                           // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
[001] 0000100a: DUP4                           // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
[001] 0000100b: SUB                            // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
[001] 0000100c: DUP2                           // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
[001] 0000100d: PUSH1 0x0                      // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
[001] 0000100f: DUP8                           // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
[001] 00001010: DUP1                           // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
[001] 00001011: EXTCODESIZE                    // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
[001] 00001012: ISZERO                         // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
[001] 00001013: DUP1                           // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
[001] 00001014: ISZERO                         // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
[001] 00001015: PUSH2 0x101d                   // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
[001] 00001018: JUMPI                          // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
      00001019: PUSH1 0x0                      // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
      0000101b: DUP1                           // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
      0000101c: REVERT                         // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
[001] 0000101d: JUMPDEST                       // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
[001] 0000101e: POP                            // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
[001] 0000101f: GAS                            // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
[001] 00001020: CALL                           // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
[001] 00001021: ISZERO                         // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
[001] 00001022: DUP1                           // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
[001] 00001023: ISZERO                         // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
[001] 00001024: PUSH2 0x1031                   // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
[001] 00001027: JUMPI                          // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
      00001028: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
      00001029: PUSH1 0x0                      // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
      0000102b: DUP1                           // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
      0000102c: RETURNDATACOPY                 // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
      0000102d: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
      0000102e: PUSH1 0x0                      // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
      00001030: REVERT                         // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
[001] 00001031: JUMPDEST                       // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
[001] 00001032: POP                            // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
[001] 00001033: POP                            // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
[001] 00001034: POP                            // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
[001] 00001035: POP                            // test/unit/Raffle.t.sol: 78:9-78:25 (2382-2398)
[001] 00001036: PUSH1 0x1e                     // test/unit/Raffle.t.sol: 79:9-79:15 (2408-2414)
[001] 00001038: PUSH1 0x1                      // test/unit/Raffle.t.sol: 79:9-79:15 (2408-2414)
[001] 0000103a: SWAP1                          // test/unit/Raffle.t.sol: 79:9-79:15 (2408-2414)
[001] 0000103b: SLOAD                          // test/unit/Raffle.t.sol: 79:9-79:15 (2408-2414)
[001] 0000103c: SWAP1                          // test/unit/Raffle.t.sol: 79:9-79:15 (2408-2414)
[001] 0000103d: PUSH2 0x100                    // test/unit/Raffle.t.sol: 79:9-79:15 (2408-2414)
[001] 00001040: EXP                            // test/unit/Raffle.t.sol: 79:9-79:15 (2408-2414)
[001] 00001041: SWAP1                          // test/unit/Raffle.t.sol: 79:9-79:15 (2408-2414)
[001] 00001042: DIV                            // test/unit/Raffle.t.sol: 79:9-79:15 (2408-2414)
[001] 00001043: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 79:9-79:15 (2408-2414)
[001] 00001058: AND                            // test/unit/Raffle.t.sol: 79:9-79:15 (2408-2414)
[001] 00001059: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 79:9-79:27 (2408-2426)
[001] 0000106e: AND                            // test/unit/Raffle.t.sol: 79:9-79:27 (2408-2426)
[001] 0000106f: PUSH4 0x2cfcc539               // test/unit/Raffle.t.sol: 79:9-79:27 (2408-2426)
[001] 00001074: PUSH1 0x20                     // test/unit/Raffle.t.sol: 79:35-79:46 (2434-2445)
[001] 00001076: SLOAD                          // test/unit/Raffle.t.sol: 79:35-79:46 (2434-2445)
[001] 00001077: PUSH1 0x40                     // test/unit/Raffle.t.sol: 79:9-79:49 (2408-2448)
[001] 00001079: MLOAD                          // test/unit/Raffle.t.sol: 79:9-79:49 (2408-2448)
[001] 0000107a: DUP3                           // test/unit/Raffle.t.sol: 79:9-79:49 (2408-2448)
[001] 0000107b: PUSH4 0xffffffff               // test/unit/Raffle.t.sol: 79:9-79:49 (2408-2448)
[001] 00001080: AND                            // test/unit/Raffle.t.sol: 79:9-79:49 (2408-2448)
[001] 00001081: PUSH1 0xe0                     // test/unit/Raffle.t.sol: 79:9-79:49 (2408-2448)
[001] 00001083: SHL                            // test/unit/Raffle.t.sol: 79:9-79:49 (2408-2448)
[001] 00001084: DUP2                           // test/unit/Raffle.t.sol: 79:9-79:49 (2408-2448)
[001] 00001085: MSTORE                         // test/unit/Raffle.t.sol: 79:9-79:49 (2408-2448)
[001] 00001086: PUSH1 0x4                      // test/unit/Raffle.t.sol: 79:9-79:49 (2408-2448)
[001] 00001088: ADD                            // test/unit/Raffle.t.sol: 79:9-79:49 (2408-2448)
[001] 00001089: PUSH1 0x0                      // test/unit/Raffle.t.sol: 79:9-79:49 (2408-2448)
[001] 0000108b: PUSH1 0x40                     // test/unit/Raffle.t.sol: 79:9-79:49 (2408-2448)
[001] 0000108d: MLOAD                          // test/unit/Raffle.t.sol: 79:9-79:49 (2408-2448)
[001] 0000108e: DUP1                           // test/unit/Raffle.t.sol: 79:9-79:49 (2408-2448)
[001] 0000108f: DUP4                           // test/unit/Raffle.t.sol: 79:9-79:49 (2408-2448)
[001] 00001090: SUB                            // test/unit/Raffle.t.sol: 79:9-79:49 (2408-2448)
[001] 00001091: DUP2                           // test/unit/Raffle.t.sol: 79:9-79:49 (2408-2448)
[001] 00001092: DUP6                           // test/unit/Raffle.t.sol: 79:9-79:49 (2408-2448)
[001] 00001093: DUP9                           // test/unit/Raffle.t.sol: 79:9-79:49 (2408-2448)
[001] 00001094: DUP1                           // test/unit/Raffle.t.sol: 79:9-79:49 (2408-2448)
[001] 00001095: EXTCODESIZE                    // test/unit/Raffle.t.sol: 79:9-79:49 (2408-2448)
[001] 00001096: ISZERO                         // test/unit/Raffle.t.sol: 79:9-79:49 (2408-2448)
[001] 00001097: DUP1                           // test/unit/Raffle.t.sol: 79:9-79:49 (2408-2448)
[001] 00001098: ISZERO                         // test/unit/Raffle.t.sol: 79:9-79:49 (2408-2448)
[001] 00001099: PUSH2 0x10a1                   // test/unit/Raffle.t.sol: 79:9-79:49 (2408-2448)
[001] 0000109c: JUMPI                          // test/unit/Raffle.t.sol: 79:9-79:49 (2408-2448)
      0000109d: PUSH1 0x0                      // test/unit/Raffle.t.sol: 79:9-79:49 (2408-2448)
      0000109f: DUP1                           // test/unit/Raffle.t.sol: 79:9-79:49 (2408-2448)
      000010a0: REVERT                         // test/unit/Raffle.t.sol: 79:9-79:49 (2408-2448)
[001] 000010a1: JUMPDEST                       // test/unit/Raffle.t.sol: 79:9-79:49 (2408-2448)
[001] 000010a2: POP                            // test/unit/Raffle.t.sol: 79:9-79:49 (2408-2448)
[001] 000010a3: GAS                            // test/unit/Raffle.t.sol: 79:9-79:49 (2408-2448)
[001] 000010a4: CALL                           // test/unit/Raffle.t.sol: 79:9-79:49 (2408-2448)
[001] 000010a5: ISZERO                         // test/unit/Raffle.t.sol: 79:9-79:49 (2408-2448)
[001] 000010a6: DUP1                           // test/unit/Raffle.t.sol: 79:9-79:49 (2408-2448)
[001] 000010a7: ISZERO                         // test/unit/Raffle.t.sol: 79:9-79:49 (2408-2448)
[001] 000010a8: PUSH2 0x10b5                   // test/unit/Raffle.t.sol: 79:9-79:49 (2408-2448)
[001] 000010ab: JUMPI                          // test/unit/Raffle.t.sol: 79:9-79:49 (2408-2448)
      000010ac: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 79:9-79:49 (2408-2448)
      000010ad: PUSH1 0x0                      // test/unit/Raffle.t.sol: 79:9-79:49 (2408-2448)
      000010af: DUP1                           // test/unit/Raffle.t.sol: 79:9-79:49 (2408-2448)
      000010b0: RETURNDATACOPY                 // test/unit/Raffle.t.sol: 79:9-79:49 (2408-2448)
      000010b1: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 79:9-79:49 (2408-2448)
      000010b2: PUSH1 0x0                      // test/unit/Raffle.t.sol: 79:9-79:49 (2408-2448)
      000010b4: REVERT                         // test/unit/Raffle.t.sol: 79:9-79:49 (2408-2448)
[001] 000010b5: JUMPDEST                       // test/unit/Raffle.t.sol: 79:9-79:49 (2408-2448)
[001] 000010b6: POP                            // test/unit/Raffle.t.sol: 79:9-79:49 (2408-2448)
[001] 000010b7: POP                            // test/unit/Raffle.t.sol: 79:9-79:49 (2408-2448)
[001] 000010b8: POP                            // test/unit/Raffle.t.sol: 79:9-79:49 (2408-2448)
[001] 000010b9: POP                            // test/unit/Raffle.t.sol: 79:9-79:49 (2408-2448)
[001] 000010ba: POP                            // test/unit/Raffle.t.sol: 79:9-79:49 (2408-2448)
[001] 000010bb: JUMP                           // test/unit/Raffle.t.sol: 71:5-80:6 (2060-2455)
      000010bc: JUMPDEST                       // test/unit/Raffle.t.sol: 26:5-26:61 (647-703)
      000010bd: PUSH8 0x8ac7230489e80000       // test/unit/Raffle.t.sol: 26:53-26:61 (695-703)
      000010c6: DUP2                           // test/unit/Raffle.t.sol: 26:5-26:61 (647-703)
      000010c7: JUMP                           // test/unit/Raffle.t.sol: 26:5-26:61 (647-703)
      000010c8: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 84:5-86:6 (2592-2732)
      000010c9: PUSH1 0x60                     // lib/forge-std/src/StdInvariant.sol: 84:53-84:87 (2640-2674)
      000010cb: PUSH1 0x1a                     // lib/forge-std/src/StdInvariant.sol: 85:30-85:48 (2707-2725)
      000010cd: DUP1                           // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      000010ce: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      000010cf: DUP1                           // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      000010d0: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      000010d2: MUL                            // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      000010d3: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      000010d5: ADD                            // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      000010d6: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      000010d8: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      000010d9: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      000010da: DUP2                           // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      000010db: ADD                            // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      000010dc: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      000010de: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      000010df: DUP1                           // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      000010e0: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      000010e1: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      000010e2: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      000010e3: DUP2                           // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      000010e4: DUP2                           // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      000010e5: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      000010e6: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      000010e8: ADD                            // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      000010e9: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      000010eb: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      000010ec: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      000010ed: DUP3                           // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      000010ee: DUP3                           // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      000010ef: LT                             // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      000010f0: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      000010f1: PUSH2 0x1198                   // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      000010f4: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      000010f5: DUP4                           // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      000010f6: DUP3                           // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      000010f7: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      000010f8: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      000010fa: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      000010fb: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      000010fd: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      000010ff: SHA3                           // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001100: ADD                            // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001101: DUP1                           // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001102: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001103: PUSH2 0x110b                   // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001106: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001107: PUSH2 0x2c7e                   // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      0000110a: JUMP                           // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      0000110b: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      0000110c: DUP1                           // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      0000110d: PUSH1 0x1f                     // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      0000110f: ADD                            // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001110: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001112: DUP1                           // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001113: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001114: DIV                            // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001115: MUL                            // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001116: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001118: ADD                            // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001119: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      0000111b: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      0000111c: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      0000111d: DUP2                           // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      0000111e: ADD                            // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      0000111f: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001121: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001122: DUP1                           // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001123: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001124: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001125: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001126: DUP2                           // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001127: DUP2                           // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001128: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001129: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      0000112b: ADD                            // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      0000112c: DUP3                           // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      0000112d: DUP1                           // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      0000112e: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      0000112f: PUSH2 0x1137                   // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001132: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001133: PUSH2 0x2c7e                   // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001136: JUMP                           // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001137: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001138: DUP1                           // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001139: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      0000113a: PUSH2 0x1184                   // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      0000113d: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      0000113e: DUP1                           // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      0000113f: PUSH1 0x1f                     // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001141: LT                             // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001142: PUSH2 0x1159                   // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001145: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001146: PUSH2 0x100                    // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001149: DUP1                           // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      0000114a: DUP4                           // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      0000114b: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      0000114c: DIV                            // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      0000114d: MUL                            // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      0000114e: DUP4                           // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      0000114f: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001150: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001151: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001153: ADD                            // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001154: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001155: PUSH2 0x1184                   // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001158: JUMP                           // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001159: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      0000115a: DUP3                           // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      0000115b: ADD                            // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      0000115c: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      0000115d: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      0000115e: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001160: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001161: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001163: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001165: SHA3                           // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001166: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001167: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001168: DUP2                           // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001169: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      0000116a: DUP2                           // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      0000116b: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      0000116c: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      0000116d: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      0000116f: ADD                            // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001170: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001171: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001173: ADD                            // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001174: DUP1                           // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001175: DUP4                           // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001176: GT                             // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001177: PUSH2 0x1167                   // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      0000117a: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      0000117b: DUP3                           // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      0000117c: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      0000117d: SUB                            // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      0000117e: PUSH1 0x1f                     // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001180: AND                            // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001181: DUP3                           // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001182: ADD                            // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001183: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001184: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001185: POP                            // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001186: POP                            // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001187: POP                            // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001188: POP                            // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001189: POP                            // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      0000118a: DUP2                           // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      0000118b: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      0000118c: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      0000118e: ADD                            // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      0000118f: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001190: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001192: ADD                            // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001193: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001194: PUSH2 0x10ec                   // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001197: JUMP                           // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001198: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      00001199: POP                            // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      0000119a: POP                            // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      0000119b: POP                            // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      0000119c: POP                            // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      0000119d: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      0000119e: POP                            // lib/forge-std/src/StdInvariant.sol: 85:9-85:48 (2686-2725)
      0000119f: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 84:5-86:6 (2592-2732)
      000011a0: JUMP                           // lib/forge-std/src/StdInvariant.sol: 84:5-86:6 (2592-2732)
      000011a1: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 96:5-98:6 (3069-3215)
      000011a2: PUSH1 0x60                     // lib/forge-std/src/StdInvariant.sol: 96:53-96:93 (3117-3157)
      000011a4: PUSH1 0x1c                     // lib/forge-std/src/StdInvariant.sol: 97:30-97:48 (3190-3208)
      000011a6: DUP1                           // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011a7: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011a8: DUP1                           // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011a9: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011ab: MUL                            // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011ac: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011ae: ADD                            // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011af: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011b1: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011b2: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011b3: DUP2                           // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011b4: ADD                            // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011b5: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011b7: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011b8: DUP1                           // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011b9: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011ba: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011bb: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011bc: DUP2                           // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011bd: DUP2                           // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011be: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011bf: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011c1: ADD                            // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011c2: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011c4: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011c5: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011c6: DUP3                           // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011c7: DUP3                           // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011c8: LT                             // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011c9: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011ca: PUSH2 0x12e7                   // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011cd: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011ce: DUP4                           // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011cf: DUP3                           // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011d0: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011d1: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011d3: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011d4: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011d6: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011d8: SHA3                           // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011d9: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011da: PUSH1 0x2                      // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011dc: MUL                            // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011dd: ADD                            // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011de: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011e0: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011e1: DUP1                           // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011e2: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011e4: ADD                            // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011e5: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011e7: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011e8: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011e9: DUP2                           // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011ea: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011ec: DUP3                           // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011ed: ADD                            // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011ee: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011f0: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011f1: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011f2: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011f3: PUSH2 0x100                    // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011f6: EXP                            // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011f7: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011f8: DIV                            // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000011f9: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      0000120e: AND                            // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      0000120f: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      00001224: AND                            // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      00001225: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      0000123a: AND                            // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      0000123b: DUP2                           // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      0000123c: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      0000123d: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      0000123f: ADD                            // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      00001240: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      00001242: DUP3                           // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      00001243: ADD                            // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      00001244: DUP1                           // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      00001245: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      00001246: DUP1                           // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      00001247: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      00001249: MUL                            // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      0000124a: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      0000124c: ADD                            // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      0000124d: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      0000124f: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      00001250: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      00001251: DUP2                           // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      00001252: ADD                            // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      00001253: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      00001255: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      00001256: DUP1                           // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      00001257: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      00001258: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      00001259: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      0000125a: DUP2                           // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      0000125b: DUP2                           // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      0000125c: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      0000125d: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      0000125f: ADD                            // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      00001260: DUP3                           // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      00001261: DUP1                           // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      00001262: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      00001263: DUP1                           // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      00001264: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      00001265: PUSH2 0x12cf                   // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      00001268: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      00001269: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      0000126b: MUL                            // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      0000126c: DUP3                           // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      0000126d: ADD                            // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      0000126e: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      0000126f: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      00001270: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      00001272: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      00001273: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      00001275: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      00001277: SHA3                           // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      00001278: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      00001279: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      0000127b: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      0000127c: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      0000127d: DUP3                           // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      0000127e: DUP3                           // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      0000127f: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      00001280: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      00001281: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      00001282: PUSH2 0x100                    // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      00001285: EXP                            // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      00001286: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      00001287: DIV                            // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      00001288: PUSH1 0xe0                     // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      0000128a: SHL                            // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      0000128b: PUSH28 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012a8: NOT                            // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012a9: AND                            // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012aa: DUP2                           // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012ab: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012ac: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012ae: ADD                            // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012af: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012b0: PUSH1 0x4                      // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012b2: ADD                            // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012b3: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012b4: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012b6: DUP3                           // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012b7: PUSH1 0x3                      // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012b9: ADD                            // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012ba: DIV                            // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012bb: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012bc: DUP4                           // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012bd: ADD                            // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012be: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012bf: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012c1: SUB                            // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012c2: DUP3                           // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012c3: MUL                            // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012c4: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012c5: POP                            // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012c6: DUP1                           // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012c7: DUP5                           // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012c8: GT                             // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012c9: PUSH2 0x127c                   // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012cc: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012cd: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012ce: POP                            // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012cf: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012d0: POP                            // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012d1: POP                            // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012d2: POP                            // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012d3: POP                            // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012d4: POP                            // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012d5: DUP2                           // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012d6: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012d7: POP                            // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012d8: POP                            // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012d9: DUP2                           // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012da: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012db: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012dd: ADD                            // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012de: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012df: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012e1: ADD                            // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012e2: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012e3: PUSH2 0x11c5                   // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012e6: JUMP                           // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012e7: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012e8: POP                            // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012e9: POP                            // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012ea: POP                            // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012eb: POP                            // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012ec: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012ed: POP                            // lib/forge-std/src/StdInvariant.sol: 97:9-97:48 (3169-3208)
      000012ee: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 96:5-98:6 (3069-3215)
      000012ef: JUMP                           // lib/forge-std/src/StdInvariant.sol: 96:5-98:6 (3069-3215)
[001] 000012f0: JUMPDEST                       // test/unit/Raffle.t.sol: 57:5-62:6 (1581-1815)
[001] 000012f1: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/Base.sol: 9:68-9:96 (317-345)
[001] 00001312: PUSH1 0x0                      // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00001314: SHR                            // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00001315: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 58:9-58:17 (1646-1654)
[001] 0000132a: AND                            // test/unit/Raffle.t.sol: 58:9-58:17 (1646-1654)
[001] 0000132b: PUSH4 0xca669fa7               // test/unit/Raffle.t.sol: 58:9-58:17 (1646-1654)
[001] 00001330: PUSH1 0x25                     // test/unit/Raffle.t.sol: 58:18-58:24 (1655-1661)
[001] 00001332: PUSH1 0x0                      // test/unit/Raffle.t.sol: 58:18-58:24 (1655-1661)
[001] 00001334: SWAP1                          // test/unit/Raffle.t.sol: 58:18-58:24 (1655-1661)
[001] 00001335: SLOAD                          // test/unit/Raffle.t.sol: 58:18-58:24 (1655-1661)
[001] 00001336: SWAP1                          // test/unit/Raffle.t.sol: 58:18-58:24 (1655-1661)
[001] 00001337: PUSH2 0x100                    // test/unit/Raffle.t.sol: 58:18-58:24 (1655-1661)
[001] 0000133a: EXP                            // test/unit/Raffle.t.sol: 58:18-58:24 (1655-1661)
[001] 0000133b: SWAP1                          // test/unit/Raffle.t.sol: 58:18-58:24 (1655-1661)
[001] 0000133c: DIV                            // test/unit/Raffle.t.sol: 58:18-58:24 (1655-1661)
[001] 0000133d: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 58:18-58:24 (1655-1661)
[001] 00001352: AND                            // test/unit/Raffle.t.sol: 58:18-58:24 (1655-1661)
[001] 00001353: PUSH1 0x40                     // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
[001] 00001355: MLOAD                          // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
[001] 00001356: DUP3                           // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
[001] 00001357: PUSH4 0xffffffff               // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
[001] 0000135c: AND                            // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
[001] 0000135d: PUSH1 0xe0                     // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
[001] 0000135f: SHL                            // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
[001] 00001360: DUP2                           // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
[001] 00001361: MSTORE                         // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
[001] 00001362: PUSH1 0x4                      // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
[001] 00001364: ADD                            // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
[001] 00001365: PUSH2 0x136e                   // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
[001] 00001368: SWAP2                          // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
[001] 00001369: SWAP1                          // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
[001] 0000136a: PUSH2 0x25c2                   // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
[001] 0000136d: JUMP                           // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
[001] 0000136e: JUMPDEST                       // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
[001] 0000136f: PUSH1 0x0                      // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
[001] 00001371: PUSH1 0x40                     // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
[001] 00001373: MLOAD                          // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
[001] 00001374: DUP1                           // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
[001] 00001375: DUP4                           // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
[001] 00001376: SUB                            // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
[001] 00001377: DUP2                           // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
[001] 00001378: PUSH1 0x0                      // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
[001] 0000137a: DUP8                           // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
[001] 0000137b: DUP1                           // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
[001] 0000137c: EXTCODESIZE                    // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
[001] 0000137d: ISZERO                         // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
[001] 0000137e: DUP1                           // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
[001] 0000137f: ISZERO                         // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
[001] 00001380: PUSH2 0x1388                   // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
[001] 00001383: JUMPI                          // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
      00001384: PUSH1 0x0                      // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
      00001386: DUP1                           // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
      00001387: REVERT                         // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
[001] 00001388: JUMPDEST                       // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
[001] 00001389: POP                            // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
[001] 0000138a: GAS                            // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
[001] 0000138b: CALL                           // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
[001] 0000138c: ISZERO                         // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
[001] 0000138d: DUP1                           // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
[001] 0000138e: ISZERO                         // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
[001] 0000138f: PUSH2 0x139c                   // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
[001] 00001392: JUMPI                          // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
      00001393: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
      00001394: PUSH1 0x0                      // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
      00001396: DUP1                           // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
      00001397: RETURNDATACOPY                 // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
      00001398: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
      00001399: PUSH1 0x0                      // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
      0000139b: REVERT                         // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
[001] 0000139c: JUMPDEST                       // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
[001] 0000139d: POP                            // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
[001] 0000139e: POP                            // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
[001] 0000139f: POP                            // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
[001] 000013a0: POP                            // test/unit/Raffle.t.sol: 58:9-58:25 (1646-1662)
[001] 000013a1: PUSH1 0x1e                     // test/unit/Raffle.t.sol: 59:9-59:15 (1672-1678)
[001] 000013a3: PUSH1 0x1                      // test/unit/Raffle.t.sol: 59:9-59:15 (1672-1678)
[001] 000013a5: SWAP1                          // test/unit/Raffle.t.sol: 59:9-59:15 (1672-1678)
[001] 000013a6: SLOAD                          // test/unit/Raffle.t.sol: 59:9-59:15 (1672-1678)
[001] 000013a7: SWAP1                          // test/unit/Raffle.t.sol: 59:9-59:15 (1672-1678)
[001] 000013a8: PUSH2 0x100                    // test/unit/Raffle.t.sol: 59:9-59:15 (1672-1678)
[001] 000013ab: EXP                            // test/unit/Raffle.t.sol: 59:9-59:15 (1672-1678)
[001] 000013ac: SWAP1                          // test/unit/Raffle.t.sol: 59:9-59:15 (1672-1678)
[001] 000013ad: DIV                            // test/unit/Raffle.t.sol: 59:9-59:15 (1672-1678)
[001] 000013ae: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 59:9-59:15 (1672-1678)
[001] 000013c3: AND                            // test/unit/Raffle.t.sol: 59:9-59:15 (1672-1678)
[001] 000013c4: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 59:9-59:27 (1672-1690)
[001] 000013d9: AND                            // test/unit/Raffle.t.sol: 59:9-59:27 (1672-1690)
[001] 000013da: PUSH4 0x2cfcc539               // test/unit/Raffle.t.sol: 59:9-59:27 (1672-1690)
[001] 000013df: PUSH1 0x20                     // test/unit/Raffle.t.sol: 59:35-59:46 (1698-1709)
[001] 000013e1: SLOAD                          // test/unit/Raffle.t.sol: 59:35-59:46 (1698-1709)
[001] 000013e2: PUSH1 0x40                     // test/unit/Raffle.t.sol: 59:9-59:49 (1672-1712)
[001] 000013e4: MLOAD                          // test/unit/Raffle.t.sol: 59:9-59:49 (1672-1712)
[001] 000013e5: DUP3                           // test/unit/Raffle.t.sol: 59:9-59:49 (1672-1712)
[001] 000013e6: PUSH4 0xffffffff               // test/unit/Raffle.t.sol: 59:9-59:49 (1672-1712)
[001] 000013eb: AND                            // test/unit/Raffle.t.sol: 59:9-59:49 (1672-1712)
[001] 000013ec: PUSH1 0xe0                     // test/unit/Raffle.t.sol: 59:9-59:49 (1672-1712)
[001] 000013ee: SHL                            // test/unit/Raffle.t.sol: 59:9-59:49 (1672-1712)
[001] 000013ef: DUP2                           // test/unit/Raffle.t.sol: 59:9-59:49 (1672-1712)
[001] 000013f0: MSTORE                         // test/unit/Raffle.t.sol: 59:9-59:49 (1672-1712)
[001] 000013f1: PUSH1 0x4                      // test/unit/Raffle.t.sol: 59:9-59:49 (1672-1712)
[001] 000013f3: ADD                            // test/unit/Raffle.t.sol: 59:9-59:49 (1672-1712)
[001] 000013f4: PUSH1 0x0                      // test/unit/Raffle.t.sol: 59:9-59:49 (1672-1712)
[001] 000013f6: PUSH1 0x40                     // test/unit/Raffle.t.sol: 59:9-59:49 (1672-1712)
[001] 000013f8: MLOAD                          // test/unit/Raffle.t.sol: 59:9-59:49 (1672-1712)
[001] 000013f9: DUP1                           // test/unit/Raffle.t.sol: 59:9-59:49 (1672-1712)
[001] 000013fa: DUP4                           // test/unit/Raffle.t.sol: 59:9-59:49 (1672-1712)
[001] 000013fb: SUB                            // test/unit/Raffle.t.sol: 59:9-59:49 (1672-1712)
[001] 000013fc: DUP2                           // test/unit/Raffle.t.sol: 59:9-59:49 (1672-1712)
[001] 000013fd: DUP6                           // test/unit/Raffle.t.sol: 59:9-59:49 (1672-1712)
[001] 000013fe: DUP9                           // test/unit/Raffle.t.sol: 59:9-59:49 (1672-1712)
[001] 000013ff: DUP1                           // test/unit/Raffle.t.sol: 59:9-59:49 (1672-1712)
[001] 00001400: EXTCODESIZE                    // test/unit/Raffle.t.sol: 59:9-59:49 (1672-1712)
[001] 00001401: ISZERO                         // test/unit/Raffle.t.sol: 59:9-59:49 (1672-1712)
[001] 00001402: DUP1                           // test/unit/Raffle.t.sol: 59:9-59:49 (1672-1712)
[001] 00001403: ISZERO                         // test/unit/Raffle.t.sol: 59:9-59:49 (1672-1712)
[001] 00001404: PUSH2 0x140c                   // test/unit/Raffle.t.sol: 59:9-59:49 (1672-1712)
[001] 00001407: JUMPI                          // test/unit/Raffle.t.sol: 59:9-59:49 (1672-1712)
      00001408: PUSH1 0x0                      // test/unit/Raffle.t.sol: 59:9-59:49 (1672-1712)
      0000140a: DUP1                           // test/unit/Raffle.t.sol: 59:9-59:49 (1672-1712)
      0000140b: REVERT                         // test/unit/Raffle.t.sol: 59:9-59:49 (1672-1712)
[001] 0000140c: JUMPDEST                       // test/unit/Raffle.t.sol: 59:9-59:49 (1672-1712)
[001] 0000140d: POP                            // test/unit/Raffle.t.sol: 59:9-59:49 (1672-1712)
[001] 0000140e: GAS                            // test/unit/Raffle.t.sol: 59:9-59:49 (1672-1712)
[001] 0000140f: CALL                           // test/unit/Raffle.t.sol: 59:9-59:49 (1672-1712)
[001] 00001410: ISZERO                         // test/unit/Raffle.t.sol: 59:9-59:49 (1672-1712)
[001] 00001411: DUP1                           // test/unit/Raffle.t.sol: 59:9-59:49 (1672-1712)
[001] 00001412: ISZERO                         // test/unit/Raffle.t.sol: 59:9-59:49 (1672-1712)
[001] 00001413: PUSH2 0x1420                   // test/unit/Raffle.t.sol: 59:9-59:49 (1672-1712)
[001] 00001416: JUMPI                          // test/unit/Raffle.t.sol: 59:9-59:49 (1672-1712)
      00001417: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 59:9-59:49 (1672-1712)
      00001418: PUSH1 0x0                      // test/unit/Raffle.t.sol: 59:9-59:49 (1672-1712)
      0000141a: DUP1                           // test/unit/Raffle.t.sol: 59:9-59:49 (1672-1712)
      0000141b: RETURNDATACOPY                 // test/unit/Raffle.t.sol: 59:9-59:49 (1672-1712)
      0000141c: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 59:9-59:49 (1672-1712)
      0000141d: PUSH1 0x0                      // test/unit/Raffle.t.sol: 59:9-59:49 (1672-1712)
      0000141f: REVERT                         // test/unit/Raffle.t.sol: 59:9-59:49 (1672-1712)
[001] 00001420: JUMPDEST                       // test/unit/Raffle.t.sol: 59:9-59:49 (1672-1712)
[001] 00001421: POP                            // test/unit/Raffle.t.sol: 59:9-59:49 (1672-1712)
[001] 00001422: POP                            // test/unit/Raffle.t.sol: 59:9-59:49 (1672-1712)
[001] 00001423: POP                            // test/unit/Raffle.t.sol: 59:9-59:49 (1672-1712)
[001] 00001424: POP                            // test/unit/Raffle.t.sol: 59:9-59:49 (1672-1712)
[001] 00001425: POP                            // test/unit/Raffle.t.sol: 59:9-59:49 (1672-1712)
[001] 00001426: PUSH1 0x0                      // test/unit/Raffle.t.sol: 60:9-60:31 (1722-1744)
[001] 00001428: PUSH1 0x1e                     // test/unit/Raffle.t.sol: 60:34-60:40 (1747-1753)
[001] 0000142a: PUSH1 0x1                      // test/unit/Raffle.t.sol: 60:34-60:40 (1747-1753)
[001] 0000142c: SWAP1                          // test/unit/Raffle.t.sol: 60:34-60:40 (1747-1753)
[001] 0000142d: SLOAD                          // test/unit/Raffle.t.sol: 60:34-60:40 (1747-1753)
[001] 0000142e: SWAP1                          // test/unit/Raffle.t.sol: 60:34-60:40 (1747-1753)
[001] 0000142f: PUSH2 0x100                    // test/unit/Raffle.t.sol: 60:34-60:40 (1747-1753)
[001] 00001432: EXP                            // test/unit/Raffle.t.sol: 60:34-60:40 (1747-1753)
[001] 00001433: SWAP1                          // test/unit/Raffle.t.sol: 60:34-60:40 (1747-1753)
[001] 00001434: DIV                            // test/unit/Raffle.t.sol: 60:34-60:40 (1747-1753)
[001] 00001435: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 60:34-60:40 (1747-1753)
[001] 0000144a: AND                            // test/unit/Raffle.t.sol: 60:34-60:40 (1747-1753)
[001] 0000144b: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 60:34-60:50 (1747-1763)
[001] 00001460: AND                            // test/unit/Raffle.t.sol: 60:34-60:50 (1747-1763)
[001] 00001461: PUSH4 0xe55ae4e8               // test/unit/Raffle.t.sol: 60:34-60:50 (1747-1763)
[001] 00001466: PUSH1 0x0                      // test/unit/Raffle.t.sol: 60:51-60:52 (1764-1765)
[001] 00001468: PUSH1 0x40                     // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 0000146a: MLOAD                          // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 0000146b: DUP3                           // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 0000146c: PUSH4 0xffffffff               // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 00001471: AND                            // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 00001472: PUSH1 0xe0                     // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 00001474: SHL                            // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 00001475: DUP2                           // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 00001476: MSTORE                         // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 00001477: PUSH1 0x4                      // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 00001479: ADD                            // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 0000147a: PUSH2 0x1483                   // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 0000147d: SWAP2                          // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 0000147e: SWAP1                          // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 0000147f: PUSH2 0x2dd8                   // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 00001482: JUMP                           // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 00001483: JUMPDEST                       // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 00001484: PUSH1 0x20                     // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 00001486: PUSH1 0x40                     // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 00001488: MLOAD                          // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 00001489: DUP1                           // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 0000148a: DUP4                           // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 0000148b: SUB                            // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 0000148c: DUP2                           // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 0000148d: DUP7                           // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 0000148e: GAS                            // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 0000148f: STATICCALL                     // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 00001490: ISZERO                         // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 00001491: DUP1                           // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 00001492: ISZERO                         // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 00001493: PUSH2 0x14a0                   // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 00001496: JUMPI                          // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
      00001497: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
      00001498: PUSH1 0x0                      // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
      0000149a: DUP1                           // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
      0000149b: RETURNDATACOPY                 // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
      0000149c: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
      0000149d: PUSH1 0x0                      // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
      0000149f: REVERT                         // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 000014a0: JUMPDEST                       // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 000014a1: POP                            // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 000014a2: POP                            // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 000014a3: POP                            // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 000014a4: POP                            // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 000014a5: PUSH1 0x40                     // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 000014a7: MLOAD                          // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 000014a8: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 000014a9: PUSH1 0x1f                     // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 000014ab: NOT                            // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 000014ac: PUSH1 0x1f                     // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 000014ae: DUP3                           // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 000014af: ADD                            // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 000014b0: AND                            // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 000014b1: DUP3                           // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 000014b2: ADD                            // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 000014b3: DUP1                           // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 000014b4: PUSH1 0x40                     // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 000014b6: MSTORE                         // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 000014b7: POP                            // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 000014b8: DUP2                           // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 000014b9: ADD                            // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 000014ba: SWAP1                          // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 000014bb: PUSH2 0x14c4                   // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 000014be: SWAP2                          // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 000014bf: SWAP1                          // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 000014c0: PUSH2 0x2df3                   // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 000014c3: JUMP                           // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 000014c4: JUMPDEST                       // test/unit/Raffle.t.sol: 60:34-60:53 (1747-1766)
[001] 000014c5: SWAP1                          // test/unit/Raffle.t.sol: 60:9-60:53 (1722-1766)
[001] 000014c6: POP                            // test/unit/Raffle.t.sol: 60:9-60:53 (1722-1766)
[001] 000014c7: PUSH1 0x25                     // test/unit/Raffle.t.sol: 61:34-61:40 (1801-1807)
[001] 000014c9: PUSH1 0x0                      // test/unit/Raffle.t.sol: 61:34-61:40 (1801-1807)
[001] 000014cb: SWAP1                          // test/unit/Raffle.t.sol: 61:34-61:40 (1801-1807)
[001] 000014cc: SLOAD                          // test/unit/Raffle.t.sol: 61:34-61:40 (1801-1807)
[001] 000014cd: SWAP1                          // test/unit/Raffle.t.sol: 61:34-61:40 (1801-1807)
[001] 000014ce: PUSH2 0x100                    // test/unit/Raffle.t.sol: 61:34-61:40 (1801-1807)
[001] 000014d1: EXP                            // test/unit/Raffle.t.sol: 61:34-61:40 (1801-1807)
[001] 000014d2: SWAP1                          // test/unit/Raffle.t.sol: 61:34-61:40 (1801-1807)
[001] 000014d3: DIV                            // test/unit/Raffle.t.sol: 61:34-61:40 (1801-1807)
[001] 000014d4: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 61:34-61:40 (1801-1807)
[001] 000014e9: AND                            // test/unit/Raffle.t.sol: 61:34-61:40 (1801-1807)
[001] 000014ea: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 61:16-61:40 (1783-1807)
[001] 000014ff: AND                            // test/unit/Raffle.t.sol: 61:16-61:40 (1783-1807)
[001] 00001500: DUP2                           // test/unit/Raffle.t.sol: 61:16-61:30 (1783-1797)
[001] 00001501: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 61:16-61:40 (1783-1807)
[001] 00001516: AND                            // test/unit/Raffle.t.sol: 61:16-61:40 (1783-1807)
[001] 00001517: EQ                             // test/unit/Raffle.t.sol: 61:16-61:40 (1783-1807)
[001] 00001518: PUSH2 0x1524                   // test/unit/Raffle.t.sol: 61:9-61:41 (1776-1808)
[001] 0000151b: JUMPI                          // test/unit/Raffle.t.sol: 61:9-61:41 (1776-1808)
      0000151c: PUSH2 0x1523                   // test/unit/Raffle.t.sol: 61:9-61:41 (1776-1808)
      0000151f: PUSH2 0x2c20                   // test/unit/Raffle.t.sol: 61:9-61:41 (1776-1808)
      00001522: JUMP                           // test/unit/Raffle.t.sol: 61:9-61:41 (1776-1808)
      00001523: JUMPDEST                       // test/unit/Raffle.t.sol: 61:9-61:41 (1776-1808)
[001] 00001524: JUMPDEST                       // test/unit/Raffle.t.sol: 61:9-61:41 (1776-1808)
[001] 00001525: POP                            // test/unit/Raffle.t.sol: 57:60-62:6 (1636-1815)
[001] 00001526: JUMP                           // test/unit/Raffle.t.sol: 57:5-62:6 (1581-1815)
[001] 00001527: JUMPDEST                       // test/unit/Raffle.t.sol: 82:5-89:6 (2461-2729)
[001] 00001528: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/Base.sol: 9:68-9:96 (317-345)
[001] 00001549: PUSH1 0x0                      // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 0000154b: SHR                            // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 0000154c: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 83:9-83:16 (2521-2528)
[001] 00001561: AND                            // test/unit/Raffle.t.sol: 83:9-83:16 (2521-2528)
[001] 00001562: PUSH4 0xe5d6bf02               // test/unit/Raffle.t.sol: 83:9-83:16 (2521-2528)
[001] 00001567: PUSH1 0x1                      // test/unit/Raffle.t.sol: 83:46-83:47 (2558-2559)
[001] 00001569: PUSH1 0x21                     // test/unit/Raffle.t.sol: 83:35-83:43 (2547-2555)
[001] 0000156b: SLOAD                          // test/unit/Raffle.t.sol: 83:35-83:43 (2547-2555)
[001] 0000156c: TIMESTAMP                      // test/unit/Raffle.t.sol: 83:17-83:32 (2529-2544)
[001] 0000156d: PUSH2 0x1576                   // test/unit/Raffle.t.sol: 83:17-83:43 (2529-2555)
[001] 00001570: SWAP2                          // test/unit/Raffle.t.sol: 83:17-83:43 (2529-2555)
[001] 00001571: SWAP1                          // test/unit/Raffle.t.sol: 83:17-83:43 (2529-2555)
[001] 00001572: PUSH2 0x2cde                   // test/unit/Raffle.t.sol: 83:17-83:43 (2529-2555)
[001] 00001575: JUMP                           // test/unit/Raffle.t.sol: 83:17-83:43 (2529-2555)
[001] 00001576: JUMPDEST                       // test/unit/Raffle.t.sol: 83:17-83:43 (2529-2555)
[001] 00001577: PUSH2 0x1580                   // test/unit/Raffle.t.sol: 83:17-83:47 (2529-2559)
[001] 0000157a: SWAP2                          // test/unit/Raffle.t.sol: 83:17-83:47 (2529-2559)
[001] 0000157b: SWAP1                          // test/unit/Raffle.t.sol: 83:17-83:47 (2529-2559)
[001] 0000157c: PUSH2 0x2cde                   // test/unit/Raffle.t.sol: 83:17-83:47 (2529-2559)
[001] 0000157f: JUMP                           // test/unit/Raffle.t.sol: 83:17-83:47 (2529-2559)
[001] 00001580: JUMPDEST                       // test/unit/Raffle.t.sol: 83:17-83:47 (2529-2559)
[001] 00001581: PUSH1 0x40                     // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
[001] 00001583: MLOAD                          // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
[001] 00001584: DUP3                           // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
[001] 00001585: PUSH4 0xffffffff               // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
[001] 0000158a: AND                            // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
[001] 0000158b: PUSH1 0xe0                     // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
[001] 0000158d: SHL                            // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
[001] 0000158e: DUP2                           // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
[001] 0000158f: MSTORE                         // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
[001] 00001590: PUSH1 0x4                      // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
[001] 00001592: ADD                            // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
[001] 00001593: PUSH2 0x159c                   // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
[001] 00001596: SWAP2                          // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
[001] 00001597: SWAP1                          // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
[001] 00001598: PUSH2 0x2801                   // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
[001] 0000159b: JUMP                           // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
[001] 0000159c: JUMPDEST                       // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
[001] 0000159d: PUSH1 0x0                      // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
[001] 0000159f: PUSH1 0x40                     // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
[001] 000015a1: MLOAD                          // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
[001] 000015a2: DUP1                           // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
[001] 000015a3: DUP4                           // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
[001] 000015a4: SUB                            // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
[001] 000015a5: DUP2                           // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
[001] 000015a6: PUSH1 0x0                      // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
[001] 000015a8: DUP8                           // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
[001] 000015a9: DUP1                           // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
[001] 000015aa: EXTCODESIZE                    // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
[001] 000015ab: ISZERO                         // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
[001] 000015ac: DUP1                           // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
[001] 000015ad: ISZERO                         // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
[001] 000015ae: PUSH2 0x15b6                   // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
[001] 000015b1: JUMPI                          // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
      000015b2: PUSH1 0x0                      // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
      000015b4: DUP1                           // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
      000015b5: REVERT                         // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
[001] 000015b6: JUMPDEST                       // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
[001] 000015b7: POP                            // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
[001] 000015b8: GAS                            // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
[001] 000015b9: CALL                           // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
[001] 000015ba: ISZERO                         // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
[001] 000015bb: DUP1                           // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
[001] 000015bc: ISZERO                         // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
[001] 000015bd: PUSH2 0x15ca                   // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
[001] 000015c0: JUMPI                          // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
      000015c1: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
      000015c2: PUSH1 0x0                      // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
      000015c4: DUP1                           // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
      000015c5: RETURNDATACOPY                 // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
      000015c6: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
      000015c7: PUSH1 0x0                      // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
      000015c9: REVERT                         // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
[001] 000015ca: JUMPDEST                       // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
[001] 000015cb: POP                            // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
[001] 000015cc: POP                            // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
[001] 000015cd: POP                            // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
[001] 000015ce: POP                            // test/unit/Raffle.t.sol: 83:9-83:48 (2521-2560)
[001] 000015cf: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/Base.sol: 9:68-9:96 (317-345)
[001] 000015f0: PUSH1 0x0                      // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 000015f2: SHR                            // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 000015f3: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 84:9-84:16 (2570-2577)
[001] 00001608: AND                            // test/unit/Raffle.t.sol: 84:9-84:16 (2570-2577)
[001] 00001609: PUSH4 0x1f7b4f30               // test/unit/Raffle.t.sol: 84:9-84:16 (2570-2577)
[001] 0000160e: PUSH1 0x1                      // test/unit/Raffle.t.sol: 84:32-84:33 (2593-2594)
[001] 00001610: NUMBER                         // test/unit/Raffle.t.sol: 84:17-84:29 (2578-2590)
[001] 00001611: PUSH2 0x161a                   // test/unit/Raffle.t.sol: 84:17-84:33 (2578-2594)
[001] 00001614: SWAP2                          // test/unit/Raffle.t.sol: 84:17-84:33 (2578-2594)
[001] 00001615: SWAP1                          // test/unit/Raffle.t.sol: 84:17-84:33 (2578-2594)
[001] 00001616: PUSH2 0x2cde                   // test/unit/Raffle.t.sol: 84:17-84:33 (2578-2594)
[001] 00001619: JUMP                           // test/unit/Raffle.t.sol: 84:17-84:33 (2578-2594)
[001] 0000161a: JUMPDEST                       // test/unit/Raffle.t.sol: 84:17-84:33 (2578-2594)
[001] 0000161b: PUSH1 0x40                     // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
[001] 0000161d: MLOAD                          // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
[001] 0000161e: DUP3                           // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
[001] 0000161f: PUSH4 0xffffffff               // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
[001] 00001624: AND                            // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
[001] 00001625: PUSH1 0xe0                     // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
[001] 00001627: SHL                            // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
[001] 00001628: DUP2                           // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
[001] 00001629: MSTORE                         // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
[001] 0000162a: PUSH1 0x4                      // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
[001] 0000162c: ADD                            // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
[001] 0000162d: PUSH2 0x1636                   // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
[001] 00001630: SWAP2                          // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
[001] 00001631: SWAP1                          // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
[001] 00001632: PUSH2 0x2801                   // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
[001] 00001635: JUMP                           // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
[001] 00001636: JUMPDEST                       // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
[001] 00001637: PUSH1 0x0                      // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
[001] 00001639: PUSH1 0x40                     // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
[001] 0000163b: MLOAD                          // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
[001] 0000163c: DUP1                           // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
[001] 0000163d: DUP4                           // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
[001] 0000163e: SUB                            // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
[001] 0000163f: DUP2                           // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
[001] 00001640: PUSH1 0x0                      // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
[001] 00001642: DUP8                           // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
[001] 00001643: DUP1                           // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
[001] 00001644: EXTCODESIZE                    // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
[001] 00001645: ISZERO                         // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
[001] 00001646: DUP1                           // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
[001] 00001647: ISZERO                         // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
[001] 00001648: PUSH2 0x1650                   // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
[001] 0000164b: JUMPI                          // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
      0000164c: PUSH1 0x0                      // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
      0000164e: DUP1                           // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
      0000164f: REVERT                         // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
[001] 00001650: JUMPDEST                       // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
[001] 00001651: POP                            // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
[001] 00001652: GAS                            // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
[001] 00001653: CALL                           // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
[001] 00001654: ISZERO                         // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
[001] 00001655: DUP1                           // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
[001] 00001656: ISZERO                         // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
[001] 00001657: PUSH2 0x1664                   // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
[001] 0000165a: JUMPI                          // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
      0000165b: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
      0000165c: PUSH1 0x0                      // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
      0000165e: DUP1                           // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
      0000165f: RETURNDATACOPY                 // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
      00001660: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
      00001661: PUSH1 0x0                      // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
      00001663: REVERT                         // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
[001] 00001664: JUMPDEST                       // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
[001] 00001665: POP                            // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
[001] 00001666: POP                            // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
[001] 00001667: POP                            // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
[001] 00001668: POP                            // test/unit/Raffle.t.sol: 84:9-84:34 (2570-2595)
[001] 00001669: PUSH1 0x0                      // test/unit/Raffle.t.sol: 86:10-86:27 (2621-2638)
[001] 0000166b: PUSH1 0x1e                     // test/unit/Raffle.t.sol: 86:33-86:39 (2644-2650)
[001] 0000166d: PUSH1 0x1                      // test/unit/Raffle.t.sol: 86:33-86:39 (2644-2650)
[001] 0000166f: SWAP1                          // test/unit/Raffle.t.sol: 86:33-86:39 (2644-2650)
[001] 00001670: SLOAD                          // test/unit/Raffle.t.sol: 86:33-86:39 (2644-2650)
[001] 00001671: SWAP1                          // test/unit/Raffle.t.sol: 86:33-86:39 (2644-2650)
[001] 00001672: PUSH2 0x100                    // test/unit/Raffle.t.sol: 86:33-86:39 (2644-2650)
[001] 00001675: EXP                            // test/unit/Raffle.t.sol: 86:33-86:39 (2644-2650)
[001] 00001676: SWAP1                          // test/unit/Raffle.t.sol: 86:33-86:39 (2644-2650)
[001] 00001677: DIV                            // test/unit/Raffle.t.sol: 86:33-86:39 (2644-2650)
[001] 00001678: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 86:33-86:39 (2644-2650)
[001] 0000168d: AND                            // test/unit/Raffle.t.sol: 86:33-86:39 (2644-2650)
[001] 0000168e: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 86:33-86:51 (2644-2662)
[001] 000016a3: AND                            // test/unit/Raffle.t.sol: 86:33-86:51 (2644-2662)
[001] 000016a4: PUSH4 0x6e04ff0d               // test/unit/Raffle.t.sol: 86:33-86:51 (2644-2662)
[001] 000016a9: PUSH1 0x40                     // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016ab: MLOAD                          // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016ac: DUP2                           // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016ad: PUSH4 0xffffffff               // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016b2: AND                            // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016b3: PUSH1 0xe0                     // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016b5: SHL                            // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016b6: DUP2                           // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016b7: MSTORE                         // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016b8: PUSH1 0x4                      // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016ba: ADD                            // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016bb: PUSH2 0x16c3                   // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016be: SWAP1                          // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016bf: PUSH2 0x2d49                   // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016c2: JUMP                           // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016c3: JUMPDEST                       // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016c4: PUSH1 0x0                      // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016c6: PUSH1 0x40                     // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016c8: MLOAD                          // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016c9: DUP1                           // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016ca: DUP4                           // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016cb: SUB                            // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016cc: DUP2                           // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016cd: DUP7                           // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016ce: GAS                            // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016cf: STATICCALL                     // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016d0: ISZERO                         // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016d1: DUP1                           // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016d2: ISZERO                         // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016d3: PUSH2 0x16e0                   // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016d6: JUMPI                          // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
      000016d7: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
      000016d8: PUSH1 0x0                      // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
      000016da: DUP1                           // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
      000016db: RETURNDATACOPY                 // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
      000016dc: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
      000016dd: PUSH1 0x0                      // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
      000016df: REVERT                         // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016e0: JUMPDEST                       // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016e1: POP                            // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016e2: POP                            // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016e3: POP                            // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016e4: POP                            // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016e5: PUSH1 0x40                     // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016e7: MLOAD                          // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016e8: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016e9: PUSH1 0x0                      // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016eb: DUP3                           // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016ec: RETURNDATACOPY                 // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016ed: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016ee: PUSH1 0x1f                     // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016f0: NOT                            // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016f1: PUSH1 0x1f                     // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016f3: DUP3                           // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016f4: ADD                            // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016f5: AND                            // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016f6: DUP3                           // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016f7: ADD                            // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016f8: DUP1                           // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016f9: PUSH1 0x40                     // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016fb: MSTORE                         // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016fc: POP                            // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016fd: DUP2                           // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016fe: ADD                            // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 000016ff: SWAP1                          // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 00001700: PUSH2 0x1709                   // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 00001703: SWAP2                          // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 00001704: SWAP1                          // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 00001705: PUSH2 0x2f72                   // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 00001708: JUMP                           // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 00001709: JUMPDEST                       // test/unit/Raffle.t.sol: 86:33-86:55 (2644-2666)
[001] 0000170a: POP                            // test/unit/Raffle.t.sol: 86:9-86:55 (2620-2666)
[001] 0000170b: SWAP1                          // test/unit/Raffle.t.sol: 86:9-86:55 (2620-2666)
[001] 0000170c: POP                            // test/unit/Raffle.t.sol: 86:9-86:55 (2620-2666)
[001] 0000170d: PUSH2 0x1717                   // test/unit/Raffle.t.sol: 88:9-88:38 (2693-2722)
[001] 00001710: DUP2                           // test/unit/Raffle.t.sol: 88:18-88:30 (2702-2714)
[001] 00001711: PUSH1 0x0                      // test/unit/Raffle.t.sol: 88:32-88:37 (2716-2721)
[001] 00001713: PUSH2 0x218d                   // test/unit/Raffle.t.sol: 88:9-88:17 (2693-2701)
[001] 00001716: JUMP                           // test/unit/Raffle.t.sol: 88:9-88:38 (2693-2722)
[001] 00001717: JUMPDEST                       // test/unit/Raffle.t.sol: 88:9-88:38 (2693-2722)
[001] 00001718: POP                            // test/unit/Raffle.t.sol: 82:55-89:6 (2511-2729)
[001] 00001719: JUMP                           // test/unit/Raffle.t.sol: 82:5-89:6 (2461-2729)
[001] 0000171a: JUMPDEST                       // test/unit/Raffle.t.sol: 64:5-69:6 (1821-2050)
[001] 0000171b: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/Base.sol: 9:68-9:96 (317-345)
[001] 0000173c: PUSH1 0x0                      // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 0000173e: SHR                            // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 0000173f: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 65:9-65:17 (1874-1882)
[001] 00001754: AND                            // test/unit/Raffle.t.sol: 65:9-65:17 (1874-1882)
[001] 00001755: PUSH4 0xca669fa7               // test/unit/Raffle.t.sol: 65:9-65:17 (1874-1882)
[001] 0000175a: PUSH1 0x25                     // test/unit/Raffle.t.sol: 65:18-65:24 (1883-1889)
[001] 0000175c: PUSH1 0x0                      // test/unit/Raffle.t.sol: 65:18-65:24 (1883-1889)
[001] 0000175e: SWAP1                          // test/unit/Raffle.t.sol: 65:18-65:24 (1883-1889)
[001] 0000175f: SLOAD                          // test/unit/Raffle.t.sol: 65:18-65:24 (1883-1889)
[001] 00001760: SWAP1                          // test/unit/Raffle.t.sol: 65:18-65:24 (1883-1889)
[001] 00001761: PUSH2 0x100                    // test/unit/Raffle.t.sol: 65:18-65:24 (1883-1889)
[001] 00001764: EXP                            // test/unit/Raffle.t.sol: 65:18-65:24 (1883-1889)
[001] 00001765: SWAP1                          // test/unit/Raffle.t.sol: 65:18-65:24 (1883-1889)
[001] 00001766: DIV                            // test/unit/Raffle.t.sol: 65:18-65:24 (1883-1889)
[001] 00001767: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 65:18-65:24 (1883-1889)
[001] 0000177c: AND                            // test/unit/Raffle.t.sol: 65:18-65:24 (1883-1889)
[001] 0000177d: PUSH1 0x40                     // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
[001] 0000177f: MLOAD                          // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
[001] 00001780: DUP3                           // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
[001] 00001781: PUSH4 0xffffffff               // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
[001] 00001786: AND                            // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
[001] 00001787: PUSH1 0xe0                     // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
[001] 00001789: SHL                            // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
[001] 0000178a: DUP2                           // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
[001] 0000178b: MSTORE                         // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
[001] 0000178c: PUSH1 0x4                      // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
[001] 0000178e: ADD                            // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
[001] 0000178f: PUSH2 0x1798                   // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
[001] 00001792: SWAP2                          // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
[001] 00001793: SWAP1                          // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
[001] 00001794: PUSH2 0x25c2                   // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
[001] 00001797: JUMP                           // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
[001] 00001798: JUMPDEST                       // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
[001] 00001799: PUSH1 0x0                      // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
[001] 0000179b: PUSH1 0x40                     // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
[001] 0000179d: MLOAD                          // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
[001] 0000179e: DUP1                           // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
[001] 0000179f: DUP4                           // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
[001] 000017a0: SUB                            // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
[001] 000017a1: DUP2                           // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
[001] 000017a2: PUSH1 0x0                      // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
[001] 000017a4: DUP8                           // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
[001] 000017a5: DUP1                           // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
[001] 000017a6: EXTCODESIZE                    // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
[001] 000017a7: ISZERO                         // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
[001] 000017a8: DUP1                           // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
[001] 000017a9: ISZERO                         // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
[001] 000017aa: PUSH2 0x17b2                   // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
[001] 000017ad: JUMPI                          // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
      000017ae: PUSH1 0x0                      // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
      000017b0: DUP1                           // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
      000017b1: REVERT                         // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
[001] 000017b2: JUMPDEST                       // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
[001] 000017b3: POP                            // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
[001] 000017b4: GAS                            // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
[001] 000017b5: CALL                           // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
[001] 000017b6: ISZERO                         // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
[001] 000017b7: DUP1                           // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
[001] 000017b8: ISZERO                         // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
[001] 000017b9: PUSH2 0x17c6                   // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
[001] 000017bc: JUMPI                          // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
      000017bd: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
      000017be: PUSH1 0x0                      // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
      000017c0: DUP1                           // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
      000017c1: RETURNDATACOPY                 // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
      000017c2: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
      000017c3: PUSH1 0x0                      // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
      000017c5: REVERT                         // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
[001] 000017c6: JUMPDEST                       // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
[001] 000017c7: POP                            // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
[001] 000017c8: POP                            // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
[001] 000017c9: POP                            // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
[001] 000017ca: POP                            // test/unit/Raffle.t.sol: 65:9-65:25 (1874-1890)
[001] 000017cb: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/Base.sol: 9:68-9:96 (317-345)
[001] 000017ec: PUSH1 0x0                      // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 000017ee: SHR                            // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 000017ef: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 66:9-66:22 (1900-1913)
[001] 00001804: AND                            // test/unit/Raffle.t.sol: 66:9-66:22 (1900-1913)
[001] 00001805: PUSH4 0x81bad6f3               // test/unit/Raffle.t.sol: 66:9-66:22 (1900-1913)
[001] 0000180a: PUSH1 0x1                      // test/unit/Raffle.t.sol: 66:23-66:27 (1914-1918)
[001] 0000180c: PUSH1 0x0                      // test/unit/Raffle.t.sol: 66:29-66:34 (1920-1925)
[001] 0000180e: DUP1                           // test/unit/Raffle.t.sol: 66:36-66:41 (1927-1932)
[001] 0000180f: PUSH1 0x0                      // test/unit/Raffle.t.sol: 66:43-66:48 (1934-1939)
[001] 00001811: PUSH1 0x1e                     // test/unit/Raffle.t.sol: 66:58-66:64 (1949-1955)
[001] 00001813: PUSH1 0x1                      // test/unit/Raffle.t.sol: 66:58-66:64 (1949-1955)
[001] 00001815: SWAP1                          // test/unit/Raffle.t.sol: 66:58-66:64 (1949-1955)
[001] 00001816: SLOAD                          // test/unit/Raffle.t.sol: 66:58-66:64 (1949-1955)
[001] 00001817: SWAP1                          // test/unit/Raffle.t.sol: 66:58-66:64 (1949-1955)
[001] 00001818: PUSH2 0x100                    // test/unit/Raffle.t.sol: 66:58-66:64 (1949-1955)
[001] 0000181b: EXP                            // test/unit/Raffle.t.sol: 66:58-66:64 (1949-1955)
[001] 0000181c: SWAP1                          // test/unit/Raffle.t.sol: 66:58-66:64 (1949-1955)
[001] 0000181d: DIV                            // test/unit/Raffle.t.sol: 66:58-66:64 (1949-1955)
[001] 0000181e: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 66:58-66:64 (1949-1955)
[001] 00001833: AND                            // test/unit/Raffle.t.sol: 66:58-66:64 (1949-1955)
[001] 00001834: PUSH1 0x40                     // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
[001] 00001836: MLOAD                          // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
[001] 00001837: DUP7                           // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
[001] 00001838: PUSH4 0xffffffff               // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
[001] 0000183d: AND                            // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
[001] 0000183e: PUSH1 0xe0                     // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
[001] 00001840: SHL                            // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
[001] 00001841: DUP2                           // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
[001] 00001842: MSTORE                         // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
[001] 00001843: PUSH1 0x4                      // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
[001] 00001845: ADD                            // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
[001] 00001846: PUSH2 0x1853                   // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
[001] 00001849: SWAP6                          // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
[001] 0000184a: SWAP5                          // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
[001] 0000184b: SWAP4                          // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
[001] 0000184c: SWAP3                          // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
[001] 0000184d: SWAP2                          // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
[001] 0000184e: SWAP1                          // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
[001] 0000184f: PUSH2 0x2fce                   // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
[001] 00001852: JUMP                           // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
[001] 00001853: JUMPDEST                       // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
[001] 00001854: PUSH1 0x0                      // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
[001] 00001856: PUSH1 0x40                     // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
[001] 00001858: MLOAD                          // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
[001] 00001859: DUP1                           // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
[001] 0000185a: DUP4                           // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
[001] 0000185b: SUB                            // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
[001] 0000185c: DUP2                           // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
[001] 0000185d: PUSH1 0x0                      // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
[001] 0000185f: DUP8                           // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
[001] 00001860: DUP1                           // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
[001] 00001861: EXTCODESIZE                    // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
[001] 00001862: ISZERO                         // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
[001] 00001863: DUP1                           // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
[001] 00001864: ISZERO                         // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
[001] 00001865: PUSH2 0x186d                   // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
[001] 00001868: JUMPI                          // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
      00001869: PUSH1 0x0                      // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
      0000186b: DUP1                           // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
      0000186c: REVERT                         // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
[001] 0000186d: JUMPDEST                       // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
[001] 0000186e: POP                            // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
[001] 0000186f: GAS                            // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
[001] 00001870: CALL                           // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
[001] 00001871: ISZERO                         // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
[001] 00001872: DUP1                           // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
[001] 00001873: ISZERO                         // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
[001] 00001874: PUSH2 0x1881                   // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
[001] 00001877: JUMPI                          // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
      00001878: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
      00001879: PUSH1 0x0                      // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
      0000187b: DUP1                           // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
      0000187c: RETURNDATACOPY                 // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
      0000187d: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
      0000187e: PUSH1 0x0                      // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
      00001880: REVERT                         // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
[001] 00001881: JUMPDEST                       // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
[001] 00001882: POP                            // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
[001] 00001883: POP                            // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
[001] 00001884: POP                            // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
[001] 00001885: POP                            // test/unit/Raffle.t.sol: 66:9-66:66 (1900-1957)
[001] 00001886: PUSH1 0x25                     // test/unit/Raffle.t.sol: 67:28-67:34 (1986-1992)
[001] 00001888: PUSH1 0x0                      // test/unit/Raffle.t.sol: 67:28-67:34 (1986-1992)
[001] 0000188a: SWAP1                          // test/unit/Raffle.t.sol: 67:28-67:34 (1986-1992)
[001] 0000188b: SLOAD                          // test/unit/Raffle.t.sol: 67:28-67:34 (1986-1992)
[001] 0000188c: SWAP1                          // test/unit/Raffle.t.sol: 67:28-67:34 (1986-1992)
[001] 0000188d: PUSH2 0x100                    // test/unit/Raffle.t.sol: 67:28-67:34 (1986-1992)
[001] 00001890: EXP                            // test/unit/Raffle.t.sol: 67:28-67:34 (1986-1992)
[001] 00001891: SWAP1                          // test/unit/Raffle.t.sol: 67:28-67:34 (1986-1992)
[001] 00001892: DIV                            // test/unit/Raffle.t.sol: 67:28-67:34 (1986-1992)
[001] 00001893: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 67:28-67:34 (1986-1992)
[001] 000018a8: AND                            // test/unit/Raffle.t.sol: 67:28-67:34 (1986-1992)
[001] 000018a9: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 67:14-67:35 (1972-1993)
[001] 000018be: AND                            // test/unit/Raffle.t.sol: 67:14-67:35 (1972-1993)
[001] 000018bf: PUSH32 0xd78f827cd914f7521fd97ac8d75e9ab6f080fdcbf7b6cd63e599b59233e6106f // test/unit/Raffle.t.sol: 67:14-67:35 (1972-1993)
[001] 000018e0: PUSH1 0x40                     // test/unit/Raffle.t.sol: 67:14-67:35 (1972-1993)
[001] 000018e2: MLOAD                          // test/unit/Raffle.t.sol: 67:14-67:35 (1972-1993)
[001] 000018e3: PUSH1 0x40                     // test/unit/Raffle.t.sol: 67:14-67:35 (1972-1993)
[001] 000018e5: MLOAD                          // test/unit/Raffle.t.sol: 67:14-67:35 (1972-1993)
[001] 000018e6: DUP1                           // test/unit/Raffle.t.sol: 67:14-67:35 (1972-1993)
[001] 000018e7: SWAP2                          // test/unit/Raffle.t.sol: 67:14-67:35 (1972-1993)
[001] 000018e8: SUB                            // test/unit/Raffle.t.sol: 67:14-67:35 (1972-1993)
[001] 000018e9: SWAP1                          // test/unit/Raffle.t.sol: 67:14-67:35 (1972-1993)
[001] 000018ea: LOG2                           // test/unit/Raffle.t.sol: 67:14-67:35 (1972-1993)
[001] 000018eb: PUSH1 0x1e                     // test/unit/Raffle.t.sol: 68:9-68:15 (2003-2009)
[001] 000018ed: PUSH1 0x1                      // test/unit/Raffle.t.sol: 68:9-68:15 (2003-2009)
[001] 000018ef: SWAP1                          // test/unit/Raffle.t.sol: 68:9-68:15 (2003-2009)
[001] 000018f0: SLOAD                          // test/unit/Raffle.t.sol: 68:9-68:15 (2003-2009)
[001] 000018f1: SWAP1                          // test/unit/Raffle.t.sol: 68:9-68:15 (2003-2009)
[001] 000018f2: PUSH2 0x100                    // test/unit/Raffle.t.sol: 68:9-68:15 (2003-2009)
[001] 000018f5: EXP                            // test/unit/Raffle.t.sol: 68:9-68:15 (2003-2009)
[001] 000018f6: SWAP1                          // test/unit/Raffle.t.sol: 68:9-68:15 (2003-2009)
[001] 000018f7: DIV                            // test/unit/Raffle.t.sol: 68:9-68:15 (2003-2009)
[001] 000018f8: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 68:9-68:15 (2003-2009)
[001] 0000190d: AND                            // test/unit/Raffle.t.sol: 68:9-68:15 (2003-2009)
[001] 0000190e: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 68:9-68:27 (2003-2021)
[001] 00001923: AND                            // test/unit/Raffle.t.sol: 68:9-68:27 (2003-2021)
[001] 00001924: PUSH4 0x2cfcc539               // test/unit/Raffle.t.sol: 68:9-68:27 (2003-2021)
[001] 00001929: PUSH1 0x20                     // test/unit/Raffle.t.sol: 68:35-68:46 (2029-2040)
[001] 0000192b: SLOAD                          // test/unit/Raffle.t.sol: 68:35-68:46 (2029-2040)
[001] 0000192c: PUSH1 0x40                     // test/unit/Raffle.t.sol: 68:9-68:49 (2003-2043)
[001] 0000192e: MLOAD                          // test/unit/Raffle.t.sol: 68:9-68:49 (2003-2043)
[001] 0000192f: DUP3                           // test/unit/Raffle.t.sol: 68:9-68:49 (2003-2043)
[001] 00001930: PUSH4 0xffffffff               // test/unit/Raffle.t.sol: 68:9-68:49 (2003-2043)
[001] 00001935: AND                            // test/unit/Raffle.t.sol: 68:9-68:49 (2003-2043)
[001] 00001936: PUSH1 0xe0                     // test/unit/Raffle.t.sol: 68:9-68:49 (2003-2043)
[001] 00001938: SHL                            // test/unit/Raffle.t.sol: 68:9-68:49 (2003-2043)
[001] 00001939: DUP2                           // test/unit/Raffle.t.sol: 68:9-68:49 (2003-2043)
[001] 0000193a: MSTORE                         // test/unit/Raffle.t.sol: 68:9-68:49 (2003-2043)
[001] 0000193b: PUSH1 0x4                      // test/unit/Raffle.t.sol: 68:9-68:49 (2003-2043)
[001] 0000193d: ADD                            // test/unit/Raffle.t.sol: 68:9-68:49 (2003-2043)
[001] 0000193e: PUSH1 0x0                      // test/unit/Raffle.t.sol: 68:9-68:49 (2003-2043)
[001] 00001940: PUSH1 0x40                     // test/unit/Raffle.t.sol: 68:9-68:49 (2003-2043)
[001] 00001942: MLOAD                          // test/unit/Raffle.t.sol: 68:9-68:49 (2003-2043)
[001] 00001943: DUP1                           // test/unit/Raffle.t.sol: 68:9-68:49 (2003-2043)
[001] 00001944: DUP4                           // test/unit/Raffle.t.sol: 68:9-68:49 (2003-2043)
[001] 00001945: SUB                            // test/unit/Raffle.t.sol: 68:9-68:49 (2003-2043)
[001] 00001946: DUP2                           // test/unit/Raffle.t.sol: 68:9-68:49 (2003-2043)
[001] 00001947: DUP6                           // test/unit/Raffle.t.sol: 68:9-68:49 (2003-2043)
[001] 00001948: DUP9                           // test/unit/Raffle.t.sol: 68:9-68:49 (2003-2043)
[001] 00001949: DUP1                           // test/unit/Raffle.t.sol: 68:9-68:49 (2003-2043)
[001] 0000194a: EXTCODESIZE                    // test/unit/Raffle.t.sol: 68:9-68:49 (2003-2043)
[001] 0000194b: ISZERO                         // test/unit/Raffle.t.sol: 68:9-68:49 (2003-2043)
[001] 0000194c: DUP1                           // test/unit/Raffle.t.sol: 68:9-68:49 (2003-2043)
[001] 0000194d: ISZERO                         // test/unit/Raffle.t.sol: 68:9-68:49 (2003-2043)
[001] 0000194e: PUSH2 0x1956                   // test/unit/Raffle.t.sol: 68:9-68:49 (2003-2043)
[001] 00001951: JUMPI                          // test/unit/Raffle.t.sol: 68:9-68:49 (2003-2043)
      00001952: PUSH1 0x0                      // test/unit/Raffle.t.sol: 68:9-68:49 (2003-2043)
      00001954: DUP1                           // test/unit/Raffle.t.sol: 68:9-68:49 (2003-2043)
      00001955: REVERT                         // test/unit/Raffle.t.sol: 68:9-68:49 (2003-2043)
[001] 00001956: JUMPDEST                       // test/unit/Raffle.t.sol: 68:9-68:49 (2003-2043)
[001] 00001957: POP                            // test/unit/Raffle.t.sol: 68:9-68:49 (2003-2043)
[001] 00001958: GAS                            // test/unit/Raffle.t.sol: 68:9-68:49 (2003-2043)
[001] 00001959: CALL                           // test/unit/Raffle.t.sol: 68:9-68:49 (2003-2043)
[001] 0000195a: ISZERO                         // test/unit/Raffle.t.sol: 68:9-68:49 (2003-2043)
[001] 0000195b: DUP1                           // test/unit/Raffle.t.sol: 68:9-68:49 (2003-2043)
[001] 0000195c: ISZERO                         // test/unit/Raffle.t.sol: 68:9-68:49 (2003-2043)
[001] 0000195d: PUSH2 0x196a                   // test/unit/Raffle.t.sol: 68:9-68:49 (2003-2043)
[001] 00001960: JUMPI                          // test/unit/Raffle.t.sol: 68:9-68:49 (2003-2043)
      00001961: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 68:9-68:49 (2003-2043)
      00001962: PUSH1 0x0                      // test/unit/Raffle.t.sol: 68:9-68:49 (2003-2043)
      00001964: DUP1                           // test/unit/Raffle.t.sol: 68:9-68:49 (2003-2043)
      00001965: RETURNDATACOPY                 // test/unit/Raffle.t.sol: 68:9-68:49 (2003-2043)
      00001966: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 68:9-68:49 (2003-2043)
      00001967: PUSH1 0x0                      // test/unit/Raffle.t.sol: 68:9-68:49 (2003-2043)
      00001969: REVERT                         // test/unit/Raffle.t.sol: 68:9-68:49 (2003-2043)
[001] 0000196a: JUMPDEST                       // test/unit/Raffle.t.sol: 68:9-68:49 (2003-2043)
[001] 0000196b: POP                            // test/unit/Raffle.t.sol: 68:9-68:49 (2003-2043)
[001] 0000196c: POP                            // test/unit/Raffle.t.sol: 68:9-68:49 (2003-2043)
[001] 0000196d: POP                            // test/unit/Raffle.t.sol: 68:9-68:49 (2003-2043)
[001] 0000196e: POP                            // test/unit/Raffle.t.sol: 68:9-68:49 (2003-2043)
[001] 0000196f: POP                            // test/unit/Raffle.t.sol: 68:9-68:49 (2003-2043)
[001] 00001970: JUMP                           // test/unit/Raffle.t.sol: 64:5-69:6 (1821-2050)
[001] 00001971: JUMPDEST                       // test/unit/Raffle.t.sol: 91:5-101:6 (2735-3125)
[001] 00001972: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/Base.sol: 9:68-9:96 (317-345)
[001] 00001993: PUSH1 0x0                      // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00001995: SHR                            // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00001996: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 93:9-93:17 (2825-2833)
[001] 000019ab: AND                            // test/unit/Raffle.t.sol: 93:9-93:17 (2825-2833)
[001] 000019ac: PUSH4 0xca669fa7               // test/unit/Raffle.t.sol: 93:9-93:17 (2825-2833)
[001] 000019b1: PUSH1 0x25                     // test/unit/Raffle.t.sol: 93:18-93:24 (2834-2840)
[001] 000019b3: PUSH1 0x0                      // test/unit/Raffle.t.sol: 93:18-93:24 (2834-2840)
[001] 000019b5: SWAP1                          // test/unit/Raffle.t.sol: 93:18-93:24 (2834-2840)
[001] 000019b6: SLOAD                          // test/unit/Raffle.t.sol: 93:18-93:24 (2834-2840)
[001] 000019b7: SWAP1                          // test/unit/Raffle.t.sol: 93:18-93:24 (2834-2840)
[001] 000019b8: PUSH2 0x100                    // test/unit/Raffle.t.sol: 93:18-93:24 (2834-2840)
[001] 000019bb: EXP                            // test/unit/Raffle.t.sol: 93:18-93:24 (2834-2840)
[001] 000019bc: SWAP1                          // test/unit/Raffle.t.sol: 93:18-93:24 (2834-2840)
[001] 000019bd: DIV                            // test/unit/Raffle.t.sol: 93:18-93:24 (2834-2840)
[001] 000019be: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 93:18-93:24 (2834-2840)
[001] 000019d3: AND                            // test/unit/Raffle.t.sol: 93:18-93:24 (2834-2840)
[001] 000019d4: PUSH1 0x40                     // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
[001] 000019d6: MLOAD                          // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
[001] 000019d7: DUP3                           // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
[001] 000019d8: PUSH4 0xffffffff               // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
[001] 000019dd: AND                            // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
[001] 000019de: PUSH1 0xe0                     // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
[001] 000019e0: SHL                            // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
[001] 000019e1: DUP2                           // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
[001] 000019e2: MSTORE                         // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
[001] 000019e3: PUSH1 0x4                      // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
[001] 000019e5: ADD                            // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
[001] 000019e6: PUSH2 0x19ef                   // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
[001] 000019e9: SWAP2                          // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
[001] 000019ea: SWAP1                          // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
[001] 000019eb: PUSH2 0x25c2                   // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
[001] 000019ee: JUMP                           // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
[001] 000019ef: JUMPDEST                       // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
[001] 000019f0: PUSH1 0x0                      // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
[001] 000019f2: PUSH1 0x40                     // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
[001] 000019f4: MLOAD                          // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
[001] 000019f5: DUP1                           // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
[001] 000019f6: DUP4                           // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
[001] 000019f7: SUB                            // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
[001] 000019f8: DUP2                           // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
[001] 000019f9: PUSH1 0x0                      // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
[001] 000019fb: DUP8                           // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
[001] 000019fc: DUP1                           // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
[001] 000019fd: EXTCODESIZE                    // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
[001] 000019fe: ISZERO                         // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
[001] 000019ff: DUP1                           // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
[001] 00001a00: ISZERO                         // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
[001] 00001a01: PUSH2 0x1a09                   // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
[001] 00001a04: JUMPI                          // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
      00001a05: PUSH1 0x0                      // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
      00001a07: DUP1                           // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
      00001a08: REVERT                         // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
[001] 00001a09: JUMPDEST                       // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
[001] 00001a0a: POP                            // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
[001] 00001a0b: GAS                            // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
[001] 00001a0c: CALL                           // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
[001] 00001a0d: ISZERO                         // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
[001] 00001a0e: DUP1                           // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
[001] 00001a0f: ISZERO                         // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
[001] 00001a10: PUSH2 0x1a1d                   // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
[001] 00001a13: JUMPI                          // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
      00001a14: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
      00001a15: PUSH1 0x0                      // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
      00001a17: DUP1                           // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
      00001a18: RETURNDATACOPY                 // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
      00001a19: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
      00001a1a: PUSH1 0x0                      // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
      00001a1c: REVERT                         // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
[001] 00001a1d: JUMPDEST                       // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
[001] 00001a1e: POP                            // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
[001] 00001a1f: POP                            // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
[001] 00001a20: POP                            // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
[001] 00001a21: POP                            // test/unit/Raffle.t.sol: 93:9-93:25 (2825-2841)
[001] 00001a22: PUSH1 0x1e                     // test/unit/Raffle.t.sol: 94:9-94:15 (2851-2857)
[001] 00001a24: PUSH1 0x1                      // test/unit/Raffle.t.sol: 94:9-94:15 (2851-2857)
[001] 00001a26: SWAP1                          // test/unit/Raffle.t.sol: 94:9-94:15 (2851-2857)
[001] 00001a27: SLOAD                          // test/unit/Raffle.t.sol: 94:9-94:15 (2851-2857)
[001] 00001a28: SWAP1                          // test/unit/Raffle.t.sol: 94:9-94:15 (2851-2857)
[001] 00001a29: PUSH2 0x100                    // test/unit/Raffle.t.sol: 94:9-94:15 (2851-2857)
[001] 00001a2c: EXP                            // test/unit/Raffle.t.sol: 94:9-94:15 (2851-2857)
[001] 00001a2d: SWAP1                          // test/unit/Raffle.t.sol: 94:9-94:15 (2851-2857)
[001] 00001a2e: DIV                            // test/unit/Raffle.t.sol: 94:9-94:15 (2851-2857)
[001] 00001a2f: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 94:9-94:15 (2851-2857)
[001] 00001a44: AND                            // test/unit/Raffle.t.sol: 94:9-94:15 (2851-2857)
[001] 00001a45: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 94:9-94:27 (2851-2869)
[001] 00001a5a: AND                            // test/unit/Raffle.t.sol: 94:9-94:27 (2851-2869)
[001] 00001a5b: PUSH4 0x2cfcc539               // test/unit/Raffle.t.sol: 94:9-94:27 (2851-2869)
[001] 00001a60: PUSH1 0x20                     // test/unit/Raffle.t.sol: 94:35-94:46 (2877-2888)
[001] 00001a62: SLOAD                          // test/unit/Raffle.t.sol: 94:35-94:46 (2877-2888)
[001] 00001a63: PUSH1 0x40                     // test/unit/Raffle.t.sol: 94:9-94:49 (2851-2891)
[001] 00001a65: MLOAD                          // test/unit/Raffle.t.sol: 94:9-94:49 (2851-2891)
[001] 00001a66: DUP3                           // test/unit/Raffle.t.sol: 94:9-94:49 (2851-2891)
[001] 00001a67: PUSH4 0xffffffff               // test/unit/Raffle.t.sol: 94:9-94:49 (2851-2891)
[001] 00001a6c: AND                            // test/unit/Raffle.t.sol: 94:9-94:49 (2851-2891)
[001] 00001a6d: PUSH1 0xe0                     // test/unit/Raffle.t.sol: 94:9-94:49 (2851-2891)
[001] 00001a6f: SHL                            // test/unit/Raffle.t.sol: 94:9-94:49 (2851-2891)
[001] 00001a70: DUP2                           // test/unit/Raffle.t.sol: 94:9-94:49 (2851-2891)
[001] 00001a71: MSTORE                         // test/unit/Raffle.t.sol: 94:9-94:49 (2851-2891)
[001] 00001a72: PUSH1 0x4                      // test/unit/Raffle.t.sol: 94:9-94:49 (2851-2891)
[001] 00001a74: ADD                            // test/unit/Raffle.t.sol: 94:9-94:49 (2851-2891)
[001] 00001a75: PUSH1 0x0                      // test/unit/Raffle.t.sol: 94:9-94:49 (2851-2891)
[001] 00001a77: PUSH1 0x40                     // test/unit/Raffle.t.sol: 94:9-94:49 (2851-2891)
[001] 00001a79: MLOAD                          // test/unit/Raffle.t.sol: 94:9-94:49 (2851-2891)
[001] 00001a7a: DUP1                           // test/unit/Raffle.t.sol: 94:9-94:49 (2851-2891)
[001] 00001a7b: DUP4                           // test/unit/Raffle.t.sol: 94:9-94:49 (2851-2891)
[001] 00001a7c: SUB                            // test/unit/Raffle.t.sol: 94:9-94:49 (2851-2891)
[001] 00001a7d: DUP2                           // test/unit/Raffle.t.sol: 94:9-94:49 (2851-2891)
[001] 00001a7e: DUP6                           // test/unit/Raffle.t.sol: 94:9-94:49 (2851-2891)
[001] 00001a7f: DUP9                           // test/unit/Raffle.t.sol: 94:9-94:49 (2851-2891)
[001] 00001a80: DUP1                           // test/unit/Raffle.t.sol: 94:9-94:49 (2851-2891)
[001] 00001a81: EXTCODESIZE                    // test/unit/Raffle.t.sol: 94:9-94:49 (2851-2891)
[001] 00001a82: ISZERO                         // test/unit/Raffle.t.sol: 94:9-94:49 (2851-2891)
[001] 00001a83: DUP1                           // test/unit/Raffle.t.sol: 94:9-94:49 (2851-2891)
[001] 00001a84: ISZERO                         // test/unit/Raffle.t.sol: 94:9-94:49 (2851-2891)
[001] 00001a85: PUSH2 0x1a8d                   // test/unit/Raffle.t.sol: 94:9-94:49 (2851-2891)
[001] 00001a88: JUMPI                          // test/unit/Raffle.t.sol: 94:9-94:49 (2851-2891)
      00001a89: PUSH1 0x0                      // test/unit/Raffle.t.sol: 94:9-94:49 (2851-2891)
      00001a8b: DUP1                           // test/unit/Raffle.t.sol: 94:9-94:49 (2851-2891)
      00001a8c: REVERT                         // test/unit/Raffle.t.sol: 94:9-94:49 (2851-2891)
[001] 00001a8d: JUMPDEST                       // test/unit/Raffle.t.sol: 94:9-94:49 (2851-2891)
[001] 00001a8e: POP                            // test/unit/Raffle.t.sol: 94:9-94:49 (2851-2891)
[001] 00001a8f: GAS                            // test/unit/Raffle.t.sol: 94:9-94:49 (2851-2891)
[001] 00001a90: CALL                           // test/unit/Raffle.t.sol: 94:9-94:49 (2851-2891)
[001] 00001a91: ISZERO                         // test/unit/Raffle.t.sol: 94:9-94:49 (2851-2891)
[001] 00001a92: DUP1                           // test/unit/Raffle.t.sol: 94:9-94:49 (2851-2891)
[001] 00001a93: ISZERO                         // test/unit/Raffle.t.sol: 94:9-94:49 (2851-2891)
[001] 00001a94: PUSH2 0x1aa1                   // test/unit/Raffle.t.sol: 94:9-94:49 (2851-2891)
[001] 00001a97: JUMPI                          // test/unit/Raffle.t.sol: 94:9-94:49 (2851-2891)
      00001a98: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 94:9-94:49 (2851-2891)
      00001a99: PUSH1 0x0                      // test/unit/Raffle.t.sol: 94:9-94:49 (2851-2891)
      00001a9b: DUP1                           // test/unit/Raffle.t.sol: 94:9-94:49 (2851-2891)
      00001a9c: RETURNDATACOPY                 // test/unit/Raffle.t.sol: 94:9-94:49 (2851-2891)
      00001a9d: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 94:9-94:49 (2851-2891)
      00001a9e: PUSH1 0x0                      // test/unit/Raffle.t.sol: 94:9-94:49 (2851-2891)
      00001aa0: REVERT                         // test/unit/Raffle.t.sol: 94:9-94:49 (2851-2891)
[001] 00001aa1: JUMPDEST                       // test/unit/Raffle.t.sol: 94:9-94:49 (2851-2891)
[001] 00001aa2: POP                            // test/unit/Raffle.t.sol: 94:9-94:49 (2851-2891)
[001] 00001aa3: POP                            // test/unit/Raffle.t.sol: 94:9-94:49 (2851-2891)
[001] 00001aa4: POP                            // test/unit/Raffle.t.sol: 94:9-94:49 (2851-2891)
[001] 00001aa5: POP                            // test/unit/Raffle.t.sol: 94:9-94:49 (2851-2891)
[001] 00001aa6: POP                            // test/unit/Raffle.t.sol: 94:9-94:49 (2851-2891)
[001] 00001aa7: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/Base.sol: 9:68-9:96 (317-345)
[001] 00001ac8: PUSH1 0x0                      // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00001aca: SHR                            // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00001acb: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 95:9-95:16 (2901-2908)
[001] 00001ae0: AND                            // test/unit/Raffle.t.sol: 95:9-95:16 (2901-2908)
[001] 00001ae1: PUSH4 0xe5d6bf02               // test/unit/Raffle.t.sol: 95:9-95:16 (2901-2908)
[001] 00001ae6: PUSH1 0x1                      // test/unit/Raffle.t.sol: 95:46-95:47 (2938-2939)
[001] 00001ae8: PUSH1 0x21                     // test/unit/Raffle.t.sol: 95:35-95:43 (2927-2935)
[001] 00001aea: SLOAD                          // test/unit/Raffle.t.sol: 95:35-95:43 (2927-2935)
[001] 00001aeb: TIMESTAMP                      // test/unit/Raffle.t.sol: 95:17-95:32 (2909-2924)
[001] 00001aec: PUSH2 0x1af5                   // test/unit/Raffle.t.sol: 95:17-95:43 (2909-2935)
[001] 00001aef: SWAP2                          // test/unit/Raffle.t.sol: 95:17-95:43 (2909-2935)
[001] 00001af0: SWAP1                          // test/unit/Raffle.t.sol: 95:17-95:43 (2909-2935)
[001] 00001af1: PUSH2 0x2cde                   // test/unit/Raffle.t.sol: 95:17-95:43 (2909-2935)
[001] 00001af4: JUMP                           // test/unit/Raffle.t.sol: 95:17-95:43 (2909-2935)
[001] 00001af5: JUMPDEST                       // test/unit/Raffle.t.sol: 95:17-95:43 (2909-2935)
[001] 00001af6: PUSH2 0x1aff                   // test/unit/Raffle.t.sol: 95:17-95:47 (2909-2939)
[001] 00001af9: SWAP2                          // test/unit/Raffle.t.sol: 95:17-95:47 (2909-2939)
[001] 00001afa: SWAP1                          // test/unit/Raffle.t.sol: 95:17-95:47 (2909-2939)
[001] 00001afb: PUSH2 0x2cde                   // test/unit/Raffle.t.sol: 95:17-95:47 (2909-2939)
[001] 00001afe: JUMP                           // test/unit/Raffle.t.sol: 95:17-95:47 (2909-2939)
[001] 00001aff: JUMPDEST                       // test/unit/Raffle.t.sol: 95:17-95:47 (2909-2939)
[001] 00001b00: PUSH1 0x40                     // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
[001] 00001b02: MLOAD                          // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
[001] 00001b03: DUP3                           // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
[001] 00001b04: PUSH4 0xffffffff               // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
[001] 00001b09: AND                            // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
[001] 00001b0a: PUSH1 0xe0                     // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
[001] 00001b0c: SHL                            // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
[001] 00001b0d: DUP2                           // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
[001] 00001b0e: MSTORE                         // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
[001] 00001b0f: PUSH1 0x4                      // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
[001] 00001b11: ADD                            // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
[001] 00001b12: PUSH2 0x1b1b                   // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
[001] 00001b15: SWAP2                          // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
[001] 00001b16: SWAP1                          // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
[001] 00001b17: PUSH2 0x2801                   // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
[001] 00001b1a: JUMP                           // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
[001] 00001b1b: JUMPDEST                       // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
[001] 00001b1c: PUSH1 0x0                      // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
[001] 00001b1e: PUSH1 0x40                     // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
[001] 00001b20: MLOAD                          // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
[001] 00001b21: DUP1                           // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
[001] 00001b22: DUP4                           // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
[001] 00001b23: SUB                            // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
[001] 00001b24: DUP2                           // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
[001] 00001b25: PUSH1 0x0                      // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
[001] 00001b27: DUP8                           // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
[001] 00001b28: DUP1                           // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
[001] 00001b29: EXTCODESIZE                    // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
[001] 00001b2a: ISZERO                         // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
[001] 00001b2b: DUP1                           // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
[001] 00001b2c: ISZERO                         // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
[001] 00001b2d: PUSH2 0x1b35                   // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
[001] 00001b30: JUMPI                          // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
      00001b31: PUSH1 0x0                      // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
      00001b33: DUP1                           // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
      00001b34: REVERT                         // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
[001] 00001b35: JUMPDEST                       // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
[001] 00001b36: POP                            // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
[001] 00001b37: GAS                            // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
[001] 00001b38: CALL                           // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
[001] 00001b39: ISZERO                         // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
[001] 00001b3a: DUP1                           // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
[001] 00001b3b: ISZERO                         // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
[001] 00001b3c: PUSH2 0x1b49                   // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
[001] 00001b3f: JUMPI                          // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
      00001b40: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
      00001b41: PUSH1 0x0                      // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
      00001b43: DUP1                           // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
      00001b44: RETURNDATACOPY                 // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
      00001b45: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
      00001b46: PUSH1 0x0                      // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
      00001b48: REVERT                         // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
[001] 00001b49: JUMPDEST                       // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
[001] 00001b4a: POP                            // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
[001] 00001b4b: POP                            // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
[001] 00001b4c: POP                            // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
[001] 00001b4d: POP                            // test/unit/Raffle.t.sol: 95:9-95:48 (2901-2940)
[001] 00001b4e: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/Base.sol: 9:68-9:96 (317-345)
[001] 00001b6f: PUSH1 0x0                      // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00001b71: SHR                            // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00001b72: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 96:9-96:16 (2950-2957)
[001] 00001b87: AND                            // test/unit/Raffle.t.sol: 96:9-96:16 (2950-2957)
[001] 00001b88: PUSH4 0x1f7b4f30               // test/unit/Raffle.t.sol: 96:9-96:16 (2950-2957)
[001] 00001b8d: PUSH1 0x1                      // test/unit/Raffle.t.sol: 96:32-96:33 (2973-2974)
[001] 00001b8f: NUMBER                         // test/unit/Raffle.t.sol: 96:17-96:29 (2958-2970)
[001] 00001b90: PUSH2 0x1b99                   // test/unit/Raffle.t.sol: 96:17-96:33 (2958-2974)
[001] 00001b93: SWAP2                          // test/unit/Raffle.t.sol: 96:17-96:33 (2958-2974)
[001] 00001b94: SWAP1                          // test/unit/Raffle.t.sol: 96:17-96:33 (2958-2974)
[001] 00001b95: PUSH2 0x2cde                   // test/unit/Raffle.t.sol: 96:17-96:33 (2958-2974)
[001] 00001b98: JUMP                           // test/unit/Raffle.t.sol: 96:17-96:33 (2958-2974)
[001] 00001b99: JUMPDEST                       // test/unit/Raffle.t.sol: 96:17-96:33 (2958-2974)
[001] 00001b9a: PUSH1 0x40                     // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
[001] 00001b9c: MLOAD                          // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
[001] 00001b9d: DUP3                           // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
[001] 00001b9e: PUSH4 0xffffffff               // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
[001] 00001ba3: AND                            // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
[001] 00001ba4: PUSH1 0xe0                     // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
[001] 00001ba6: SHL                            // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
[001] 00001ba7: DUP2                           // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
[001] 00001ba8: MSTORE                         // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
[001] 00001ba9: PUSH1 0x4                      // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
[001] 00001bab: ADD                            // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
[001] 00001bac: PUSH2 0x1bb5                   // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
[001] 00001baf: SWAP2                          // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
[001] 00001bb0: SWAP1                          // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
[001] 00001bb1: PUSH2 0x2801                   // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
[001] 00001bb4: JUMP                           // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
[001] 00001bb5: JUMPDEST                       // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
[001] 00001bb6: PUSH1 0x0                      // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
[001] 00001bb8: PUSH1 0x40                     // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
[001] 00001bba: MLOAD                          // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
[001] 00001bbb: DUP1                           // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
[001] 00001bbc: DUP4                           // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
[001] 00001bbd: SUB                            // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
[001] 00001bbe: DUP2                           // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
[001] 00001bbf: PUSH1 0x0                      // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
[001] 00001bc1: DUP8                           // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
[001] 00001bc2: DUP1                           // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
[001] 00001bc3: EXTCODESIZE                    // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
[001] 00001bc4: ISZERO                         // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
[001] 00001bc5: DUP1                           // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
[001] 00001bc6: ISZERO                         // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
[001] 00001bc7: PUSH2 0x1bcf                   // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
[001] 00001bca: JUMPI                          // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
      00001bcb: PUSH1 0x0                      // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
      00001bcd: DUP1                           // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
      00001bce: REVERT                         // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
[001] 00001bcf: JUMPDEST                       // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
[001] 00001bd0: POP                            // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
[001] 00001bd1: GAS                            // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
[001] 00001bd2: CALL                           // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
[001] 00001bd3: ISZERO                         // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
[001] 00001bd4: DUP1                           // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
[001] 00001bd5: ISZERO                         // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
[001] 00001bd6: PUSH2 0x1be3                   // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
[001] 00001bd9: JUMPI                          // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
      00001bda: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
      00001bdb: PUSH1 0x0                      // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
      00001bdd: DUP1                           // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
      00001bde: RETURNDATACOPY                 // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
      00001bdf: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
      00001be0: PUSH1 0x0                      // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
      00001be2: REVERT                         // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
[001] 00001be3: JUMPDEST                       // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
[001] 00001be4: POP                            // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
[001] 00001be5: POP                            // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
[001] 00001be6: POP                            // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
[001] 00001be7: POP                            // test/unit/Raffle.t.sol: 96:9-96:34 (2950-2975)
[001] 00001be8: PUSH1 0x1e                     // test/unit/Raffle.t.sol: 97:9-97:15 (2985-2991)
[001] 00001bea: PUSH1 0x1                      // test/unit/Raffle.t.sol: 97:9-97:15 (2985-2991)
[001] 00001bec: SWAP1                          // test/unit/Raffle.t.sol: 97:9-97:15 (2985-2991)
[001] 00001bed: SLOAD                          // test/unit/Raffle.t.sol: 97:9-97:15 (2985-2991)
[001] 00001bee: SWAP1                          // test/unit/Raffle.t.sol: 97:9-97:15 (2985-2991)
[001] 00001bef: PUSH2 0x100                    // test/unit/Raffle.t.sol: 97:9-97:15 (2985-2991)
[001] 00001bf2: EXP                            // test/unit/Raffle.t.sol: 97:9-97:15 (2985-2991)
[001] 00001bf3: SWAP1                          // test/unit/Raffle.t.sol: 97:9-97:15 (2985-2991)
[001] 00001bf4: DIV                            // test/unit/Raffle.t.sol: 97:9-97:15 (2985-2991)
[001] 00001bf5: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 97:9-97:15 (2985-2991)
[001] 00001c0a: AND                            // test/unit/Raffle.t.sol: 97:9-97:15 (2985-2991)
[001] 00001c0b: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 97:9-97:28 (2985-3004)
[001] 00001c20: AND                            // test/unit/Raffle.t.sol: 97:9-97:28 (2985-3004)
[001] 00001c21: PUSH4 0xf21fbe0f               // test/unit/Raffle.t.sol: 97:9-97:28 (2985-3004)
[001] 00001c26: PUSH1 0x40                     // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
[001] 00001c28: MLOAD                          // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
[001] 00001c29: DUP2                           // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
[001] 00001c2a: PUSH4 0xffffffff               // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
[001] 00001c2f: AND                            // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
[001] 00001c30: PUSH1 0xe0                     // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
[001] 00001c32: SHL                            // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
[001] 00001c33: DUP2                           // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
[001] 00001c34: MSTORE                         // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
[001] 00001c35: PUSH1 0x4                      // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
[001] 00001c37: ADD                            // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
[001] 00001c38: PUSH2 0x1c40                   // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
[001] 00001c3b: SWAP1                          // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
[001] 00001c3c: PUSH2 0x2d49                   // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
[001] 00001c3f: JUMP                           // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
[001] 00001c40: JUMPDEST                       // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
[001] 00001c41: PUSH1 0x0                      // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
[001] 00001c43: PUSH1 0x40                     // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
[001] 00001c45: MLOAD                          // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
[001] 00001c46: DUP1                           // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
[001] 00001c47: DUP4                           // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
[001] 00001c48: SUB                            // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
[001] 00001c49: DUP2                           // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
[001] 00001c4a: PUSH1 0x0                      // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
[001] 00001c4c: DUP8                           // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
[001] 00001c4d: DUP1                           // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
[001] 00001c4e: EXTCODESIZE                    // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
[001] 00001c4f: ISZERO                         // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
[001] 00001c50: DUP1                           // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
[001] 00001c51: ISZERO                         // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
[001] 00001c52: PUSH2 0x1c5a                   // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
[001] 00001c55: JUMPI                          // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
      00001c56: PUSH1 0x0                      // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
      00001c58: DUP1                           // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
      00001c59: REVERT                         // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
[001] 00001c5a: JUMPDEST                       // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
[001] 00001c5b: POP                            // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
[001] 00001c5c: GAS                            // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
[001] 00001c5d: CALL                           // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
[001] 00001c5e: ISZERO                         // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
[001] 00001c5f: DUP1                           // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
[001] 00001c60: ISZERO                         // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
[001] 00001c61: PUSH2 0x1c6e                   // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
[001] 00001c64: JUMPI                          // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
      00001c65: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
      00001c66: PUSH1 0x0                      // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
      00001c68: DUP1                           // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
      00001c69: RETURNDATACOPY                 // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
      00001c6a: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
      00001c6b: PUSH1 0x0                      // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
      00001c6d: REVERT                         // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
[001] 00001c6e: JUMPDEST                       // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
[001] 00001c6f: POP                            // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
[001] 00001c70: POP                            // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
[001] 00001c71: POP                            // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
[001] 00001c72: POP                            // test/unit/Raffle.t.sol: 97:9-97:32 (2985-3008)
[001] 00001c73: PUSH1 0x0                      // test/unit/Raffle.t.sol: 99:10-99:27 (3034-3051)
[001] 00001c75: PUSH1 0x1e                     // test/unit/Raffle.t.sol: 99:33-99:39 (3057-3063)
[001] 00001c77: PUSH1 0x1                      // test/unit/Raffle.t.sol: 99:33-99:39 (3057-3063)
[001] 00001c79: SWAP1                          // test/unit/Raffle.t.sol: 99:33-99:39 (3057-3063)
[001] 00001c7a: SLOAD                          // test/unit/Raffle.t.sol: 99:33-99:39 (3057-3063)
[001] 00001c7b: SWAP1                          // test/unit/Raffle.t.sol: 99:33-99:39 (3057-3063)
[001] 00001c7c: PUSH2 0x100                    // test/unit/Raffle.t.sol: 99:33-99:39 (3057-3063)
[001] 00001c7f: EXP                            // test/unit/Raffle.t.sol: 99:33-99:39 (3057-3063)
[001] 00001c80: SWAP1                          // test/unit/Raffle.t.sol: 99:33-99:39 (3057-3063)
[001] 00001c81: DIV                            // test/unit/Raffle.t.sol: 99:33-99:39 (3057-3063)
[001] 00001c82: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 99:33-99:39 (3057-3063)
[001] 00001c97: AND                            // test/unit/Raffle.t.sol: 99:33-99:39 (3057-3063)
[001] 00001c98: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 99:33-99:51 (3057-3075)
[001] 00001cad: AND                            // test/unit/Raffle.t.sol: 99:33-99:51 (3057-3075)
[001] 00001cae: PUSH4 0x6e04ff0d               // test/unit/Raffle.t.sol: 99:33-99:51 (3057-3075)
[001] 00001cb3: PUSH1 0x40                     // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001cb5: MLOAD                          // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001cb6: DUP2                           // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001cb7: PUSH4 0xffffffff               // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001cbc: AND                            // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001cbd: PUSH1 0xe0                     // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001cbf: SHL                            // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001cc0: DUP2                           // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001cc1: MSTORE                         // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001cc2: PUSH1 0x4                      // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001cc4: ADD                            // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001cc5: PUSH2 0x1ccd                   // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001cc8: SWAP1                          // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001cc9: PUSH2 0x2d49                   // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001ccc: JUMP                           // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001ccd: JUMPDEST                       // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001cce: PUSH1 0x0                      // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001cd0: PUSH1 0x40                     // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001cd2: MLOAD                          // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001cd3: DUP1                           // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001cd4: DUP4                           // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001cd5: SUB                            // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001cd6: DUP2                           // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001cd7: DUP7                           // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001cd8: GAS                            // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001cd9: STATICCALL                     // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001cda: ISZERO                         // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001cdb: DUP1                           // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001cdc: ISZERO                         // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001cdd: PUSH2 0x1cea                   // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001ce0: JUMPI                          // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
      00001ce1: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
      00001ce2: PUSH1 0x0                      // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
      00001ce4: DUP1                           // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
      00001ce5: RETURNDATACOPY                 // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
      00001ce6: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
      00001ce7: PUSH1 0x0                      // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
      00001ce9: REVERT                         // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001cea: JUMPDEST                       // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001ceb: POP                            // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001cec: POP                            // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001ced: POP                            // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001cee: POP                            // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001cef: PUSH1 0x40                     // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001cf1: MLOAD                          // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001cf2: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001cf3: PUSH1 0x0                      // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001cf5: DUP3                           // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001cf6: RETURNDATACOPY                 // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001cf7: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001cf8: PUSH1 0x1f                     // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001cfa: NOT                            // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001cfb: PUSH1 0x1f                     // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001cfd: DUP3                           // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001cfe: ADD                            // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001cff: AND                            // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001d00: DUP3                           // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001d01: ADD                            // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001d02: DUP1                           // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001d03: PUSH1 0x40                     // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001d05: MSTORE                         // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001d06: POP                            // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001d07: DUP2                           // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001d08: ADD                            // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001d09: SWAP1                          // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001d0a: PUSH2 0x1d13                   // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001d0d: SWAP2                          // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001d0e: SWAP1                          // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001d0f: PUSH2 0x2f72                   // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001d12: JUMP                           // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001d13: JUMPDEST                       // test/unit/Raffle.t.sol: 99:33-99:55 (3057-3079)
[001] 00001d14: POP                            // test/unit/Raffle.t.sol: 99:9-99:55 (3033-3079)
[001] 00001d15: SWAP1                          // test/unit/Raffle.t.sol: 99:9-99:55 (3033-3079)
[001] 00001d16: POP                            // test/unit/Raffle.t.sol: 99:9-99:55 (3033-3079)
[001] 00001d17: PUSH1 0x0                      // test/unit/Raffle.t.sol: 100:32-100:37 (3112-3117)
[001] 00001d19: ISZERO                         // test/unit/Raffle.t.sol: 100:16-100:37 (3096-3117)
[001] 00001d1a: ISZERO                         // test/unit/Raffle.t.sol: 100:16-100:37 (3096-3117)
[001] 00001d1b: DUP2                           // test/unit/Raffle.t.sol: 100:16-100:28 (3096-3108)
[001] 00001d1c: ISZERO                         // test/unit/Raffle.t.sol: 100:16-100:37 (3096-3117)
[001] 00001d1d: ISZERO                         // test/unit/Raffle.t.sol: 100:16-100:37 (3096-3117)
[001] 00001d1e: EQ                             // test/unit/Raffle.t.sol: 100:16-100:37 (3096-3117)
[001] 00001d1f: PUSH2 0x1d2b                   // test/unit/Raffle.t.sol: 100:9-100:38 (3089-3118)
[001] 00001d22: JUMPI                          // test/unit/Raffle.t.sol: 100:9-100:38 (3089-3118)
      00001d23: PUSH2 0x1d2a                   // test/unit/Raffle.t.sol: 100:9-100:38 (3089-3118)
      00001d26: PUSH2 0x2c20                   // test/unit/Raffle.t.sol: 100:9-100:38 (3089-3118)
      00001d29: JUMP                           // test/unit/Raffle.t.sol: 100:9-100:38 (3089-3118)
      00001d2a: JUMPDEST                       // test/unit/Raffle.t.sol: 100:9-100:38 (3089-3118)
[001] 00001d2b: JUMPDEST                       // test/unit/Raffle.t.sol: 100:9-100:38 (3089-3118)
[001] 00001d2c: POP                            // test/unit/Raffle.t.sol: 91:66-101:6 (2796-3125)
[001] 00001d2d: JUMP                           // test/unit/Raffle.t.sol: 91:5-101:6 (2735-3125)
      00001d2e: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 72:5-74:6 (2157-2298)
      00001d2f: PUSH1 0x60                     // lib/forge-std/src/StdInvariant.sol: 72:54-72:88 (2206-2240)
      00001d31: PUSH1 0x19                     // lib/forge-std/src/StdInvariant.sol: 73:30-73:48 (2273-2291)
      00001d33: DUP1                           // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d34: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d35: DUP1                           // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d36: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d38: MUL                            // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d39: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d3b: ADD                            // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d3c: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d3e: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d3f: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d40: DUP2                           // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d41: ADD                            // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d42: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d44: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d45: DUP1                           // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d46: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d47: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d48: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d49: DUP2                           // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d4a: DUP2                           // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d4b: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d4c: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d4e: ADD                            // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d4f: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d51: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d52: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d53: DUP3                           // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d54: DUP3                           // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d55: LT                             // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d56: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d57: PUSH2 0x1dfe                   // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d5a: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d5b: DUP4                           // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d5c: DUP3                           // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d5d: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d5e: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d60: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d61: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d63: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d65: SHA3                           // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d66: ADD                            // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d67: DUP1                           // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d68: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d69: PUSH2 0x1d71                   // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d6c: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d6d: PUSH2 0x2c7e                   // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d70: JUMP                           // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d71: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d72: DUP1                           // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d73: PUSH1 0x1f                     // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d75: ADD                            // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d76: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d78: DUP1                           // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d79: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d7a: DIV                            // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d7b: MUL                            // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d7c: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d7e: ADD                            // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d7f: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d81: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d82: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d83: DUP2                           // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d84: ADD                            // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d85: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d87: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d88: DUP1                           // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d89: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d8a: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d8b: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d8c: DUP2                           // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d8d: DUP2                           // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d8e: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d8f: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d91: ADD                            // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d92: DUP3                           // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d93: DUP1                           // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d94: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d95: PUSH2 0x1d9d                   // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d98: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d99: PUSH2 0x2c7e                   // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d9c: JUMP                           // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d9d: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d9e: DUP1                           // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001d9f: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001da0: PUSH2 0x1dea                   // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001da3: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001da4: DUP1                           // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001da5: PUSH1 0x1f                     // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001da7: LT                             // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001da8: PUSH2 0x1dbf                   // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001dab: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001dac: PUSH2 0x100                    // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001daf: DUP1                           // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001db0: DUP4                           // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001db1: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001db2: DIV                            // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001db3: MUL                            // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001db4: DUP4                           // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001db5: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001db6: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001db7: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001db9: ADD                            // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001dba: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001dbb: PUSH2 0x1dea                   // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001dbe: JUMP                           // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001dbf: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001dc0: DUP3                           // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001dc1: ADD                            // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001dc2: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001dc3: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001dc4: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001dc6: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001dc7: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001dc9: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001dcb: SHA3                           // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001dcc: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001dcd: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001dce: DUP2                           // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001dcf: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001dd0: DUP2                           // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001dd1: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001dd2: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001dd3: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001dd5: ADD                            // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001dd6: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001dd7: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001dd9: ADD                            // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001dda: DUP1                           // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001ddb: DUP4                           // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001ddc: GT                             // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001ddd: PUSH2 0x1dcd                   // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001de0: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001de1: DUP3                           // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001de2: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001de3: SUB                            // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001de4: PUSH1 0x1f                     // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001de6: AND                            // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001de7: DUP3                           // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001de8: ADD                            // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001de9: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001dea: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001deb: POP                            // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001dec: POP                            // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001ded: POP                            // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001dee: POP                            // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001def: POP                            // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001df0: DUP2                           // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001df1: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001df2: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001df4: ADD                            // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001df5: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001df6: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001df8: ADD                            // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001df9: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001dfa: PUSH2 0x1d52                   // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001dfd: JUMP                           // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001dfe: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001dff: POP                            // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001e00: POP                            // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001e01: POP                            // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001e02: POP                            // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001e03: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001e04: POP                            // lib/forge-std/src/StdInvariant.sol: 73:9-73:48 (2252-2291)
      00001e05: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 72:5-74:6 (2157-2298)
      00001e06: JUMP                           // lib/forge-std/src/StdInvariant.sol: 72:5-74:6 (2157-2298)
      00001e07: JUMPDEST                       // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      00001e08: PUSH1 0x0                      // lib/forge-std/src/StdAssertions.sol: 38:44-38:48 (1282-1286)
      00001e0a: PUSH1 0x8                      // lib/forge-std/src/StdAssertions.sol: 39:13-39:20 (1302-1309)
      00001e0c: PUSH1 0x0                      // lib/forge-std/src/StdAssertions.sol: 39:13-39:20 (1302-1309)
      00001e0e: SWAP1                          // lib/forge-std/src/StdAssertions.sol: 39:13-39:20 (1302-1309)
      00001e0f: SLOAD                          // lib/forge-std/src/StdAssertions.sol: 39:13-39:20 (1302-1309)
      00001e10: SWAP1                          // lib/forge-std/src/StdAssertions.sol: 39:13-39:20 (1302-1309)
      00001e11: PUSH2 0x100                    // lib/forge-std/src/StdAssertions.sol: 39:13-39:20 (1302-1309)
      00001e14: EXP                            // lib/forge-std/src/StdAssertions.sol: 39:13-39:20 (1302-1309)
      00001e15: SWAP1                          // lib/forge-std/src/StdAssertions.sol: 39:13-39:20 (1302-1309)
      00001e16: DIV                            // lib/forge-std/src/StdAssertions.sol: 39:13-39:20 (1302-1309)
      00001e17: PUSH1 0xff                     // lib/forge-std/src/StdAssertions.sol: 39:13-39:20 (1302-1309)
      00001e19: AND                            // lib/forge-std/src/StdAssertions.sol: 39:13-39:20 (1302-1309)
      00001e1a: ISZERO                         // lib/forge-std/src/StdAssertions.sol: 39:9-43:10 (1298-1441)
      00001e1b: PUSH2 0x1e35                   // lib/forge-std/src/StdAssertions.sol: 39:9-43:10 (1298-1441)
      00001e1e: JUMPI                          // lib/forge-std/src/StdAssertions.sol: 39:9-43:10 (1298-1441)
      00001e1f: PUSH1 0x8                      // lib/forge-std/src/StdAssertions.sol: 40:20-40:27 (1332-1339)
      00001e21: PUSH1 0x0                      // lib/forge-std/src/StdAssertions.sol: 40:20-40:27 (1332-1339)
      00001e23: SWAP1                          // lib/forge-std/src/StdAssertions.sol: 40:20-40:27 (1332-1339)
      00001e24: SLOAD                          // lib/forge-std/src/StdAssertions.sol: 40:20-40:27 (1332-1339)
      00001e25: SWAP1                          // lib/forge-std/src/StdAssertions.sol: 40:20-40:27 (1332-1339)
      00001e26: PUSH2 0x100                    // lib/forge-std/src/StdAssertions.sol: 40:20-40:27 (1332-1339)
      00001e29: EXP                            // lib/forge-std/src/StdAssertions.sol: 40:20-40:27 (1332-1339)
      00001e2a: SWAP1                          // lib/forge-std/src/StdAssertions.sol: 40:20-40:27 (1332-1339)
      00001e2b: DIV                            // lib/forge-std/src/StdAssertions.sol: 40:20-40:27 (1332-1339)
      00001e2c: PUSH1 0xff                     // lib/forge-std/src/StdAssertions.sol: 40:20-40:27 (1332-1339)
      00001e2e: AND                            // lib/forge-std/src/StdAssertions.sol: 40:20-40:27 (1332-1339)
      00001e2f: SWAP1                          // lib/forge-std/src/StdAssertions.sol: 40:13-40:27 (1325-1339)
      00001e30: POP                            // lib/forge-std/src/StdAssertions.sol: 40:13-40:27 (1325-1339)
      00001e31: PUSH2 0x1f20                   // lib/forge-std/src/StdAssertions.sol: 40:13-40:27 (1325-1339)
      00001e34: JUMP                           // lib/forge-std/src/StdAssertions.sol: 40:13-40:27 (1325-1339)
      00001e35: JUMPDEST                       // lib/forge-std/src/StdAssertions.sol: 39:9-43:10 (1298-1441)
      00001e36: PUSH1 0x0                      // lib/forge-std/src/StdAssertions.sol: 42:71-42:72 (1428-1429)
      00001e38: DUP1                           // lib/forge-std/src/StdAssertions.sol: 42:63-42:73 (1420-1430)
      00001e39: SHL                            // lib/forge-std/src/StdAssertions.sol: 42:63-42:73 (1420-1430)
      00001e3a: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/StdAssertions.sol: 8:57-8:85 (219-247)
      00001e5b: PUSH1 0x0                      // lib/forge-std/src/StdAssertions.sol: 8:49-8:86 (211-248)
      00001e5d: SHR                            // lib/forge-std/src/StdAssertions.sol: 8:49-8:86 (211-248)
      00001e5e: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdAssertions.sol: 42:20-42:27 (1377-1384)
      00001e73: AND                            // lib/forge-std/src/StdAssertions.sol: 42:20-42:27 (1377-1384)
      00001e74: PUSH4 0x667f9d70               // lib/forge-std/src/StdAssertions.sol: 42:20-42:27 (1377-1384)
      00001e79: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/StdAssertions.sol: 8:57-8:85 (219-247)
      00001e9a: PUSH1 0x0                      // lib/forge-std/src/StdAssertions.sol: 8:49-8:86 (211-248)
      00001e9c: SHR                            // lib/forge-std/src/StdAssertions.sol: 8:49-8:86 (211-248)
      00001e9d: PUSH32 0x6661696c65640000000000000000000000000000000000000000000000000000 // lib/forge-std/src/StdAssertions.sol: 42:41-42:58 (1398-1415)
      00001ebe: PUSH1 0x40                     // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ec0: MLOAD                          // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ec1: DUP4                           // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ec2: PUSH4 0xffffffff               // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ec7: AND                            // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ec8: PUSH1 0xe0                     // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001eca: SHL                            // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ecb: DUP2                           // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ecc: MSTORE                         // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ecd: PUSH1 0x4                      // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ecf: ADD                            // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ed0: PUSH2 0x1eda                   // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ed3: SWAP3                          // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ed4: SWAP2                          // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ed5: SWAP1                          // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ed6: PUSH2 0x3030                   // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ed9: JUMP                           // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001eda: JUMPDEST                       // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001edb: PUSH1 0x20                     // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001edd: PUSH1 0x40                     // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001edf: MLOAD                          // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ee0: DUP1                           // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ee1: DUP4                           // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ee2: SUB                            // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ee3: DUP2                           // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ee4: DUP7                           // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ee5: GAS                            // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ee6: STATICCALL                     // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ee7: ISZERO                         // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ee8: DUP1                           // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ee9: ISZERO                         // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001eea: PUSH2 0x1ef7                   // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001eed: JUMPI                          // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001eee: RETURNDATASIZE                 // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001eef: PUSH1 0x0                      // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ef1: DUP1                           // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ef2: RETURNDATACOPY                 // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ef3: RETURNDATASIZE                 // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ef4: PUSH1 0x0                      // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ef6: REVERT                         // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ef7: JUMPDEST                       // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ef8: POP                            // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001ef9: POP                            // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001efa: POP                            // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001efb: POP                            // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001efc: PUSH1 0x40                     // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001efe: MLOAD                          // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001eff: RETURNDATASIZE                 // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001f00: PUSH1 0x1f                     // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001f02: NOT                            // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001f03: PUSH1 0x1f                     // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001f05: DUP3                           // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001f06: ADD                            // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001f07: AND                            // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001f08: DUP3                           // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001f09: ADD                            // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001f0a: DUP1                           // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001f0b: PUSH1 0x40                     // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001f0d: MSTORE                         // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001f0e: POP                            // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001f0f: DUP2                           // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001f10: ADD                            // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001f11: SWAP1                          // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001f12: PUSH2 0x1f1b                   // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001f15: SWAP2                          // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001f16: SWAP1                          // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001f17: PUSH2 0x3059                   // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001f1a: JUMP                           // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001f1b: JUMPDEST                       // lib/forge-std/src/StdAssertions.sol: 42:20-42:59 (1377-1416)
      00001f1c: EQ                             // lib/forge-std/src/StdAssertions.sol: 42:20-42:73 (1377-1430)
      00001f1d: ISZERO                         // lib/forge-std/src/StdAssertions.sol: 42:20-42:73 (1377-1430)
      00001f1e: SWAP1                          // lib/forge-std/src/StdAssertions.sol: 42:13-42:73 (1370-1430)
      00001f1f: POP                            // lib/forge-std/src/StdAssertions.sol: 42:13-42:73 (1370-1430)
      00001f20: JUMPDEST                       // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      00001f21: SWAP1                          // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
      00001f22: JUMP                           // lib/forge-std/src/StdAssertions.sol: 38:5-44:6 (1243-1447)
[001] 00001f23: JUMPDEST                       // test/unit/Raffle.t.sol: 48:5-55:6 (1337-1575)
[001] 00001f24: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/Base.sol: 9:68-9:96 (317-345)
[001] 00001f45: PUSH1 0x0                      // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00001f47: SHR                            // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00001f48: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 50:9-50:17 (1422-1430)
[001] 00001f5d: AND                            // test/unit/Raffle.t.sol: 50:9-50:17 (1422-1430)
[001] 00001f5e: PUSH4 0xca669fa7               // test/unit/Raffle.t.sol: 50:9-50:17 (1422-1430)
[001] 00001f63: PUSH1 0x25                     // test/unit/Raffle.t.sol: 50:18-50:24 (1431-1437)
[001] 00001f65: PUSH1 0x0                      // test/unit/Raffle.t.sol: 50:18-50:24 (1431-1437)
[001] 00001f67: SWAP1                          // test/unit/Raffle.t.sol: 50:18-50:24 (1431-1437)
[001] 00001f68: SLOAD                          // test/unit/Raffle.t.sol: 50:18-50:24 (1431-1437)
[001] 00001f69: SWAP1                          // test/unit/Raffle.t.sol: 50:18-50:24 (1431-1437)
[001] 00001f6a: PUSH2 0x100                    // test/unit/Raffle.t.sol: 50:18-50:24 (1431-1437)
[001] 00001f6d: EXP                            // test/unit/Raffle.t.sol: 50:18-50:24 (1431-1437)
[001] 00001f6e: SWAP1                          // test/unit/Raffle.t.sol: 50:18-50:24 (1431-1437)
[001] 00001f6f: DIV                            // test/unit/Raffle.t.sol: 50:18-50:24 (1431-1437)
[001] 00001f70: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 50:18-50:24 (1431-1437)
[001] 00001f85: AND                            // test/unit/Raffle.t.sol: 50:18-50:24 (1431-1437)
[001] 00001f86: PUSH1 0x40                     // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
[001] 00001f88: MLOAD                          // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
[001] 00001f89: DUP3                           // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
[001] 00001f8a: PUSH4 0xffffffff               // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
[001] 00001f8f: AND                            // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
[001] 00001f90: PUSH1 0xe0                     // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
[001] 00001f92: SHL                            // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
[001] 00001f93: DUP2                           // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
[001] 00001f94: MSTORE                         // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
[001] 00001f95: PUSH1 0x4                      // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
[001] 00001f97: ADD                            // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
[001] 00001f98: PUSH2 0x1fa1                   // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
[001] 00001f9b: SWAP2                          // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
[001] 00001f9c: SWAP1                          // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
[001] 00001f9d: PUSH2 0x25c2                   // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
[001] 00001fa0: JUMP                           // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
[001] 00001fa1: JUMPDEST                       // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
[001] 00001fa2: PUSH1 0x0                      // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
[001] 00001fa4: PUSH1 0x40                     // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
[001] 00001fa6: MLOAD                          // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
[001] 00001fa7: DUP1                           // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
[001] 00001fa8: DUP4                           // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
[001] 00001fa9: SUB                            // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
[001] 00001faa: DUP2                           // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
[001] 00001fab: PUSH1 0x0                      // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
[001] 00001fad: DUP8                           // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
[001] 00001fae: DUP1                           // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
[001] 00001faf: EXTCODESIZE                    // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
[001] 00001fb0: ISZERO                         // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
[001] 00001fb1: DUP1                           // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
[001] 00001fb2: ISZERO                         // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
[001] 00001fb3: PUSH2 0x1fbb                   // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
[001] 00001fb6: JUMPI                          // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
      00001fb7: PUSH1 0x0                      // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
      00001fb9: DUP1                           // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
      00001fba: REVERT                         // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
[001] 00001fbb: JUMPDEST                       // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
[001] 00001fbc: POP                            // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
[001] 00001fbd: GAS                            // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
[001] 00001fbe: CALL                           // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
[001] 00001fbf: ISZERO                         // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
[001] 00001fc0: DUP1                           // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
[001] 00001fc1: ISZERO                         // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
[001] 00001fc2: PUSH2 0x1fcf                   // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
[001] 00001fc5: JUMPI                          // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
      00001fc6: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
      00001fc7: PUSH1 0x0                      // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
      00001fc9: DUP1                           // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
      00001fca: RETURNDATACOPY                 // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
      00001fcb: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
      00001fcc: PUSH1 0x0                      // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
      00001fce: REVERT                         // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
[001] 00001fcf: JUMPDEST                       // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
[001] 00001fd0: POP                            // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
[001] 00001fd1: POP                            // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
[001] 00001fd2: POP                            // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
[001] 00001fd3: POP                            // test/unit/Raffle.t.sol: 50:9-50:25 (1422-1438)
[001] 00001fd4: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/Base.sol: 9:68-9:96 (317-345)
[001] 00001ff5: PUSH1 0x0                      // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00001ff7: SHR                            // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00001ff8: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 52:9-52:24 (1463-1478)
[001] 0000200d: AND                            // test/unit/Raffle.t.sol: 52:9-52:24 (1463-1478)
[001] 0000200e: PUSH4 0xc31eb0e0               // test/unit/Raffle.t.sol: 52:9-52:24 (1463-1478)
[001] 00002013: PUSH4 0x93a04913               // test/unit/Raffle.t.sol: 52:25-52:65 (1479-1519)
[001] 00002018: PUSH1 0xe0                     // test/unit/Raffle.t.sol: 52:25-52:65 (1479-1519)
[001] 0000201a: SHL                            // test/unit/Raffle.t.sol: 52:25-52:65 (1479-1519)
[001] 0000201b: PUSH1 0x40                     // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
[001] 0000201d: MLOAD                          // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
[001] 0000201e: DUP3                           // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
[001] 0000201f: PUSH4 0xffffffff               // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
[001] 00002024: AND                            // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
[001] 00002025: PUSH1 0xe0                     // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
[001] 00002027: SHL                            // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
[001] 00002028: DUP2                           // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
[001] 00002029: MSTORE                         // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
[001] 0000202a: PUSH1 0x4                      // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
[001] 0000202c: ADD                            // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
[001] 0000202d: PUSH2 0x2036                   // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
[001] 00002030: SWAP2                          // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
[001] 00002031: SWAP1                          // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
[001] 00002032: PUSH2 0x2d78                   // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
[001] 00002035: JUMP                           // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
[001] 00002036: JUMPDEST                       // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
[001] 00002037: PUSH1 0x0                      // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
[001] 00002039: PUSH1 0x40                     // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
[001] 0000203b: MLOAD                          // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
[001] 0000203c: DUP1                           // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
[001] 0000203d: DUP4                           // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
[001] 0000203e: SUB                            // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
[001] 0000203f: DUP2                           // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
[001] 00002040: PUSH1 0x0                      // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
[001] 00002042: DUP8                           // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
[001] 00002043: DUP1                           // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
[001] 00002044: EXTCODESIZE                    // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
[001] 00002045: ISZERO                         // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
[001] 00002046: DUP1                           // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
[001] 00002047: ISZERO                         // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
[001] 00002048: PUSH2 0x2050                   // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
[001] 0000204b: JUMPI                          // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
      0000204c: PUSH1 0x0                      // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
      0000204e: DUP1                           // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
      0000204f: REVERT                         // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
[001] 00002050: JUMPDEST                       // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
[001] 00002051: POP                            // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
[001] 00002052: GAS                            // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
[001] 00002053: CALL                           // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
[001] 00002054: ISZERO                         // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
[001] 00002055: DUP1                           // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
[001] 00002056: ISZERO                         // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
[001] 00002057: PUSH2 0x2064                   // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
[001] 0000205a: JUMPI                          // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
      0000205b: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
      0000205c: PUSH1 0x0                      // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
      0000205e: DUP1                           // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
      0000205f: RETURNDATACOPY                 // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
      00002060: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
      00002061: PUSH1 0x0                      // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
      00002063: REVERT                         // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
[001] 00002064: JUMPDEST                       // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
[001] 00002065: POP                            // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
[001] 00002066: POP                            // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
[001] 00002067: POP                            // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
[001] 00002068: POP                            // test/unit/Raffle.t.sol: 52:9-52:66 (1463-1520)
[001] 00002069: PUSH1 0x1e                     // test/unit/Raffle.t.sol: 54:9-54:15 (1548-1554)
[001] 0000206b: PUSH1 0x1                      // test/unit/Raffle.t.sol: 54:9-54:15 (1548-1554)
[001] 0000206d: SWAP1                          // test/unit/Raffle.t.sol: 54:9-54:15 (1548-1554)
[001] 0000206e: SLOAD                          // test/unit/Raffle.t.sol: 54:9-54:15 (1548-1554)
[001] 0000206f: SWAP1                          // test/unit/Raffle.t.sol: 54:9-54:15 (1548-1554)
[001] 00002070: PUSH2 0x100                    // test/unit/Raffle.t.sol: 54:9-54:15 (1548-1554)
[001] 00002073: EXP                            // test/unit/Raffle.t.sol: 54:9-54:15 (1548-1554)
[001] 00002074: SWAP1                          // test/unit/Raffle.t.sol: 54:9-54:15 (1548-1554)
[001] 00002075: DIV                            // test/unit/Raffle.t.sol: 54:9-54:15 (1548-1554)
[001] 00002076: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 54:9-54:15 (1548-1554)
[001] 0000208b: AND                            // test/unit/Raffle.t.sol: 54:9-54:15 (1548-1554)
[001] 0000208c: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/unit/Raffle.t.sol: 54:9-54:27 (1548-1566)
[001] 000020a1: AND                            // test/unit/Raffle.t.sol: 54:9-54:27 (1548-1566)
[001] 000020a2: PUSH4 0x2cfcc539               // test/unit/Raffle.t.sol: 54:9-54:27 (1548-1566)
[001] 000020a7: PUSH1 0x40                     // test/unit/Raffle.t.sol: 54:9-54:29 (1548-1568)
[001] 000020a9: MLOAD                          // test/unit/Raffle.t.sol: 54:9-54:29 (1548-1568)
[001] 000020aa: DUP2                           // test/unit/Raffle.t.sol: 54:9-54:29 (1548-1568)
[001] 000020ab: PUSH4 0xffffffff               // test/unit/Raffle.t.sol: 54:9-54:29 (1548-1568)
[001] 000020b0: AND                            // test/unit/Raffle.t.sol: 54:9-54:29 (1548-1568)
[001] 000020b1: PUSH1 0xe0                     // test/unit/Raffle.t.sol: 54:9-54:29 (1548-1568)
[001] 000020b3: SHL                            // test/unit/Raffle.t.sol: 54:9-54:29 (1548-1568)
[001] 000020b4: DUP2                           // test/unit/Raffle.t.sol: 54:9-54:29 (1548-1568)
[001] 000020b5: MSTORE                         // test/unit/Raffle.t.sol: 54:9-54:29 (1548-1568)
[001] 000020b6: PUSH1 0x4                      // test/unit/Raffle.t.sol: 54:9-54:29 (1548-1568)
[001] 000020b8: ADD                            // test/unit/Raffle.t.sol: 54:9-54:29 (1548-1568)
[001] 000020b9: PUSH1 0x0                      // test/unit/Raffle.t.sol: 54:9-54:29 (1548-1568)
[001] 000020bb: PUSH1 0x40                     // test/unit/Raffle.t.sol: 54:9-54:29 (1548-1568)
[001] 000020bd: MLOAD                          // test/unit/Raffle.t.sol: 54:9-54:29 (1548-1568)
[001] 000020be: DUP1                           // test/unit/Raffle.t.sol: 54:9-54:29 (1548-1568)
[001] 000020bf: DUP4                           // test/unit/Raffle.t.sol: 54:9-54:29 (1548-1568)
[001] 000020c0: SUB                            // test/unit/Raffle.t.sol: 54:9-54:29 (1548-1568)
[001] 000020c1: DUP2                           // test/unit/Raffle.t.sol: 54:9-54:29 (1548-1568)
[001] 000020c2: PUSH1 0x0                      // test/unit/Raffle.t.sol: 54:9-54:29 (1548-1568)
[001] 000020c4: DUP8                           // test/unit/Raffle.t.sol: 54:9-54:29 (1548-1568)
[001] 000020c5: DUP1                           // test/unit/Raffle.t.sol: 54:9-54:29 (1548-1568)
[001] 000020c6: EXTCODESIZE                    // test/unit/Raffle.t.sol: 54:9-54:29 (1548-1568)
[001] 000020c7: ISZERO                         // test/unit/Raffle.t.sol: 54:9-54:29 (1548-1568)
[001] 000020c8: DUP1                           // test/unit/Raffle.t.sol: 54:9-54:29 (1548-1568)
[001] 000020c9: ISZERO                         // test/unit/Raffle.t.sol: 54:9-54:29 (1548-1568)
[001] 000020ca: PUSH2 0x20d2                   // test/unit/Raffle.t.sol: 54:9-54:29 (1548-1568)
[001] 000020cd: JUMPI                          // test/unit/Raffle.t.sol: 54:9-54:29 (1548-1568)
      000020ce: PUSH1 0x0                      // test/unit/Raffle.t.sol: 54:9-54:29 (1548-1568)
      000020d0: DUP1                           // test/unit/Raffle.t.sol: 54:9-54:29 (1548-1568)
      000020d1: REVERT                         // test/unit/Raffle.t.sol: 54:9-54:29 (1548-1568)
[001] 000020d2: JUMPDEST                       // test/unit/Raffle.t.sol: 54:9-54:29 (1548-1568)
[001] 000020d3: POP                            // test/unit/Raffle.t.sol: 54:9-54:29 (1548-1568)
[001] 000020d4: GAS                            // test/unit/Raffle.t.sol: 54:9-54:29 (1548-1568)
[001] 000020d5: CALL                           // test/unit/Raffle.t.sol: 54:9-54:29 (1548-1568)
[001] 000020d6: ISZERO                         // test/unit/Raffle.t.sol: 54:9-54:29 (1548-1568)
[001] 000020d7: DUP1                           // test/unit/Raffle.t.sol: 54:9-54:29 (1548-1568)
[001] 000020d8: ISZERO                         // test/unit/Raffle.t.sol: 54:9-54:29 (1548-1568)
[001] 000020d9: PUSH2 0x20e6                   // test/unit/Raffle.t.sol: 54:9-54:29 (1548-1568)
[001] 000020dc: JUMPI                          // test/unit/Raffle.t.sol: 54:9-54:29 (1548-1568)
      000020dd: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 54:9-54:29 (1548-1568)
      000020de: PUSH1 0x0                      // test/unit/Raffle.t.sol: 54:9-54:29 (1548-1568)
      000020e0: DUP1                           // test/unit/Raffle.t.sol: 54:9-54:29 (1548-1568)
      000020e1: RETURNDATACOPY                 // test/unit/Raffle.t.sol: 54:9-54:29 (1548-1568)
      000020e2: RETURNDATASIZE                 // test/unit/Raffle.t.sol: 54:9-54:29 (1548-1568)
      000020e3: PUSH1 0x0                      // test/unit/Raffle.t.sol: 54:9-54:29 (1548-1568)
      000020e5: REVERT                         // test/unit/Raffle.t.sol: 54:9-54:29 (1548-1568)
[001] 000020e6: JUMPDEST                       // test/unit/Raffle.t.sol: 54:9-54:29 (1548-1568)
[001] 000020e7: POP                            // test/unit/Raffle.t.sol: 54:9-54:29 (1548-1568)
[001] 000020e8: POP                            // test/unit/Raffle.t.sol: 54:9-54:29 (1548-1568)
[001] 000020e9: POP                            // test/unit/Raffle.t.sol: 54:9-54:29 (1548-1568)
[001] 000020ea: POP                            // test/unit/Raffle.t.sol: 54:9-54:29 (1548-1568)
[001] 000020eb: JUMP                           // test/unit/Raffle.t.sol: 48:5-55:6 (1337-1575)
      000020ec: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 76:5-78:6 (2304-2446)
      000020ed: PUSH1 0x60                     // lib/forge-std/src/StdInvariant.sol: 76:54-76:89 (2353-2388)
      000020ef: PUSH1 0x15                     // lib/forge-std/src/StdInvariant.sol: 77:30-77:48 (2421-2439)
      000020f1: DUP1                           // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      000020f2: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      000020f3: DUP1                           // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      000020f4: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      000020f6: MUL                            // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      000020f7: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      000020f9: ADD                            // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      000020fa: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      000020fc: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      000020fd: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      000020fe: DUP2                           // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      000020ff: ADD                            // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      00002100: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      00002102: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      00002103: DUP1                           // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      00002104: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      00002105: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      00002106: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      00002107: DUP2                           // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      00002108: DUP2                           // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      00002109: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      0000210a: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      0000210c: ADD                            // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      0000210d: DUP3                           // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      0000210e: DUP1                           // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      0000210f: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      00002110: DUP1                           // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      00002111: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      00002112: PUSH2 0x2170                   // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      00002115: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      00002116: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      00002118: MUL                            // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      00002119: DUP3                           // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      0000211a: ADD                            // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      0000211b: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      0000211c: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      0000211d: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      0000211f: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      00002120: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      00002122: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      00002124: SHA3                           // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      00002125: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      00002126: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      00002127: DUP2                           // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      00002128: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      0000212a: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      0000212b: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      0000212c: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      0000212d: PUSH2 0x100                    // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      00002130: EXP                            // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      00002131: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      00002132: DIV                            // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      00002133: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      00002148: AND                            // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      00002149: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      0000215e: AND                            // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      0000215f: DUP2                           // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      00002160: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      00002161: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      00002163: ADD                            // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      00002164: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      00002165: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      00002167: ADD                            // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      00002168: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      00002169: DUP1                           // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      0000216a: DUP4                           // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      0000216b: GT                             // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      0000216c: PUSH2 0x2126                   // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      0000216f: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      00002170: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      00002171: POP                            // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      00002172: POP                            // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      00002173: POP                            // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      00002174: POP                            // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      00002175: POP                            // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      00002176: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      00002177: POP                            // lib/forge-std/src/StdInvariant.sol: 77:9-77:48 (2400-2439)
      00002178: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 76:5-78:6 (2304-2446)
      00002179: JUMP                           // lib/forge-std/src/StdInvariant.sol: 76:5-78:6 (2304-2446)
      0000217a: JUMPDEST                       // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      0000217b: PUSH1 0x1e                     // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      0000217d: PUSH1 0x0                      // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      0000217f: SWAP1                          // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      00002180: SLOAD                          // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      00002181: SWAP1                          // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      00002182: PUSH2 0x100                    // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      00002185: EXP                            // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      00002186: SWAP1                          // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      00002187: DIV                            // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      00002188: PUSH1 0xff                     // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      0000218a: AND                            // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      0000218b: DUP2                           // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
      0000218c: JUMP                           // lib/forge-std/src/Test.sol: 32:5-32:31 (1016-1042)
[001] 0000218d: JUMPDEST                       // lib/forge-std/src/StdAssertions.sol: 67:5-69:6 (2026-2130)
[001] 0000218e: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/StdAssertions.sol: 8:57-8:85 (219-247)
[001] 000021af: PUSH1 0x0                      // lib/forge-std/src/StdAssertions.sol: 8:49-8:86 (211-248)
[001] 000021b1: SHR                            // lib/forge-std/src/StdAssertions.sol: 8:49-8:86 (211-248)
[001] 000021b2: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdAssertions.sol: 68:9-68:20 (2099-2110)
[001] 000021c7: AND                            // lib/forge-std/src/StdAssertions.sol: 68:9-68:20 (2099-2110)
[001] 000021c8: PUSH4 0xf7fe3477               // lib/forge-std/src/StdAssertions.sol: 68:9-68:20 (2099-2110)
[001] 000021cd: DUP4                           // lib/forge-std/src/StdAssertions.sol: 68:21-68:25 (2111-2115)
[001] 000021ce: DUP4                           // lib/forge-std/src/StdAssertions.sol: 68:27-68:32 (2117-2122)
[001] 000021cf: PUSH1 0x40                     // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
[001] 000021d1: MLOAD                          // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
[001] 000021d2: DUP4                           // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
[001] 000021d3: PUSH4 0xffffffff               // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
[001] 000021d8: AND                            // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
[001] 000021d9: PUSH1 0xe0                     // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
[001] 000021db: SHL                            // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
[001] 000021dc: DUP2                           // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
[001] 000021dd: MSTORE                         // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
[001] 000021de: PUSH1 0x4                      // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
[001] 000021e0: ADD                            // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
[001] 000021e1: PUSH2 0x21eb                   // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
[001] 000021e4: SWAP3                          // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
[001] 000021e5: SWAP2                          // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
[001] 000021e6: SWAP1                          // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
[001] 000021e7: PUSH2 0x3086                   // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
[001] 000021ea: JUMP                           // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
[001] 000021eb: JUMPDEST                       // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
[001] 000021ec: PUSH1 0x0                      // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
[001] 000021ee: PUSH1 0x40                     // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
[001] 000021f0: MLOAD                          // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
[001] 000021f1: DUP1                           // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
[001] 000021f2: DUP4                           // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
[001] 000021f3: SUB                            // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
[001] 000021f4: DUP2                           // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
[001] 000021f5: DUP7                           // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
[001] 000021f6: DUP1                           // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
[001] 000021f7: EXTCODESIZE                    // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
[001] 000021f8: ISZERO                         // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
[001] 000021f9: DUP1                           // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
[001] 000021fa: ISZERO                         // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
[001] 000021fb: PUSH2 0x2203                   // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
[001] 000021fe: JUMPI                          // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
      000021ff: PUSH1 0x0                      // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
      00002201: DUP1                           // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
      00002202: REVERT                         // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
[001] 00002203: JUMPDEST                       // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
[001] 00002204: POP                            // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
[001] 00002205: GAS                            // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
[001] 00002206: STATICCALL                     // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
[001] 00002207: ISZERO                         // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
[001] 00002208: DUP1                           // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
[001] 00002209: ISZERO                         // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
[001] 0000220a: PUSH2 0x2217                   // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
[001] 0000220d: JUMPI                          // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
      0000220e: RETURNDATASIZE                 // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
      0000220f: PUSH1 0x0                      // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
      00002211: DUP1                           // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
      00002212: RETURNDATACOPY                 // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
      00002213: RETURNDATASIZE                 // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
      00002214: PUSH1 0x0                      // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
      00002216: REVERT                         // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
[001] 00002217: JUMPDEST                       // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
[001] 00002218: POP                            // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
[001] 00002219: POP                            // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
[001] 0000221a: POP                            // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
[001] 0000221b: POP                            // lib/forge-std/src/StdAssertions.sol: 68:9-68:33 (2099-2123)
[001] 0000221c: POP                            // lib/forge-std/src/StdAssertions.sol: 67:5-69:6 (2026-2130)
[001] 0000221d: POP                            // lib/forge-std/src/StdAssertions.sol: 67:5-69:6 (2026-2130)
[001] 0000221e: JUMP                           // lib/forge-std/src/StdAssertions.sol: 67:5-69:6 (2026-2130)
[007] 0000221f: JUMPDEST                      
[007] 00002220: PUSH3 0x352b0                 
[007] 00002224: DUP1                          
[007] 00002225: PUSH3 0x30b0                  
[007] 00002229: DUP4                          
[007] 0000222a: CODECOPY                      
[007] 0000222b: ADD                           
[007] 0000222c: SWAP1                         
[007] 0000222d: JUMP                          
      0000222e: JUMPDEST                       // SRCID43: (7-121)
      0000222f: PUSH1 0x0                      // SRCID43: (74-80)
      00002231: DUP2                           // SRCID43: (108-113)
      00002232: MLOAD                          // SRCID43: (102-114)
      00002233: SWAP1                          // SRCID43: (92-114)
      00002234: POP                            // SRCID43: (92-114)
      00002235: SWAP2                          // SRCID43: (7-121)
      00002236: SWAP1                          // SRCID43: (7-121)
      00002237: POP                            // SRCID43: (7-121)
      00002238: JUMP                           // SRCID43: (7-121)
      00002239: JUMPDEST                       // SRCID43: (127-311)
      0000223a: PUSH1 0x0                      // SRCID43: (226-237)
      0000223c: DUP3                           // SRCID43: (260-266)
      0000223d: DUP3                           // SRCID43: (255-258)
      0000223e: MSTORE                         // SRCID43: (248-267)
      0000223f: PUSH1 0x20                     // SRCID43: (300-304)
      00002241: DUP3                           // SRCID43: (295-298)
      00002242: ADD                            // SRCID43: (291-305)
      00002243: SWAP1                          // SRCID43: (276-305)
      00002244: POP                            // SRCID43: (276-305)
      00002245: SWAP3                          // SRCID43: (127-311)
      00002246: SWAP2                          // SRCID43: (127-311)
      00002247: POP                            // SRCID43: (127-311)
      00002248: POP                            // SRCID43: (127-311)
      00002249: JUMP                           // SRCID43: (127-311)
      0000224a: JUMPDEST                       // SRCID43: (317-449)
      0000224b: PUSH1 0x0                      // SRCID43: (384-388)
      0000224d: DUP2                           // SRCID43: (407-410)
      0000224e: SWAP1                          // SRCID43: (399-410)
      0000224f: POP                            // SRCID43: (399-410)
      00002250: PUSH1 0x20                     // SRCID43: (437-441)
      00002252: DUP3                           // SRCID43: (432-435)
      00002253: ADD                            // SRCID43: (428-442)
      00002254: SWAP1                          // SRCID43: (420-442)
      00002255: POP                            // SRCID43: (420-442)
      00002256: SWAP2                          // SRCID43: (317-449)
      00002257: SWAP1                          // SRCID43: (317-449)
      00002258: POP                            // SRCID43: (317-449)
      00002259: JUMP                           // SRCID43: (317-449)
[043] 0000225a: JUMPDEST                       // SRCID43: (455-581)
[043] 0000225b: PUSH1 0x0                      // SRCID43: (492-499)
[043] 0000225d: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // SRCID43: (532-574)
[043] 00002272: DUP3                           // SRCID43: (525-530)
[043] 00002273: AND                            // SRCID43: (521-575)
[043] 00002274: SWAP1                          // SRCID43: (510-575)
[043] 00002275: POP                            // SRCID43: (510-575)
[043] 00002276: SWAP2                          // SRCID43: (455-581)
[043] 00002277: SWAP1                          // SRCID43: (455-581)
[043] 00002278: POP                            // SRCID43: (455-581)
[043] 00002279: JUMP                           // SRCID43: (455-581)
[043] 0000227a: JUMPDEST                       // SRCID43: (587-683)
[043] 0000227b: PUSH1 0x0                      // SRCID43: (624-631)
[043] 0000227d: PUSH2 0x2285                   // SRCID43: (653-677)
[043] 00002280: DUP3                           // SRCID43: (671-676)
[043] 00002281: PUSH2 0x225a                   // SRCID43: (653-677)
[043] 00002284: JUMP                           // SRCID43: (653-677)
[043] 00002285: JUMPDEST                       // SRCID43: (653-677)
[043] 00002286: SWAP1                          // SRCID43: (642-677)
[043] 00002287: POP                            // SRCID43: (642-677)
[043] 00002288: SWAP2                          // SRCID43: (587-683)
[043] 00002289: SWAP1                          // SRCID43: (587-683)
[043] 0000228a: POP                            // SRCID43: (587-683)
[043] 0000228b: JUMP                           // SRCID43: (587-683)
      0000228c: JUMPDEST                       // SRCID43: (689-797)
      0000228d: PUSH2 0x2295                   // SRCID43: (766-790)
      00002290: DUP2                           // SRCID43: (784-789)
      00002291: PUSH2 0x227a                   // SRCID43: (766-790)
      00002294: JUMP                           // SRCID43: (766-790)
      00002295: JUMPDEST                       // SRCID43: (766-790)
      00002296: DUP3                           // SRCID43: (761-764)
      00002297: MSTORE                         // SRCID43: (754-791)
      00002298: POP                            // SRCID43: (689-797)
      00002299: POP                            // SRCID43: (689-797)
      0000229a: JUMP                           // SRCID43: (689-797)
      0000229b: JUMPDEST                       // SRCID43: (803-982)
      0000229c: PUSH1 0x0                      // SRCID43: (872-882)
      0000229e: PUSH2 0x22a7                   // SRCID43: (893-939)
      000022a1: DUP4                           // SRCID43: (935-938)
      000022a2: DUP4                           // SRCID43: (927-933)
      000022a3: PUSH2 0x228c                   // SRCID43: (893-939)
      000022a6: JUMP                           // SRCID43: (893-939)
      000022a7: JUMPDEST                       // SRCID43: (893-939)
      000022a8: PUSH1 0x20                     // SRCID43: (971-975)
      000022aa: DUP4                           // SRCID43: (966-969)
      000022ab: ADD                            // SRCID43: (962-976)
      000022ac: SWAP1                          // SRCID43: (948-976)
      000022ad: POP                            // SRCID43: (948-976)
      000022ae: SWAP3                          // SRCID43: (803-982)
      000022af: SWAP2                          // SRCID43: (803-982)
      000022b0: POP                            // SRCID43: (803-982)
      000022b1: POP                            // SRCID43: (803-982)
      000022b2: JUMP                           // SRCID43: (803-982)
      000022b3: JUMPDEST                       // SRCID43: (988-1101)
      000022b4: PUSH1 0x0                      // SRCID43: (1058-1062)
      000022b6: PUSH1 0x20                     // SRCID43: (1090-1094)
      000022b8: DUP3                           // SRCID43: (1085-1088)
      000022b9: ADD                            // SRCID43: (1081-1095)
      000022ba: SWAP1                          // SRCID43: (1073-1095)
      000022bb: POP                            // SRCID43: (1073-1095)
      000022bc: SWAP2                          // SRCID43: (988-1101)
      000022bd: SWAP1                          // SRCID43: (988-1101)
      000022be: POP                            // SRCID43: (988-1101)
      000022bf: JUMP                           // SRCID43: (988-1101)
      000022c0: JUMPDEST                       // SRCID43: (1137-1869)
      000022c1: PUSH1 0x0                      // SRCID43: (1256-1259)
      000022c3: PUSH2 0x22cb                   // SRCID43: (1285-1339)
      000022c6: DUP3                           // SRCID43: (1333-1338)
      000022c7: PUSH2 0x222e                   // SRCID43: (1285-1339)
      000022ca: JUMP                           // SRCID43: (1285-1339)
      000022cb: JUMPDEST                       // SRCID43: (1285-1339)
      000022cc: PUSH2 0x22d5                   // SRCID43: (1355-1441)
      000022cf: DUP2                           // SRCID43: (1434-1440)
      000022d0: DUP6                           // SRCID43: (1429-1432)
      000022d1: PUSH2 0x2239                   // SRCID43: (1355-1441)
      000022d4: JUMP                           // SRCID43: (1355-1441)
      000022d5: JUMPDEST                       // SRCID43: (1355-1441)
      000022d6: SWAP4                          // SRCID43: (1348-1441)
      000022d7: POP                            // SRCID43: (1348-1441)
      000022d8: PUSH2 0x22e0                   // SRCID43: (1465-1521)
      000022db: DUP4                           // SRCID43: (1515-1520)
      000022dc: PUSH2 0x224a                   // SRCID43: (1465-1521)
      000022df: JUMP                           // SRCID43: (1465-1521)
      000022e0: JUMPDEST                       // SRCID43: (1465-1521)
      000022e1: DUP1                           // SRCID43: (1544-1551)
      000022e2: PUSH1 0x0                      // SRCID43: (1575-1576)
      000022e4: JUMPDEST                       // SRCID43: (1560-1844)
      000022e5: DUP4                           // SRCID43: (1585-1591)
      000022e6: DUP2                           // SRCID43: (1582-1583)
      000022e7: LT                             // SRCID43: (1579-1592)
      000022e8: ISZERO                         // SRCID43: (1560-1844)
      000022e9: PUSH2 0x2311                   // SRCID43: (1560-1844)
      000022ec: JUMPI                          // SRCID43: (1560-1844)
      000022ed: DUP2                           // SRCID43: (1661-1667)
      000022ee: MLOAD                          // SRCID43: (1655-1668)
      000022ef: PUSH2 0x22f8                   // SRCID43: (1688-1751)
      000022f2: DUP9                           // SRCID43: (1747-1750)
      000022f3: DUP3                           // SRCID43: (1732-1745)
      000022f4: PUSH2 0x229b                   // SRCID43: (1688-1751)
      000022f7: JUMP                           // SRCID43: (1688-1751)
      000022f8: JUMPDEST                       // SRCID43: (1688-1751)
      000022f9: SWAP8                          // SRCID43: (1681-1751)
      000022fa: POP                            // SRCID43: (1681-1751)
      000022fb: PUSH2 0x2303                   // SRCID43: (1774-1834)
      000022fe: DUP4                           // SRCID43: (1827-1833)
      000022ff: PUSH2 0x22b3                   // SRCID43: (1774-1834)
      00002302: JUMP                           // SRCID43: (1774-1834)
      00002303: JUMPDEST                       // SRCID43: (1774-1834)
      00002304: SWAP3                          // SRCID43: (1764-1834)
      00002305: POP                            // SRCID43: (1764-1834)
      00002306: POP                            // SRCID43: (1620-1844)
      00002307: PUSH1 0x1                      // SRCID43: (1607-1608)
      00002309: DUP2                           // SRCID43: (1604-1605)
      0000230a: ADD                            // SRCID43: (1600-1609)
      0000230b: SWAP1                          // SRCID43: (1595-1609)
      0000230c: POP                            // SRCID43: (1595-1609)
      0000230d: PUSH2 0x22e4                   // SRCID43: (1560-1844)
      00002310: JUMP                           // SRCID43: (1560-1844)
      00002311: JUMPDEST                       // SRCID43: (1560-1844)
      00002312: POP                            // SRCID43: (1564-1578)
      00002313: DUP6                           // SRCID43: (1860-1863)
      00002314: SWAP4                          // SRCID43: (1853-1863)
      00002315: POP                            // SRCID43: (1853-1863)
      00002316: POP                            // SRCID43: (1261-1869)
      00002317: POP                            // SRCID43: (1261-1869)
      00002318: POP                            // SRCID43: (1261-1869)
      00002319: SWAP3                          // SRCID43: (1137-1869)
      0000231a: SWAP2                          // SRCID43: (1137-1869)
      0000231b: POP                            // SRCID43: (1137-1869)
      0000231c: POP                            // SRCID43: (1137-1869)
      0000231d: JUMP                           // SRCID43: (1137-1869)
      0000231e: JUMPDEST                       // SRCID43: (1875-2248)
      0000231f: PUSH1 0x0                      // SRCID43: (2018-2022)
      00002321: PUSH1 0x20                     // SRCID43: (2056-2058)
      00002323: DUP3                           // SRCID43: (2045-2054)
      00002324: ADD                            // SRCID43: (2041-2059)
      00002325: SWAP1                          // SRCID43: (2033-2059)
      00002326: POP                            // SRCID43: (2033-2059)
      00002327: DUP2                           // SRCID43: (2105-2114)
      00002328: DUP2                           // SRCID43: (2099-2103)
      00002329: SUB                            // SRCID43: (2095-2115)
      0000232a: PUSH1 0x0                      // SRCID43: (2091-2092)
      0000232c: DUP4                           // SRCID43: (2080-2089)
      0000232d: ADD                            // SRCID43: (2076-2093)
      0000232e: MSTORE                         // SRCID43: (2069-2116)
      0000232f: PUSH2 0x2338                   // SRCID43: (2133-2241)
      00002332: DUP2                           // SRCID43: (2236-2240)
      00002333: DUP5                           // SRCID43: (2227-2233)
      00002334: PUSH2 0x22c0                   // SRCID43: (2133-2241)
      00002337: JUMP                           // SRCID43: (2133-2241)
      00002338: JUMPDEST                       // SRCID43: (2133-2241)
      00002339: SWAP1                          // SRCID43: (2125-2241)
      0000233a: POP                            // SRCID43: (2125-2241)
      0000233b: SWAP3                          // SRCID43: (1875-2248)
      0000233c: SWAP2                          // SRCID43: (1875-2248)
      0000233d: POP                            // SRCID43: (1875-2248)
      0000233e: POP                            // SRCID43: (1875-2248)
      0000233f: JUMP                           // SRCID43: (1875-2248)
      00002340: JUMPDEST                       // SRCID43: (2254-2399)
      00002341: PUSH1 0x0                      // SRCID43: (2352-2358)
      00002343: DUP2                           // SRCID43: (2386-2391)
      00002344: MLOAD                          // SRCID43: (2380-2392)
      00002345: SWAP1                          // SRCID43: (2370-2392)
      00002346: POP                            // SRCID43: (2370-2392)
      00002347: SWAP2                          // SRCID43: (2254-2399)
      00002348: SWAP1                          // SRCID43: (2254-2399)
      00002349: POP                            // SRCID43: (2254-2399)
      0000234a: JUMP                           // SRCID43: (2254-2399)
      0000234b: JUMPDEST                       // SRCID43: (2405-2620)
      0000234c: PUSH1 0x0                      // SRCID43: (2535-2546)
      0000234e: DUP3                           // SRCID43: (2569-2575)
      0000234f: DUP3                           // SRCID43: (2564-2567)
      00002350: MSTORE                         // SRCID43: (2557-2576)
      00002351: PUSH1 0x20                     // SRCID43: (2609-2613)
      00002353: DUP3                           // SRCID43: (2604-2607)
      00002354: ADD                            // SRCID43: (2600-2614)
      00002355: SWAP1                          // SRCID43: (2585-2614)
      00002356: POP                            // SRCID43: (2585-2614)
      00002357: SWAP3                          // SRCID43: (2405-2620)
      00002358: SWAP2                          // SRCID43: (2405-2620)
      00002359: POP                            // SRCID43: (2405-2620)
      0000235a: POP                            // SRCID43: (2405-2620)
      0000235b: JUMP                           // SRCID43: (2405-2620)
      0000235c: JUMPDEST                       // SRCID43: (2626-2789)
      0000235d: PUSH1 0x0                      // SRCID43: (2724-2728)
      0000235f: DUP2                           // SRCID43: (2747-2750)
      00002360: SWAP1                          // SRCID43: (2739-2750)
      00002361: POP                            // SRCID43: (2739-2750)
      00002362: PUSH1 0x20                     // SRCID43: (2777-2781)
      00002364: DUP3                           // SRCID43: (2772-2775)
      00002365: ADD                            // SRCID43: (2768-2782)
      00002366: SWAP1                          // SRCID43: (2760-2782)
      00002367: POP                            // SRCID43: (2760-2782)
      00002368: SWAP2                          // SRCID43: (2626-2789)
      00002369: SWAP1                          // SRCID43: (2626-2789)
      0000236a: POP                            // SRCID43: (2626-2789)
      0000236b: JUMP                           // SRCID43: (2626-2789)
      0000236c: JUMPDEST                       // SRCID43: (2795-2919)
      0000236d: PUSH1 0x0                      // SRCID43: (2872-2878)
      0000236f: DUP2                           // SRCID43: (2906-2911)
      00002370: MLOAD                          // SRCID43: (2900-2912)
      00002371: SWAP1                          // SRCID43: (2890-2912)
      00002372: POP                            // SRCID43: (2890-2912)
      00002373: SWAP2                          // SRCID43: (2795-2919)
      00002374: SWAP1                          // SRCID43: (2795-2919)
      00002375: POP                            // SRCID43: (2795-2919)
      00002376: JUMP                           // SRCID43: (2795-2919)
      00002377: JUMPDEST                       // SRCID43: (2925-3109)
      00002378: PUSH1 0x0                      // SRCID43: (3024-3035)
      0000237a: DUP3                           // SRCID43: (3058-3064)
      0000237b: DUP3                           // SRCID43: (3053-3056)
      0000237c: MSTORE                         // SRCID43: (3046-3065)
      0000237d: PUSH1 0x20                     // SRCID43: (3098-3102)
      0000237f: DUP3                           // SRCID43: (3093-3096)
      00002380: ADD                            // SRCID43: (3089-3103)
      00002381: SWAP1                          // SRCID43: (3074-3103)
      00002382: POP                            // SRCID43: (3074-3103)
      00002383: SWAP3                          // SRCID43: (2925-3109)
      00002384: SWAP2                          // SRCID43: (2925-3109)
      00002385: POP                            // SRCID43: (2925-3109)
      00002386: POP                            // SRCID43: (2925-3109)
      00002387: JUMP                           // SRCID43: (2925-3109)
      00002388: JUMPDEST                       // SRCID43: (3115-3257)
      00002389: PUSH1 0x0                      // SRCID43: (3192-3196)
      0000238b: DUP2                           // SRCID43: (3215-3218)
      0000238c: SWAP1                          // SRCID43: (3207-3218)
      0000238d: POP                            // SRCID43: (3207-3218)
      0000238e: PUSH1 0x20                     // SRCID43: (3245-3249)
      00002390: DUP3                           // SRCID43: (3240-3243)
      00002391: ADD                            // SRCID43: (3236-3250)
      00002392: SWAP1                          // SRCID43: (3228-3250)
      00002393: POP                            // SRCID43: (3228-3250)
      00002394: SWAP2                          // SRCID43: (3115-3257)
      00002395: SWAP1                          // SRCID43: (3115-3257)
      00002396: POP                            // SRCID43: (3115-3257)
      00002397: JUMP                           // SRCID43: (3115-3257)
      00002398: JUMPDEST                       // SRCID43: (3263-3362)
      00002399: PUSH1 0x0                      // SRCID43: (3315-3321)
      0000239b: DUP2                           // SRCID43: (3349-3354)
      0000239c: MLOAD                          // SRCID43: (3343-3355)
      0000239d: SWAP1                          // SRCID43: (3333-3355)
      0000239e: POP                            // SRCID43: (3333-3355)
      0000239f: SWAP2                          // SRCID43: (3263-3362)
      000023a0: SWAP1                          // SRCID43: (3263-3362)
      000023a1: POP                            // SRCID43: (3263-3362)
      000023a2: JUMP                           // SRCID43: (3263-3362)
      000023a3: JUMPDEST                       // SRCID43: (3368-3527)
      000023a4: PUSH1 0x0                      // SRCID43: (3442-3453)
      000023a6: DUP3                           // SRCID43: (3476-3482)
      000023a7: DUP3                           // SRCID43: (3471-3474)
      000023a8: MSTORE                         // SRCID43: (3464-3483)
      000023a9: PUSH1 0x20                     // SRCID43: (3516-3520)
      000023ab: DUP3                           // SRCID43: (3511-3514)
      000023ac: ADD                            // SRCID43: (3507-3521)
      000023ad: SWAP1                          // SRCID43: (3492-3521)
      000023ae: POP                            // SRCID43: (3492-3521)
      000023af: SWAP3                          // SRCID43: (3368-3527)
      000023b0: SWAP2                          // SRCID43: (3368-3527)
      000023b1: POP                            // SRCID43: (3368-3527)
      000023b2: POP                            // SRCID43: (3368-3527)
      000023b3: JUMP                           // SRCID43: (3368-3527)
[002] 000023b4: JUMPDEST                       // SRCID43: (3533-3781)
[002] 000023b5: PUSH1 0x0                      // SRCID43: (3615-3616)
[004] 000023b7: JUMPDEST                       // SRCID43: (3625-3738)
[004] 000023b8: DUP4                           // SRCID43: (3639-3645)
[004] 000023b9: DUP2                           // SRCID43: (3636-3637)
[004] 000023ba: LT                             // SRCID43: (3633-3646)
[004] 000023bb: ISZERO                         // SRCID43: (3625-3738)
[004] 000023bc: PUSH2 0x23d2                   // SRCID43: (3625-3738)
[004] 000023bf: JUMPI                          // SRCID43: (3625-3738)
[002] 000023c0: DUP1                           // SRCID43: (3724-3725)
[002] 000023c1: DUP3                           // SRCID43: (3719-3722)
[002] 000023c2: ADD                            // SRCID43: (3715-3726)
[002] 000023c3: MLOAD                          // SRCID43: (3709-3727)
[002] 000023c4: DUP2                           // SRCID43: (3705-3706)
[002] 000023c5: DUP5                           // SRCID43: (3700-3703)
[002] 000023c6: ADD                            // SRCID43: (3696-3707)
[002] 000023c7: MSTORE                         // SRCID43: (3689-3728)
[002] 000023c8: PUSH1 0x20                     // SRCID43: (3661-3663)
[002] 000023ca: DUP2                           // SRCID43: (3658-3659)
[002] 000023cb: ADD                            // SRCID43: (3654-3664)
[002] 000023cc: SWAP1                          // SRCID43: (3649-3664)
[002] 000023cd: POP                            // SRCID43: (3649-3664)
[002] 000023ce: PUSH2 0x23b7                   // SRCID43: (3625-3738)
[002] 000023d1: JUMP                           // SRCID43: (3625-3738)
[002] 000023d2: JUMPDEST                       // SRCID43: (3625-3738)
[002] 000023d3: PUSH1 0x0                      // SRCID43: (3772-3773)
[002] 000023d5: DUP5                           // SRCID43: (3763-3769)
[002] 000023d6: DUP5                           // SRCID43: (3758-3761)
[002] 000023d7: ADD                            // SRCID43: (3754-3770)
[002] 000023d8: MSTORE                         // SRCID43: (3747-3774)
[002] 000023d9: POP                            // SRCID43: (3595-3781)
[002] 000023da: POP                            // SRCID43: (3533-3781)
[002] 000023db: POP                            // SRCID43: (3533-3781)
[002] 000023dc: POP                            // SRCID43: (3533-3781)
[002] 000023dd: JUMP                           // SRCID43: (3533-3781)
[004] 000023de: JUMPDEST                       // SRCID43: (3787-3889)
[004] 000023df: PUSH1 0x0                      // SRCID43: (3828-3834)
[004] 000023e1: PUSH1 0x1f                     // SRCID43: (3879-3881)
[004] 000023e3: NOT                            // SRCID43: (3875-3882)
[004] 000023e4: PUSH1 0x1f                     // SRCID43: (3870-3872)
[004] 000023e6: DUP4                           // SRCID43: (3863-3868)
[004] 000023e7: ADD                            // SRCID43: (3859-3873)
[004] 000023e8: AND                            // SRCID43: (3855-3883)
[004] 000023e9: SWAP1                          // SRCID43: (3845-3883)
[004] 000023ea: POP                            // SRCID43: (3845-3883)
[004] 000023eb: SWAP2                          // SRCID43: (3787-3889)
[004] 000023ec: SWAP1                          // SRCID43: (3787-3889)
[004] 000023ed: POP                            // SRCID43: (3787-3889)
[004] 000023ee: JUMP                           // SRCID43: (3787-3889)
      000023ef: JUMPDEST                       // SRCID43: (3895-4252)
      000023f0: PUSH1 0x0                      // SRCID43: (3973-3976)
      000023f2: PUSH2 0x23fa                   // SRCID43: (4001-4040)
      000023f5: DUP3                           // SRCID43: (4034-4039)
      000023f6: PUSH2 0x2398                   // SRCID43: (4001-4040)
      000023f9: JUMP                           // SRCID43: (4001-4040)
      000023fa: JUMPDEST                       // SRCID43: (4001-4040)
      000023fb: PUSH2 0x2404                   // SRCID43: (4056-4117)
      000023fe: DUP2                           // SRCID43: (4110-4116)
      000023ff: DUP6                           // SRCID43: (4105-4108)
      00002400: PUSH2 0x23a3                   // SRCID43: (4056-4117)
      00002403: JUMP                           // SRCID43: (4056-4117)
      00002404: JUMPDEST                       // SRCID43: (4056-4117)
      00002405: SWAP4                          // SRCID43: (4049-4117)
      00002406: POP                            // SRCID43: (4049-4117)
      00002407: PUSH2 0x2414                   // SRCID43: (4126-4191)
      0000240a: DUP2                           // SRCID43: (4184-4190)
      0000240b: DUP6                           // SRCID43: (4179-4182)
      0000240c: PUSH1 0x20                     // SRCID43: (4172-4176)
      0000240e: DUP7                           // SRCID43: (4165-4170)
      0000240f: ADD                            // SRCID43: (4161-4177)
      00002410: PUSH2 0x23b4                   // SRCID43: (4126-4191)
      00002413: JUMP                           // SRCID43: (4126-4191)
      00002414: JUMPDEST                       // SRCID43: (4126-4191)
      00002415: PUSH2 0x241d                   // SRCID43: (4216-4245)
      00002418: DUP2                           // SRCID43: (4238-4244)
      00002419: PUSH2 0x23de                   // SRCID43: (4216-4245)
      0000241c: JUMP                           // SRCID43: (4216-4245)
      0000241d: JUMPDEST                       // SRCID43: (4216-4245)
      0000241e: DUP5                           // SRCID43: (4211-4214)
      0000241f: ADD                            // SRCID43: (4207-4246)
      00002420: SWAP2                          // SRCID43: (4200-4246)
      00002421: POP                            // SRCID43: (4200-4246)
      00002422: POP                            // SRCID43: (3977-4252)
      00002423: SWAP3                          // SRCID43: (3895-4252)
      00002424: SWAP2                          // SRCID43: (3895-4252)
      00002425: POP                            // SRCID43: (3895-4252)
      00002426: POP                            // SRCID43: (3895-4252)
      00002427: JUMP                           // SRCID43: (3895-4252)
      00002428: JUMPDEST                       // SRCID43: (4258-4454)
      00002429: PUSH1 0x0                      // SRCID43: (4347-4357)
      0000242b: PUSH2 0x2434                   // SRCID43: (4382-4448)
      0000242e: DUP4                           // SRCID43: (4444-4447)
      0000242f: DUP4                           // SRCID43: (4436-4442)
      00002430: PUSH2 0x23ef                   // SRCID43: (4382-4448)
      00002433: JUMP                           // SRCID43: (4382-4448)
      00002434: JUMPDEST                       // SRCID43: (4382-4448)
      00002435: SWAP1                          // SRCID43: (4368-4448)
      00002436: POP                            // SRCID43: (4368-4448)
      00002437: SWAP3                          // SRCID43: (4258-4454)
      00002438: SWAP2                          // SRCID43: (4258-4454)
      00002439: POP                            // SRCID43: (4258-4454)
      0000243a: POP                            // SRCID43: (4258-4454)
      0000243b: JUMP                           // SRCID43: (4258-4454)
      0000243c: JUMPDEST                       // SRCID43: (4460-4583)
      0000243d: PUSH1 0x0                      // SRCID43: (4540-4544)
      0000243f: PUSH1 0x20                     // SRCID43: (4572-4576)
      00002441: DUP3                           // SRCID43: (4567-4570)
      00002442: ADD                            // SRCID43: (4563-4577)
      00002443: SWAP1                          // SRCID43: (4555-4577)
      00002444: POP                            // SRCID43: (4555-4577)
      00002445: SWAP2                          // SRCID43: (4460-4583)
      00002446: SWAP1                          // SRCID43: (4460-4583)
      00002447: POP                            // SRCID43: (4460-4583)
      00002448: JUMP                           // SRCID43: (4460-4583)
      00002449: JUMPDEST                       // SRCID43: (4617-5588)
      0000244a: PUSH1 0x0                      // SRCID43: (4746-4749)
      0000244c: PUSH2 0x2454                   // SRCID43: (4775-4839)
      0000244f: DUP3                           // SRCID43: (4833-4838)
      00002450: PUSH2 0x236c                   // SRCID43: (4775-4839)
      00002453: JUMP                           // SRCID43: (4775-4839)
      00002454: JUMPDEST                       // SRCID43: (4775-4839)
      00002455: PUSH2 0x245e                   // SRCID43: (4855-4941)
      00002458: DUP2                           // SRCID43: (4934-4940)
      00002459: DUP6                           // SRCID43: (4929-4932)
      0000245a: PUSH2 0x2377                   // SRCID43: (4855-4941)
      0000245d: JUMP                           // SRCID43: (4855-4941)
      0000245e: JUMPDEST                       // SRCID43: (4855-4941)
      0000245f: SWAP4                          // SRCID43: (4848-4941)
      00002460: POP                            // SRCID43: (4848-4941)
      00002461: DUP4                           // SRCID43: (4967-4970)
      00002462: PUSH1 0x20                     // SRCID43: (5012-5016)
      00002464: DUP3                           // SRCID43: (5004-5010)
      00002465: MUL                            // SRCID43: (5000-5017)
      00002466: DUP6                           // SRCID43: (4995-4998)
      00002467: ADD                            // SRCID43: (4991-5018)
      00002468: PUSH2 0x2470                   // SRCID43: (5042-5108)
      0000246b: DUP6                           // SRCID43: (5102-5107)
      0000246c: PUSH2 0x2388                   // SRCID43: (5042-5108)
      0000246f: JUMP                           // SRCID43: (5042-5108)
      00002470: JUMPDEST                       // SRCID43: (5042-5108)
      00002471: DUP1                           // SRCID43: (5131-5138)
      00002472: PUSH1 0x0                      // SRCID43: (5162-5163)
      00002474: JUMPDEST                       // SRCID43: (5147-5543)
      00002475: DUP6                           // SRCID43: (5172-5178)
      00002476: DUP2                           // SRCID43: (5169-5170)
      00002477: LT                             // SRCID43: (5166-5179)
      00002478: ISZERO                         // SRCID43: (5147-5543)
      00002479: PUSH2 0x24ac                   // SRCID43: (5147-5543)
      0000247c: JUMPI                          // SRCID43: (5147-5543)
      0000247d: DUP5                           // SRCID43: (5243-5252)
      0000247e: DUP5                           // SRCID43: (5237-5241)
      0000247f: SUB                            // SRCID43: (5233-5253)
      00002480: DUP10                          // SRCID43: (5228-5231)
      00002481: MSTORE                         // SRCID43: (5221-5254)
      00002482: DUP2                           // SRCID43: (5294-5300)
      00002483: MLOAD                          // SRCID43: (5288-5301)
      00002484: PUSH2 0x248d                   // SRCID43: (5322-5406)
      00002487: DUP6                           // SRCID43: (5401-5405)
      00002488: DUP3                           // SRCID43: (5386-5399)
      00002489: PUSH2 0x2428                   // SRCID43: (5322-5406)
      0000248c: JUMP                           // SRCID43: (5322-5406)
      0000248d: JUMPDEST                       // SRCID43: (5322-5406)
      0000248e: SWAP5                          // SRCID43: (5314-5406)
      0000248f: POP                            // SRCID43: (5314-5406)
      00002490: PUSH2 0x2498                   // SRCID43: (5429-5499)
      00002493: DUP4                           // SRCID43: (5492-5498)
      00002494: PUSH2 0x243c                   // SRCID43: (5429-5499)
      00002497: JUMP                           // SRCID43: (5429-5499)
      00002498: JUMPDEST                       // SRCID43: (5429-5499)
      00002499: SWAP3                          // SRCID43: (5419-5499)
      0000249a: POP                            // SRCID43: (5419-5499)
      0000249b: PUSH1 0x20                     // SRCID43: (5528-5532)
      0000249d: DUP11                          // SRCID43: (5523-5526)
      0000249e: ADD                            // SRCID43: (5519-5533)
      0000249f: SWAP10                         // SRCID43: (5512-5533)
      000024a0: POP                            // SRCID43: (5512-5533)
      000024a1: POP                            // SRCID43: (5207-5543)
      000024a2: PUSH1 0x1                      // SRCID43: (5194-5195)
      000024a4: DUP2                           // SRCID43: (5191-5192)
      000024a5: ADD                            // SRCID43: (5187-5196)
      000024a6: SWAP1                          // SRCID43: (5182-5196)
      000024a7: POP                            // SRCID43: (5182-5196)
      000024a8: PUSH2 0x2474                   // SRCID43: (5147-5543)
      000024ab: JUMP                           // SRCID43: (5147-5543)
      000024ac: JUMPDEST                       // SRCID43: (5147-5543)
      000024ad: POP                            // SRCID43: (5151-5165)
      000024ae: DUP3                           // SRCID43: (5559-5563)
      000024af: SWAP8                          // SRCID43: (5552-5563)
      000024b0: POP                            // SRCID43: (5552-5563)
      000024b1: DUP8                           // SRCID43: (5579-5582)
      000024b2: SWAP6                          // SRCID43: (5572-5582)
      000024b3: POP                            // SRCID43: (5572-5582)
      000024b4: POP                            // SRCID43: (4751-5588)
      000024b5: POP                            // SRCID43: (4751-5588)
      000024b6: POP                            // SRCID43: (4751-5588)
      000024b7: POP                            // SRCID43: (4751-5588)
      000024b8: POP                            // SRCID43: (4751-5588)
      000024b9: SWAP3                          // SRCID43: (4617-5588)
      000024ba: SWAP2                          // SRCID43: (4617-5588)
      000024bb: POP                            // SRCID43: (4617-5588)
      000024bc: POP                            // SRCID43: (4617-5588)
      000024bd: JUMP                           // SRCID43: (4617-5588)
      000024be: JUMPDEST                       // SRCID43: (5672-6335)
      000024bf: PUSH1 0x0                      // SRCID43: (5793-5796)
      000024c1: PUSH1 0x40                     // SRCID43: (5829-5833)
      000024c3: DUP4                           // SRCID43: (5824-5827)
      000024c4: ADD                            // SRCID43: (5820-5834)
      000024c5: PUSH1 0x0                      // SRCID43: (5916-5920)
      000024c7: DUP4                           // SRCID43: (5909-5914)
      000024c8: ADD                            // SRCID43: (5905-5921)
      000024c9: MLOAD                          // SRCID43: (5899-5922)
      000024ca: PUSH2 0x24d6                   // SRCID43: (5935-5998)
      000024cd: PUSH1 0x0                      // SRCID43: (5992-5996)
      000024cf: DUP7                           // SRCID43: (5987-5990)
      000024d0: ADD                            // SRCID43: (5983-5997)
      000024d1: DUP3                           // SRCID43: (5969-5981)
      000024d2: PUSH2 0x228c                   // SRCID43: (5935-5998)
      000024d5: JUMP                           // SRCID43: (5935-5998)
      000024d6: JUMPDEST                       // SRCID43: (5935-5998)
      000024d7: POP                            // SRCID43: (5844-6008)
      000024d8: PUSH1 0x20                     // SRCID43: (6095-6099)
      000024da: DUP4                           // SRCID43: (6088-6093)
      000024db: ADD                            // SRCID43: (6084-6100)
      000024dc: MLOAD                          // SRCID43: (6078-6101)
      000024dd: DUP5                           // SRCID43: (6148-6151)
      000024de: DUP3                           // SRCID43: (6142-6146)
      000024df: SUB                            // SRCID43: (6138-6152)
      000024e0: PUSH1 0x20                     // SRCID43: (6131-6135)
      000024e2: DUP7                           // SRCID43: (6126-6129)
      000024e3: ADD                            // SRCID43: (6122-6136)
      000024e4: MSTORE                         // SRCID43: (6115-6153)
      000024e5: PUSH2 0x24ee                   // SRCID43: (6174-6297)
      000024e8: DUP3                           // SRCID43: (6292-6296)
      000024e9: DUP3                           // SRCID43: (6278-6290)
      000024ea: PUSH2 0x2449                   // SRCID43: (6174-6297)
      000024ed: JUMP                           // SRCID43: (6174-6297)
      000024ee: JUMPDEST                       // SRCID43: (6174-6297)
      000024ef: SWAP2                          // SRCID43: (6166-6297)
      000024f0: POP                            // SRCID43: (6166-6297)
      000024f1: POP                            // SRCID43: (6018-6308)
      000024f2: DUP1                           // SRCID43: (6325-6329)
      000024f3: SWAP2                          // SRCID43: (6318-6329)
      000024f4: POP                            // SRCID43: (6318-6329)
      000024f5: POP                            // SRCID43: (5798-6335)
      000024f6: SWAP3                          // SRCID43: (5672-6335)
      000024f7: SWAP2                          // SRCID43: (5672-6335)
      000024f8: POP                            // SRCID43: (5672-6335)
      000024f9: POP                            // SRCID43: (5672-6335)
      000024fa: JUMP                           // SRCID43: (5672-6335)
      000024fb: JUMPDEST                       // SRCID43: (6341-6621)
      000024fc: PUSH1 0x0                      // SRCID43: (6472-6482)
      000024fe: PUSH2 0x2507                   // SRCID43: (6507-6615)
      00002501: DUP4                           // SRCID43: (6611-6614)
      00002502: DUP4                           // SRCID43: (6603-6609)
      00002503: PUSH2 0x24be                   // SRCID43: (6507-6615)
      00002506: JUMP                           // SRCID43: (6507-6615)
      00002507: JUMPDEST                       // SRCID43: (6507-6615)
      00002508: SWAP1                          // SRCID43: (6493-6615)
      00002509: POP                            // SRCID43: (6493-6615)
      0000250a: SWAP3                          // SRCID43: (6341-6621)
      0000250b: SWAP2                          // SRCID43: (6341-6621)
      0000250c: POP                            // SRCID43: (6341-6621)
      0000250d: POP                            // SRCID43: (6341-6621)
      0000250e: JUMP                           // SRCID43: (6341-6621)
      0000250f: JUMPDEST                       // SRCID43: (6627-6771)
      00002510: PUSH1 0x0                      // SRCID43: (6728-6732)
      00002512: PUSH1 0x20                     // SRCID43: (6760-6764)
      00002514: DUP3                           // SRCID43: (6755-6758)
      00002515: ADD                            // SRCID43: (6751-6765)
      00002516: SWAP1                          // SRCID43: (6743-6765)
      00002517: POP                            // SRCID43: (6743-6765)
      00002518: SWAP2                          // SRCID43: (6627-6771)
      00002519: SWAP1                          // SRCID43: (6627-6771)
      0000251a: POP                            // SRCID43: (6627-6771)
      0000251b: JUMP                           // SRCID43: (6627-6771)
      0000251c: JUMPDEST                       // SRCID43: (6859-8018)
      0000251d: PUSH1 0x0                      // SRCID43: (7040-7043)
      0000251f: PUSH2 0x2527                   // SRCID43: (7069-7154)
      00002522: DUP3                           // SRCID43: (7148-7153)
      00002523: PUSH2 0x2340                   // SRCID43: (7069-7154)
      00002526: JUMP                           // SRCID43: (7069-7154)
      00002527: JUMPDEST                       // SRCID43: (7069-7154)
      00002528: PUSH2 0x2531                   // SRCID43: (7170-7287)
      0000252b: DUP2                           // SRCID43: (7280-7286)
      0000252c: DUP6                           // SRCID43: (7275-7278)
      0000252d: PUSH2 0x234b                   // SRCID43: (7170-7287)
      00002530: JUMP                           // SRCID43: (7170-7287)
      00002531: JUMPDEST                       // SRCID43: (7170-7287)
      00002532: SWAP4                          // SRCID43: (7163-7287)
      00002533: POP                            // SRCID43: (7163-7287)
      00002534: DUP4                           // SRCID43: (7313-7316)
      00002535: PUSH1 0x20                     // SRCID43: (7358-7362)
      00002537: DUP3                           // SRCID43: (7350-7356)
      00002538: MUL                            // SRCID43: (7346-7363)
      00002539: DUP6                           // SRCID43: (7341-7344)
      0000253a: ADD                            // SRCID43: (7337-7364)
      0000253b: PUSH2 0x2543                   // SRCID43: (7388-7475)
      0000253e: DUP6                           // SRCID43: (7469-7474)
      0000253f: PUSH2 0x235c                   // SRCID43: (7388-7475)
      00002542: JUMP                           // SRCID43: (7388-7475)
      00002543: JUMPDEST                       // SRCID43: (7388-7475)
      00002544: DUP1                           // SRCID43: (7498-7505)
      00002545: PUSH1 0x0                      // SRCID43: (7529-7530)
      00002547: JUMPDEST                       // SRCID43: (7514-7973)
      00002548: DUP6                           // SRCID43: (7539-7545)
      00002549: DUP2                           // SRCID43: (7536-7537)
      0000254a: LT                             // SRCID43: (7533-7546)
      0000254b: ISZERO                         // SRCID43: (7514-7973)
      0000254c: PUSH2 0x257f                   // SRCID43: (7514-7973)
      0000254f: JUMPI                          // SRCID43: (7514-7973)
      00002550: DUP5                           // SRCID43: (7610-7619)
      00002551: DUP5                           // SRCID43: (7604-7608)
      00002552: SUB                            // SRCID43: (7600-7620)
      00002553: DUP10                          // SRCID43: (7595-7598)
      00002554: MSTORE                         // SRCID43: (7588-7621)
      00002555: DUP2                           // SRCID43: (7661-7667)
      00002556: MLOAD                          // SRCID43: (7655-7668)
      00002557: PUSH2 0x2560                   // SRCID43: (7689-7815)
      0000255a: DUP6                           // SRCID43: (7810-7814)
      0000255b: DUP3                           // SRCID43: (7795-7808)
      0000255c: PUSH2 0x24fb                   // SRCID43: (7689-7815)
      0000255f: JUMP                           // SRCID43: (7689-7815)
      00002560: JUMPDEST                       // SRCID43: (7689-7815)
      00002561: SWAP5                          // SRCID43: (7681-7815)
      00002562: POP                            // SRCID43: (7681-7815)
      00002563: PUSH2 0x256b                   // SRCID43: (7838-7929)
      00002566: DUP4                           // SRCID43: (7922-7928)
      00002567: PUSH2 0x250f                   // SRCID43: (7838-7929)
      0000256a: JUMP                           // SRCID43: (7838-7929)
      0000256b: JUMPDEST                       // SRCID43: (7838-7929)
      0000256c: SWAP3                          // SRCID43: (7828-7929)
      0000256d: POP                            // SRCID43: (7828-7929)
      0000256e: PUSH1 0x20                     // SRCID43: (7958-7962)
      00002570: DUP11                          // SRCID43: (7953-7956)
      00002571: ADD                            // SRCID43: (7949-7963)
      00002572: SWAP10                         // SRCID43: (7942-7963)
      00002573: POP                            // SRCID43: (7942-7963)
      00002574: POP                            // SRCID43: (7574-7973)
      00002575: PUSH1 0x1                      // SRCID43: (7561-7562)
      00002577: DUP2                           // SRCID43: (7558-7559)
      00002578: ADD                            // SRCID43: (7554-7563)
      00002579: SWAP1                          // SRCID43: (7549-7563)
      0000257a: POP                            // SRCID43: (7549-7563)
      0000257b: PUSH2 0x2547                   // SRCID43: (7514-7973)
      0000257e: JUMP                           // SRCID43: (7514-7973)
      0000257f: JUMPDEST                       // SRCID43: (7514-7973)
      00002580: POP                            // SRCID43: (7518-7532)
      00002581: DUP3                           // SRCID43: (7989-7993)
      00002582: SWAP8                          // SRCID43: (7982-7993)
      00002583: POP                            // SRCID43: (7982-7993)
      00002584: DUP8                           // SRCID43: (8009-8012)
      00002585: SWAP6                          // SRCID43: (8002-8012)
      00002586: POP                            // SRCID43: (8002-8012)
      00002587: POP                            // SRCID43: (7045-8018)
      00002588: POP                            // SRCID43: (7045-8018)
      00002589: POP                            // SRCID43: (7045-8018)
      0000258a: POP                            // SRCID43: (7045-8018)
      0000258b: POP                            // SRCID43: (7045-8018)
      0000258c: SWAP3                          // SRCID43: (6859-8018)
      0000258d: SWAP2                          // SRCID43: (6859-8018)
      0000258e: POP                            // SRCID43: (6859-8018)
      0000258f: POP                            // SRCID43: (6859-8018)
      00002590: JUMP                           // SRCID43: (6859-8018)
      00002591: JUMPDEST                       // SRCID43: (8024-8521)
      00002592: PUSH1 0x0                      // SRCID43: (8229-8233)
      00002594: PUSH1 0x20                     // SRCID43: (8267-8269)
      00002596: DUP3                           // SRCID43: (8256-8265)
      00002597: ADD                            // SRCID43: (8252-8270)
      00002598: SWAP1                          // SRCID43: (8244-8270)
      00002599: POP                            // SRCID43: (8244-8270)
      0000259a: DUP2                           // SRCID43: (8316-8325)
      0000259b: DUP2                           // SRCID43: (8310-8314)
      0000259c: SUB                            // SRCID43: (8306-8326)
      0000259d: PUSH1 0x0                      // SRCID43: (8302-8303)
      0000259f: DUP4                           // SRCID43: (8291-8300)
      000025a0: ADD                            // SRCID43: (8287-8304)
      000025a1: MSTORE                         // SRCID43: (8280-8327)
      000025a2: PUSH2 0x25ab                   // SRCID43: (8344-8514)
      000025a5: DUP2                           // SRCID43: (8509-8513)
      000025a6: DUP5                           // SRCID43: (8500-8506)
      000025a7: PUSH2 0x251c                   // SRCID43: (8344-8514)
      000025aa: JUMP                           // SRCID43: (8344-8514)
      000025ab: JUMPDEST                       // SRCID43: (8344-8514)
      000025ac: SWAP1                          // SRCID43: (8336-8514)
      000025ad: POP                            // SRCID43: (8336-8514)
      000025ae: SWAP3                          // SRCID43: (8024-8521)
      000025af: SWAP2                          // SRCID43: (8024-8521)
      000025b0: POP                            // SRCID43: (8024-8521)
      000025b1: POP                            // SRCID43: (8024-8521)
      000025b2: JUMP                           // SRCID43: (8024-8521)
[014] 000025b3: JUMPDEST                       // SRCID43: (8527-8645)
[014] 000025b4: PUSH2 0x25bc                   // SRCID43: (8614-8638)
[014] 000025b7: DUP2                           // SRCID43: (8632-8637)
[014] 000025b8: PUSH2 0x227a                   // SRCID43: (8614-8638)
[014] 000025bb: JUMP                           // SRCID43: (8614-8638)
[014] 000025bc: JUMPDEST                       // SRCID43: (8614-8638)
[014] 000025bd: DUP3                           // SRCID43: (8609-8612)
[014] 000025be: MSTORE                         // SRCID43: (8602-8639)
[014] 000025bf: POP                            // SRCID43: (8527-8645)
[014] 000025c0: POP                            // SRCID43: (8527-8645)
[014] 000025c1: JUMP                           // SRCID43: (8527-8645)
[006] 000025c2: JUMPDEST                       // SRCID43: (8651-8873)
[006] 000025c3: PUSH1 0x0                      // SRCID43: (8744-8748)
[006] 000025c5: PUSH1 0x20                     // SRCID43: (8782-8784)
[006] 000025c7: DUP3                           // SRCID43: (8771-8780)
[006] 000025c8: ADD                            // SRCID43: (8767-8785)
[006] 000025c9: SWAP1                          // SRCID43: (8759-8785)
[006] 000025ca: POP                            // SRCID43: (8759-8785)
[006] 000025cb: PUSH2 0x25d7                   // SRCID43: (8795-8866)
[006] 000025ce: PUSH1 0x0                      // SRCID43: (8863-8864)
[006] 000025d0: DUP4                           // SRCID43: (8852-8861)
[006] 000025d1: ADD                            // SRCID43: (8848-8865)
[006] 000025d2: DUP5                           // SRCID43: (8839-8845)
[006] 000025d3: PUSH2 0x25b3                   // SRCID43: (8795-8866)
[006] 000025d6: JUMP                           // SRCID43: (8795-8866)
[006] 000025d7: JUMPDEST                       // SRCID43: (8795-8866)
[006] 000025d8: SWAP3                          // SRCID43: (8651-8873)
[006] 000025d9: SWAP2                          // SRCID43: (8651-8873)
[006] 000025da: POP                            // SRCID43: (8651-8873)
[006] 000025db: POP                            // SRCID43: (8651-8873)
[006] 000025dc: JUMP                           // SRCID43: (8651-8873)
      000025dd: JUMPDEST                       // SRCID43: (8879-9023)
      000025de: PUSH1 0x0                      // SRCID43: (8976-8982)
      000025e0: DUP2                           // SRCID43: (9010-9015)
      000025e1: MLOAD                          // SRCID43: (9004-9016)
      000025e2: SWAP1                          // SRCID43: (8994-9016)
      000025e3: POP                            // SRCID43: (8994-9016)
      000025e4: SWAP2                          // SRCID43: (8879-9023)
      000025e5: SWAP1                          // SRCID43: (8879-9023)
      000025e6: POP                            // SRCID43: (8879-9023)
      000025e7: JUMP                           // SRCID43: (8879-9023)
      000025e8: JUMPDEST                       // SRCID43: (9029-9243)
      000025e9: PUSH1 0x0                      // SRCID43: (9158-9169)
      000025eb: DUP3                           // SRCID43: (9192-9198)
      000025ec: DUP3                           // SRCID43: (9187-9190)
      000025ed: MSTORE                         // SRCID43: (9180-9199)
      000025ee: PUSH1 0x20                     // SRCID43: (9232-9236)
      000025f0: DUP3                           // SRCID43: (9227-9230)
      000025f1: ADD                            // SRCID43: (9223-9237)
      000025f2: SWAP1                          // SRCID43: (9208-9237)
      000025f3: POP                            // SRCID43: (9208-9237)
      000025f4: SWAP3                          // SRCID43: (9029-9243)
      000025f5: SWAP2                          // SRCID43: (9029-9243)
      000025f6: POP                            // SRCID43: (9029-9243)
      000025f7: POP                            // SRCID43: (9029-9243)
      000025f8: JUMP                           // SRCID43: (9029-9243)
      000025f9: JUMPDEST                       // SRCID43: (9249-9411)
      000025fa: PUSH1 0x0                      // SRCID43: (9346-9350)
      000025fc: DUP2                           // SRCID43: (9369-9372)
      000025fd: SWAP1                          // SRCID43: (9361-9372)
      000025fe: POP                            // SRCID43: (9361-9372)
      000025ff: PUSH1 0x20                     // SRCID43: (9399-9403)
      00002601: DUP3                           // SRCID43: (9394-9397)
      00002602: ADD                            // SRCID43: (9390-9404)
      00002603: SWAP1                          // SRCID43: (9382-9404)
      00002604: POP                            // SRCID43: (9382-9404)
      00002605: SWAP2                          // SRCID43: (9249-9411)
      00002606: SWAP1                          // SRCID43: (9249-9411)
      00002607: POP                            // SRCID43: (9249-9411)
      00002608: JUMP                           // SRCID43: (9249-9411)
      00002609: JUMPDEST                       // SRCID43: (9417-9530)
      0000260a: PUSH1 0x0                      // SRCID43: (9483-9489)
      0000260c: DUP2                           // SRCID43: (9517-9522)
      0000260d: MLOAD                          // SRCID43: (9511-9523)
      0000260e: SWAP1                          // SRCID43: (9501-9523)
      0000260f: POP                            // SRCID43: (9501-9523)
      00002610: SWAP2                          // SRCID43: (9417-9530)
      00002611: SWAP1                          // SRCID43: (9417-9530)
      00002612: POP                            // SRCID43: (9417-9530)
      00002613: JUMP                           // SRCID43: (9417-9530)
      00002614: JUMPDEST                       // SRCID43: (9536-9709)
      00002615: PUSH1 0x0                      // SRCID43: (9624-9635)
      00002617: DUP3                           // SRCID43: (9658-9664)
      00002618: DUP3                           // SRCID43: (9653-9656)
      00002619: MSTORE                         // SRCID43: (9646-9665)
      0000261a: PUSH1 0x20                     // SRCID43: (9698-9702)
      0000261c: DUP3                           // SRCID43: (9693-9696)
      0000261d: ADD                            // SRCID43: (9689-9703)
      0000261e: SWAP1                          // SRCID43: (9674-9703)
      0000261f: POP                            // SRCID43: (9674-9703)
      00002620: SWAP3                          // SRCID43: (9536-9709)
      00002621: SWAP2                          // SRCID43: (9536-9709)
      00002622: POP                            // SRCID43: (9536-9709)
      00002623: POP                            // SRCID43: (9536-9709)
      00002624: JUMP                           // SRCID43: (9536-9709)
      00002625: JUMPDEST                       // SRCID43: (9715-9846)
      00002626: PUSH1 0x0                      // SRCID43: (9781-9785)
      00002628: DUP2                           // SRCID43: (9804-9807)
      00002629: SWAP1                          // SRCID43: (9796-9807)
      0000262a: POP                            // SRCID43: (9796-9807)
      0000262b: PUSH1 0x20                     // SRCID43: (9834-9838)
      0000262d: DUP3                           // SRCID43: (9829-9832)
      0000262e: ADD                            // SRCID43: (9825-9839)
      0000262f: SWAP1                          // SRCID43: (9817-9839)
      00002630: POP                            // SRCID43: (9817-9839)
      00002631: SWAP2                          // SRCID43: (9715-9846)
      00002632: SWAP1                          // SRCID43: (9715-9846)
      00002633: POP                            // SRCID43: (9715-9846)
      00002634: JUMP                           // SRCID43: (9715-9846)
[002] 00002635: JUMPDEST                       // SRCID43: (9852-10001)
[002] 00002636: PUSH1 0x0                      // SRCID43: (9888-9895)
[002] 00002638: PUSH32 0xffffffff00000000000000000000000000000000000000000000000000000000 // SRCID43: (9928-9994)
[002] 00002659: DUP3                           // SRCID43: (9921-9926)
[002] 0000265a: AND                            // SRCID43: (9917-9995)
[002] 0000265b: SWAP1                          // SRCID43: (9906-9995)
[002] 0000265c: POP                            // SRCID43: (9906-9995)
[002] 0000265d: SWAP2                          // SRCID43: (9852-10001)
[002] 0000265e: SWAP1                          // SRCID43: (9852-10001)
[002] 0000265f: POP                            // SRCID43: (9852-10001)
[002] 00002660: JUMP                           // SRCID43: (9852-10001)
      00002661: JUMPDEST                       // SRCID43: (10007-10112)
      00002662: PUSH2 0x266a                   // SRCID43: (10082-10105)
      00002665: DUP2                           // SRCID43: (10099-10104)
      00002666: PUSH2 0x2635                   // SRCID43: (10082-10105)
      00002669: JUMP                           // SRCID43: (10082-10105)
      0000266a: JUMPDEST                       // SRCID43: (10082-10105)
      0000266b: DUP3                           // SRCID43: (10077-10080)
      0000266c: MSTORE                         // SRCID43: (10070-10106)
      0000266d: POP                            // SRCID43: (10007-10112)
      0000266e: POP                            // SRCID43: (10007-10112)
      0000266f: JUMP                           // SRCID43: (10007-10112)
      00002670: JUMPDEST                       // SRCID43: (10118-10293)
      00002671: PUSH1 0x0                      // SRCID43: (10185-10195)
      00002673: PUSH2 0x267c                   // SRCID43: (10206-10250)
      00002676: DUP4                           // SRCID43: (10246-10249)
      00002677: DUP4                           // SRCID43: (10238-10244)
      00002678: PUSH2 0x2661                   // SRCID43: (10206-10250)
      0000267b: JUMP                           // SRCID43: (10206-10250)
      0000267c: JUMPDEST                       // SRCID43: (10206-10250)
      0000267d: PUSH1 0x20                     // SRCID43: (10282-10286)
      0000267f: DUP4                           // SRCID43: (10277-10280)
      00002680: ADD                            // SRCID43: (10273-10287)
      00002681: SWAP1                          // SRCID43: (10259-10287)
      00002682: POP                            // SRCID43: (10259-10287)
      00002683: SWAP3                          // SRCID43: (10118-10293)
      00002684: SWAP2                          // SRCID43: (10118-10293)
      00002685: POP                            // SRCID43: (10118-10293)
      00002686: POP                            // SRCID43: (10118-10293)
      00002687: JUMP                           // SRCID43: (10118-10293)
      00002688: JUMPDEST                       // SRCID43: (10299-10411)
      00002689: PUSH1 0x0                      // SRCID43: (10368-10372)
      0000268b: PUSH1 0x20                     // SRCID43: (10400-10404)
      0000268d: DUP3                           // SRCID43: (10395-10398)
      0000268e: ADD                            // SRCID43: (10391-10405)
      0000268f: SWAP1                          // SRCID43: (10383-10405)
      00002690: POP                            // SRCID43: (10383-10405)
      00002691: SWAP2                          // SRCID43: (10299-10411)
      00002692: SWAP1                          // SRCID43: (10299-10411)
      00002693: POP                            // SRCID43: (10299-10411)
      00002694: JUMP                           // SRCID43: (10299-10411)
      00002695: JUMPDEST                       // SRCID43: (10445-11149)
      00002696: PUSH1 0x0                      // SRCID43: (10552-10555)
      00002698: PUSH2 0x26a0                   // SRCID43: (10581-10634)
      0000269b: DUP3                           // SRCID43: (10628-10633)
      0000269c: PUSH2 0x2609                   // SRCID43: (10581-10634)
      0000269f: JUMP                           // SRCID43: (10581-10634)
      000026a0: JUMPDEST                       // SRCID43: (10581-10634)
      000026a1: PUSH2 0x26aa                   // SRCID43: (10650-10725)
      000026a4: DUP2                           // SRCID43: (10718-10724)
      000026a5: DUP6                           // SRCID43: (10713-10716)
      000026a6: PUSH2 0x2614                   // SRCID43: (10650-10725)
      000026a9: JUMP                           // SRCID43: (10650-10725)
      000026aa: JUMPDEST                       // SRCID43: (10650-10725)
      000026ab: SWAP4                          // SRCID43: (10643-10725)
      000026ac: POP                            // SRCID43: (10643-10725)
      000026ad: PUSH2 0x26b5                   // SRCID43: (10749-10804)
      000026b0: DUP4                           // SRCID43: (10798-10803)
      000026b1: PUSH2 0x2625                   // SRCID43: (10749-10804)
      000026b4: JUMP                           // SRCID43: (10749-10804)
      000026b5: JUMPDEST                       // SRCID43: (10749-10804)
      000026b6: DUP1                           // SRCID43: (10827-10834)
      000026b7: PUSH1 0x0                      // SRCID43: (10858-10859)
      000026b9: JUMPDEST                       // SRCID43: (10843-11124)
      000026ba: DUP4                           // SRCID43: (10868-10874)
      000026bb: DUP2                           // SRCID43: (10865-10866)
      000026bc: LT                             // SRCID43: (10862-10875)
      000026bd: ISZERO                         // SRCID43: (10843-11124)
      000026be: PUSH2 0x26e6                   // SRCID43: (10843-11124)
      000026c1: JUMPI                          // SRCID43: (10843-11124)
      000026c2: DUP2                           // SRCID43: (10944-10950)
      000026c3: MLOAD                          // SRCID43: (10938-10951)
      000026c4: PUSH2 0x26cd                   // SRCID43: (10971-11032)
      000026c7: DUP9                           // SRCID43: (11028-11031)
      000026c8: DUP3                           // SRCID43: (11013-11026)
      000026c9: PUSH2 0x2670                   // SRCID43: (10971-11032)
      000026cc: JUMP                           // SRCID43: (10971-11032)
      000026cd: JUMPDEST                       // SRCID43: (10971-11032)
      000026ce: SWAP8                          // SRCID43: (10964-11032)
      000026cf: POP                            // SRCID43: (10964-11032)
      000026d0: PUSH2 0x26d8                   // SRCID43: (11055-11114)
      000026d3: DUP4                           // SRCID43: (11107-11113)
      000026d4: PUSH2 0x2688                   // SRCID43: (11055-11114)
      000026d7: JUMP                           // SRCID43: (11055-11114)
      000026d8: JUMPDEST                       // SRCID43: (11055-11114)
      000026d9: SWAP3                          // SRCID43: (11045-11114)
      000026da: POP                            // SRCID43: (11045-11114)
      000026db: POP                            // SRCID43: (10903-11124)
      000026dc: PUSH1 0x1                      // SRCID43: (10890-10891)
      000026de: DUP2                           // SRCID43: (10887-10888)
      000026df: ADD                            // SRCID43: (10883-10892)
      000026e0: SWAP1                          // SRCID43: (10878-10892)
      000026e1: POP                            // SRCID43: (10878-10892)
      000026e2: PUSH2 0x26b9                   // SRCID43: (10843-11124)
      000026e5: JUMP                           // SRCID43: (10843-11124)
      000026e6: JUMPDEST                       // SRCID43: (10843-11124)
      000026e7: POP                            // SRCID43: (10847-10861)
      000026e8: DUP6                           // SRCID43: (11140-11143)
      000026e9: SWAP4                          // SRCID43: (11133-11143)
      000026ea: POP                            // SRCID43: (11133-11143)
      000026eb: POP                            // SRCID43: (10557-11149)
      000026ec: POP                            // SRCID43: (10557-11149)
      000026ed: POP                            // SRCID43: (10557-11149)
      000026ee: SWAP3                          // SRCID43: (10445-11149)
      000026ef: SWAP2                          // SRCID43: (10445-11149)
      000026f0: POP                            // SRCID43: (10445-11149)
      000026f1: POP                            // SRCID43: (10445-11149)
      000026f2: JUMP                           // SRCID43: (10445-11149)
      000026f3: JUMPDEST                       // SRCID43: (11231-11870)
      000026f4: PUSH1 0x0                      // SRCID43: (11350-11353)
      000026f6: PUSH1 0x40                     // SRCID43: (11386-11390)
      000026f8: DUP4                           // SRCID43: (11381-11384)
      000026f9: ADD                            // SRCID43: (11377-11391)
      000026fa: PUSH1 0x0                      // SRCID43: (11473-11477)
      000026fc: DUP4                           // SRCID43: (11466-11471)
      000026fd: ADD                            // SRCID43: (11462-11478)
      000026fe: MLOAD                          // SRCID43: (11456-11479)
      000026ff: PUSH2 0x270b                   // SRCID43: (11492-11555)
      00002702: PUSH1 0x0                      // SRCID43: (11549-11553)
      00002704: DUP7                           // SRCID43: (11544-11547)
      00002705: ADD                            // SRCID43: (11540-11554)
      00002706: DUP3                           // SRCID43: (11526-11538)
      00002707: PUSH2 0x228c                   // SRCID43: (11492-11555)
      0000270a: JUMP                           // SRCID43: (11492-11555)
      0000270b: JUMPDEST                       // SRCID43: (11492-11555)
      0000270c: POP                            // SRCID43: (11401-11565)
      0000270d: PUSH1 0x20                     // SRCID43: (11652-11656)
      0000270f: DUP4                           // SRCID43: (11645-11650)
      00002710: ADD                            // SRCID43: (11641-11657)
      00002711: MLOAD                          // SRCID43: (11635-11658)
      00002712: DUP5                           // SRCID43: (11705-11708)
      00002713: DUP3                           // SRCID43: (11699-11703)
      00002714: SUB                            // SRCID43: (11695-11709)
      00002715: PUSH1 0x20                     // SRCID43: (11688-11692)
      00002717: DUP7                           // SRCID43: (11683-11686)
      00002718: ADD                            // SRCID43: (11679-11693)
      00002719: MSTORE                         // SRCID43: (11672-11710)
      0000271a: PUSH2 0x2723                   // SRCID43: (11731-11832)
      0000271d: DUP3                           // SRCID43: (11827-11831)
      0000271e: DUP3                           // SRCID43: (11813-11825)
      0000271f: PUSH2 0x2695                   // SRCID43: (11731-11832)
      00002722: JUMP                           // SRCID43: (11731-11832)
      00002723: JUMPDEST                       // SRCID43: (11731-11832)
      00002724: SWAP2                          // SRCID43: (11723-11832)
      00002725: POP                            // SRCID43: (11723-11832)
      00002726: POP                            // SRCID43: (11575-11843)
      00002727: DUP1                           // SRCID43: (11860-11864)
      00002728: SWAP2                          // SRCID43: (11853-11864)
      00002729: POP                            // SRCID43: (11853-11864)
      0000272a: POP                            // SRCID43: (11355-11870)
      0000272b: SWAP3                          // SRCID43: (11231-11870)
      0000272c: SWAP2                          // SRCID43: (11231-11870)
      0000272d: POP                            // SRCID43: (11231-11870)
      0000272e: POP                            // SRCID43: (11231-11870)
      0000272f: JUMP                           // SRCID43: (11231-11870)
      00002730: JUMPDEST                       // SRCID43: (11876-12152)
      00002731: PUSH1 0x0                      // SRCID43: (12005-12015)
      00002733: PUSH2 0x273c                   // SRCID43: (12040-12146)
      00002736: DUP4                           // SRCID43: (12142-12145)
      00002737: DUP4                           // SRCID43: (12134-12140)
      00002738: PUSH2 0x26f3                   // SRCID43: (12040-12146)
      0000273b: JUMP                           // SRCID43: (12040-12146)
      0000273c: JUMPDEST                       // SRCID43: (12040-12146)
      0000273d: SWAP1                          // SRCID43: (12026-12146)
      0000273e: POP                            // SRCID43: (12026-12146)
      0000273f: SWAP3                          // SRCID43: (11876-12152)
      00002740: SWAP2                          // SRCID43: (11876-12152)
      00002741: POP                            // SRCID43: (11876-12152)
      00002742: POP                            // SRCID43: (11876-12152)
      00002743: JUMP                           // SRCID43: (11876-12152)
      00002744: JUMPDEST                       // SRCID43: (12158-12301)
      00002745: PUSH1 0x0                      // SRCID43: (12258-12262)
      00002747: PUSH1 0x20                     // SRCID43: (12290-12294)
      00002749: DUP3                           // SRCID43: (12285-12288)
      0000274a: ADD                            // SRCID43: (12281-12295)
      0000274b: SWAP1                          // SRCID43: (12273-12295)
      0000274c: POP                            // SRCID43: (12273-12295)
      0000274d: SWAP2                          // SRCID43: (12158-12301)
      0000274e: SWAP1                          // SRCID43: (12158-12301)
      0000274f: POP                            // SRCID43: (12158-12301)
      00002750: JUMP                           // SRCID43: (12158-12301)
      00002751: JUMPDEST                       // SRCID43: (12387-13538)
      00002752: PUSH1 0x0                      // SRCID43: (12566-12569)
      00002754: PUSH2 0x275c                   // SRCID43: (12595-12679)
      00002757: DUP3                           // SRCID43: (12673-12678)
      00002758: PUSH2 0x25dd                   // SRCID43: (12595-12679)
      0000275b: JUMP                           // SRCID43: (12595-12679)
      0000275c: JUMPDEST                       // SRCID43: (12595-12679)
      0000275d: PUSH2 0x2766                   // SRCID43: (12695-12811)
      00002760: DUP2                           // SRCID43: (12804-12810)
      00002761: DUP6                           // SRCID43: (12799-12802)
      00002762: PUSH2 0x25e8                   // SRCID43: (12695-12811)
      00002765: JUMP                           // SRCID43: (12695-12811)
      00002766: JUMPDEST                       // SRCID43: (12695-12811)
      00002767: SWAP4                          // SRCID43: (12688-12811)
      00002768: POP                            // SRCID43: (12688-12811)
      00002769: DUP4                           // SRCID43: (12837-12840)
      0000276a: PUSH1 0x20                     // SRCID43: (12882-12886)
      0000276c: DUP3                           // SRCID43: (12874-12880)
      0000276d: MUL                            // SRCID43: (12870-12887)
      0000276e: DUP6                           // SRCID43: (12865-12868)
      0000276f: ADD                            // SRCID43: (12861-12888)
      00002770: PUSH2 0x2778                   // SRCID43: (12912-12998)
      00002773: DUP6                           // SRCID43: (12992-12997)
      00002774: PUSH2 0x25f9                   // SRCID43: (12912-12998)
      00002777: JUMP                           // SRCID43: (12912-12998)
      00002778: JUMPDEST                       // SRCID43: (12912-12998)
      00002779: DUP1                           // SRCID43: (13021-13028)
      0000277a: PUSH1 0x0                      // SRCID43: (13052-13053)
      0000277c: JUMPDEST                       // SRCID43: (13037-13493)
      0000277d: DUP6                           // SRCID43: (13062-13068)
      0000277e: DUP2                           // SRCID43: (13059-13060)
      0000277f: LT                             // SRCID43: (13056-13069)
      00002780: ISZERO                         // SRCID43: (13037-13493)
      00002781: PUSH2 0x27b4                   // SRCID43: (13037-13493)
      00002784: JUMPI                          // SRCID43: (13037-13493)
      00002785: DUP5                           // SRCID43: (13133-13142)
      00002786: DUP5                           // SRCID43: (13127-13131)
      00002787: SUB                            // SRCID43: (13123-13143)
      00002788: DUP10                          // SRCID43: (13118-13121)
      00002789: MSTORE                         // SRCID43: (13111-13144)
      0000278a: DUP2                           // SRCID43: (13184-13190)
      0000278b: MLOAD                          // SRCID43: (13178-13191)
      0000278c: PUSH2 0x2795                   // SRCID43: (13212-13336)
      0000278f: DUP6                           // SRCID43: (13331-13335)
      00002790: DUP3                           // SRCID43: (13316-13329)
      00002791: PUSH2 0x2730                   // SRCID43: (13212-13336)
      00002794: JUMP                           // SRCID43: (13212-13336)
      00002795: JUMPDEST                       // SRCID43: (13212-13336)
      00002796: SWAP5                          // SRCID43: (13204-13336)
      00002797: POP                            // SRCID43: (13204-13336)
      00002798: PUSH2 0x27a0                   // SRCID43: (13359-13449)
      0000279b: DUP4                           // SRCID43: (13442-13448)
      0000279c: PUSH2 0x2744                   // SRCID43: (13359-13449)
      0000279f: JUMP                           // SRCID43: (13359-13449)
      000027a0: JUMPDEST                       // SRCID43: (13359-13449)
      000027a1: SWAP3                          // SRCID43: (13349-13449)
      000027a2: POP                            // SRCID43: (13349-13449)
      000027a3: PUSH1 0x20                     // SRCID43: (13478-13482)
      000027a5: DUP11                          // SRCID43: (13473-13476)
      000027a6: ADD                            // SRCID43: (13469-13483)
      000027a7: SWAP10                         // SRCID43: (13462-13483)
      000027a8: POP                            // SRCID43: (13462-13483)
      000027a9: POP                            // SRCID43: (13097-13493)
      000027aa: PUSH1 0x1                      // SRCID43: (13084-13085)
      000027ac: DUP2                           // SRCID43: (13081-13082)
      000027ad: ADD                            // SRCID43: (13077-13086)
      000027ae: SWAP1                          // SRCID43: (13072-13086)
      000027af: POP                            // SRCID43: (13072-13086)
      000027b0: PUSH2 0x277c                   // SRCID43: (13037-13493)
      000027b3: JUMP                           // SRCID43: (13037-13493)
      000027b4: JUMPDEST                       // SRCID43: (13037-13493)
      000027b5: POP                            // SRCID43: (13041-13055)
      000027b6: DUP3                           // SRCID43: (13509-13513)
      000027b7: SWAP8                          // SRCID43: (13502-13513)
      000027b8: POP                            // SRCID43: (13502-13513)
      000027b9: DUP8                           // SRCID43: (13529-13532)
      000027ba: SWAP6                          // SRCID43: (13522-13532)
      000027bb: POP                            // SRCID43: (13522-13532)
      000027bc: POP                            // SRCID43: (12571-13538)
      000027bd: POP                            // SRCID43: (12571-13538)
      000027be: POP                            // SRCID43: (12571-13538)
      000027bf: POP                            // SRCID43: (12571-13538)
      000027c0: POP                            // SRCID43: (12571-13538)
      000027c1: SWAP3                          // SRCID43: (12387-13538)
      000027c2: SWAP2                          // SRCID43: (12387-13538)
      000027c3: POP                            // SRCID43: (12387-13538)
      000027c4: POP                            // SRCID43: (12387-13538)
      000027c5: JUMP                           // SRCID43: (12387-13538)
      000027c6: JUMPDEST                       // SRCID43: (13544-14037)
      000027c7: PUSH1 0x0                      // SRCID43: (13747-13751)
      000027c9: PUSH1 0x20                     // SRCID43: (13785-13787)
      000027cb: DUP3                           // SRCID43: (13774-13783)
      000027cc: ADD                            // SRCID43: (13770-13788)
      000027cd: SWAP1                          // SRCID43: (13762-13788)
      000027ce: POP                            // SRCID43: (13762-13788)
      000027cf: DUP2                           // SRCID43: (13834-13843)
      000027d0: DUP2                           // SRCID43: (13828-13832)
      000027d1: SUB                            // SRCID43: (13824-13844)
      000027d2: PUSH1 0x0                      // SRCID43: (13820-13821)
      000027d4: DUP4                           // SRCID43: (13809-13818)
      000027d5: ADD                            // SRCID43: (13805-13822)
      000027d6: MSTORE                         // SRCID43: (13798-13845)
      000027d7: PUSH2 0x27e0                   // SRCID43: (13862-14030)
      000027da: DUP2                           // SRCID43: (14025-14029)
      000027db: DUP5                           // SRCID43: (14016-14022)
      000027dc: PUSH2 0x2751                   // SRCID43: (13862-14030)
      000027df: JUMP                           // SRCID43: (13862-14030)
      000027e0: JUMPDEST                       // SRCID43: (13862-14030)
      000027e1: SWAP1                          // SRCID43: (13854-14030)
      000027e2: POP                            // SRCID43: (13854-14030)
      000027e3: SWAP3                          // SRCID43: (13544-14037)
      000027e4: SWAP2                          // SRCID43: (13544-14037)
      000027e5: POP                            // SRCID43: (13544-14037)
      000027e6: POP                            // SRCID43: (13544-14037)
      000027e7: JUMP                           // SRCID43: (13544-14037)
[046] 000027e8: JUMPDEST                       // SRCID43: (14043-14120)
[046] 000027e9: PUSH1 0x0                      // SRCID43: (14080-14087)
[046] 000027eb: DUP2                           // SRCID43: (14109-14114)
[046] 000027ec: SWAP1                          // SRCID43: (14098-14114)
[046] 000027ed: POP                            // SRCID43: (14098-14114)
[046] 000027ee: SWAP2                          // SRCID43: (14043-14120)
[046] 000027ef: SWAP1                          // SRCID43: (14043-14120)
[046] 000027f0: POP                            // SRCID43: (14043-14120)
[046] 000027f1: JUMP                           // SRCID43: (14043-14120)
[013] 000027f2: JUMPDEST                       // SRCID43: (14126-14244)
[013] 000027f3: PUSH2 0x27fb                   // SRCID43: (14213-14237)
[013] 000027f6: DUP2                           // SRCID43: (14231-14236)
[013] 000027f7: PUSH2 0x27e8                   // SRCID43: (14213-14237)
[013] 000027fa: JUMP                           // SRCID43: (14213-14237)
[013] 000027fb: JUMPDEST                       // SRCID43: (14213-14237)
[013] 000027fc: DUP3                           // SRCID43: (14208-14211)
[013] 000027fd: MSTORE                         // SRCID43: (14201-14238)
[013] 000027fe: POP                            // SRCID43: (14126-14244)
[013] 000027ff: POP                            // SRCID43: (14126-14244)
[013] 00002800: JUMP                           // SRCID43: (14126-14244)
[006] 00002801: JUMPDEST                       // SRCID43: (14250-14472)
[006] 00002802: PUSH1 0x0                      // SRCID43: (14343-14347)
[006] 00002804: PUSH1 0x20                     // SRCID43: (14381-14383)
[006] 00002806: DUP3                           // SRCID43: (14370-14379)
[006] 00002807: ADD                            // SRCID43: (14366-14384)
[006] 00002808: SWAP1                          // SRCID43: (14358-14384)
[006] 00002809: POP                            // SRCID43: (14358-14384)
[006] 0000280a: PUSH2 0x2816                   // SRCID43: (14394-14465)
[006] 0000280d: PUSH1 0x0                      // SRCID43: (14462-14463)
[006] 0000280f: DUP4                           // SRCID43: (14451-14460)
[006] 00002810: ADD                            // SRCID43: (14447-14464)
[006] 00002811: DUP5                           // SRCID43: (14438-14444)
[006] 00002812: PUSH2 0x27f2                   // SRCID43: (14394-14465)
[006] 00002815: JUMP                           // SRCID43: (14394-14465)
[006] 00002816: JUMPDEST                       // SRCID43: (14394-14465)
[006] 00002817: SWAP3                          // SRCID43: (14250-14472)
[006] 00002818: SWAP2                          // SRCID43: (14250-14472)
[006] 00002819: POP                            // SRCID43: (14250-14472)
[006] 0000281a: POP                            // SRCID43: (14250-14472)
[006] 0000281b: JUMP                           // SRCID43: (14250-14472)
      0000281c: JUMPDEST                       // SRCID43: (14478-14672)
      0000281d: PUSH1 0x0                      // SRCID43: (14587-14598)
      0000281f: DUP3                           // SRCID43: (14621-14627)
      00002820: DUP3                           // SRCID43: (14616-14619)
      00002821: MSTORE                         // SRCID43: (14609-14628)
      00002822: PUSH1 0x20                     // SRCID43: (14661-14665)
      00002824: DUP3                           // SRCID43: (14656-14659)
      00002825: ADD                            // SRCID43: (14652-14666)
      00002826: SWAP1                          // SRCID43: (14637-14666)
      00002827: POP                            // SRCID43: (14637-14666)
      00002828: SWAP3                          // SRCID43: (14478-14672)
      00002829: SWAP2                          // SRCID43: (14478-14672)
      0000282a: POP                            // SRCID43: (14478-14672)
      0000282b: POP                            // SRCID43: (14478-14672)
      0000282c: JUMP                           // SRCID43: (14478-14672)
      0000282d: JUMPDEST                       // SRCID43: (14706-15697)
      0000282e: PUSH1 0x0                      // SRCID43: (14845-14848)
      00002830: PUSH2 0x2838                   // SRCID43: (14874-14938)
      00002833: DUP3                           // SRCID43: (14932-14937)
      00002834: PUSH2 0x236c                   // SRCID43: (14874-14938)
      00002837: JUMP                           // SRCID43: (14874-14938)
      00002838: JUMPDEST                       // SRCID43: (14874-14938)
      00002839: PUSH2 0x2842                   // SRCID43: (14954-15050)
      0000283c: DUP2                           // SRCID43: (15043-15049)
      0000283d: DUP6                           // SRCID43: (15038-15041)
      0000283e: PUSH2 0x281c                   // SRCID43: (14954-15050)
      00002841: JUMP                           // SRCID43: (14954-15050)
      00002842: JUMPDEST                       // SRCID43: (14954-15050)
      00002843: SWAP4                          // SRCID43: (14947-15050)
      00002844: POP                            // SRCID43: (14947-15050)
      00002845: DUP4                           // SRCID43: (15076-15079)
      00002846: PUSH1 0x20                     // SRCID43: (15121-15125)
      00002848: DUP3                           // SRCID43: (15113-15119)
      00002849: MUL                            // SRCID43: (15109-15126)
      0000284a: DUP6                           // SRCID43: (15104-15107)
      0000284b: ADD                            // SRCID43: (15100-15127)
      0000284c: PUSH2 0x2854                   // SRCID43: (15151-15217)
      0000284f: DUP6                           // SRCID43: (15211-15216)
      00002850: PUSH2 0x2388                   // SRCID43: (15151-15217)
      00002853: JUMP                           // SRCID43: (15151-15217)
      00002854: JUMPDEST                       // SRCID43: (15151-15217)
      00002855: DUP1                           // SRCID43: (15240-15247)
      00002856: PUSH1 0x0                      // SRCID43: (15271-15272)
      00002858: JUMPDEST                       // SRCID43: (15256-15652)
      00002859: DUP6                           // SRCID43: (15281-15287)
      0000285a: DUP2                           // SRCID43: (15278-15279)
      0000285b: LT                             // SRCID43: (15275-15288)
      0000285c: ISZERO                         // SRCID43: (15256-15652)
      0000285d: PUSH2 0x2890                   // SRCID43: (15256-15652)
      00002860: JUMPI                          // SRCID43: (15256-15652)
      00002861: DUP5                           // SRCID43: (15352-15361)
      00002862: DUP5                           // SRCID43: (15346-15350)
      00002863: SUB                            // SRCID43: (15342-15362)
      00002864: DUP10                          // SRCID43: (15337-15340)
      00002865: MSTORE                         // SRCID43: (15330-15363)
      00002866: DUP2                           // SRCID43: (15403-15409)
      00002867: MLOAD                          // SRCID43: (15397-15410)
      00002868: PUSH2 0x2871                   // SRCID43: (15431-15515)
      0000286b: DUP6                           // SRCID43: (15510-15514)
      0000286c: DUP3                           // SRCID43: (15495-15508)
      0000286d: PUSH2 0x2428                   // SRCID43: (15431-15515)
      00002870: JUMP                           // SRCID43: (15431-15515)
      00002871: JUMPDEST                       // SRCID43: (15431-15515)
      00002872: SWAP5                          // SRCID43: (15423-15515)
      00002873: POP                            // SRCID43: (15423-15515)
      00002874: PUSH2 0x287c                   // SRCID43: (15538-15608)
      00002877: DUP4                           // SRCID43: (15601-15607)
      00002878: PUSH2 0x243c                   // SRCID43: (15538-15608)
      0000287b: JUMP                           // SRCID43: (15538-15608)
      0000287c: JUMPDEST                       // SRCID43: (15538-15608)
      0000287d: SWAP3                          // SRCID43: (15528-15608)
      0000287e: POP                            // SRCID43: (15528-15608)
      0000287f: PUSH1 0x20                     // SRCID43: (15637-15641)
      00002881: DUP11                          // SRCID43: (15632-15635)
      00002882: ADD                            // SRCID43: (15628-15642)
      00002883: SWAP10                         // SRCID43: (15621-15642)
      00002884: POP                            // SRCID43: (15621-15642)
      00002885: POP                            // SRCID43: (15316-15652)
      00002886: PUSH1 0x1                      // SRCID43: (15303-15304)
      00002888: DUP2                           // SRCID43: (15300-15301)
      00002889: ADD                            // SRCID43: (15296-15305)
      0000288a: SWAP1                          // SRCID43: (15291-15305)
      0000288b: POP                            // SRCID43: (15291-15305)
      0000288c: PUSH2 0x2858                   // SRCID43: (15256-15652)
      0000288f: JUMP                           // SRCID43: (15256-15652)
      00002890: JUMPDEST                       // SRCID43: (15256-15652)
      00002891: POP                            // SRCID43: (15260-15274)
      00002892: DUP3                           // SRCID43: (15668-15672)
      00002893: SWAP8                          // SRCID43: (15661-15672)
      00002894: POP                            // SRCID43: (15661-15672)
      00002895: DUP8                           // SRCID43: (15688-15691)
      00002896: SWAP6                          // SRCID43: (15681-15691)
      00002897: POP                            // SRCID43: (15681-15691)
      00002898: POP                            // SRCID43: (14850-15697)
      00002899: POP                            // SRCID43: (14850-15697)
      0000289a: POP                            // SRCID43: (14850-15697)
      0000289b: POP                            // SRCID43: (14850-15697)
      0000289c: POP                            // SRCID43: (14850-15697)
      0000289d: SWAP3                          // SRCID43: (14706-15697)
      0000289e: SWAP2                          // SRCID43: (14706-15697)
      0000289f: POP                            // SRCID43: (14706-15697)
      000028a0: POP                            // SRCID43: (14706-15697)
      000028a1: JUMP                           // SRCID43: (14706-15697)
      000028a2: JUMPDEST                       // SRCID43: (15703-16116)
      000028a3: PUSH1 0x0                      // SRCID43: (15866-15870)
      000028a5: PUSH1 0x20                     // SRCID43: (15904-15906)
      000028a7: DUP3                           // SRCID43: (15893-15902)
      000028a8: ADD                            // SRCID43: (15889-15907)
      000028a9: SWAP1                          // SRCID43: (15881-15907)
      000028aa: POP                            // SRCID43: (15881-15907)
      000028ab: DUP2                           // SRCID43: (15953-15962)
      000028ac: DUP2                           // SRCID43: (15947-15951)
      000028ad: SUB                            // SRCID43: (15943-15963)
      000028ae: PUSH1 0x0                      // SRCID43: (15939-15940)
      000028b0: DUP4                           // SRCID43: (15928-15937)
      000028b1: ADD                            // SRCID43: (15924-15941)
      000028b2: MSTORE                         // SRCID43: (15917-15964)
      000028b3: PUSH2 0x28bc                   // SRCID43: (15981-16109)
      000028b6: DUP2                           // SRCID43: (16104-16108)
      000028b7: DUP5                           // SRCID43: (16095-16101)
      000028b8: PUSH2 0x282d                   // SRCID43: (15981-16109)
      000028bb: JUMP                           // SRCID43: (15981-16109)
      000028bc: JUMPDEST                       // SRCID43: (15981-16109)
      000028bd: SWAP1                          // SRCID43: (15973-16109)
      000028be: POP                            // SRCID43: (15973-16109)
      000028bf: SWAP3                          // SRCID43: (15703-16116)
      000028c0: SWAP2                          // SRCID43: (15703-16116)
      000028c1: POP                            // SRCID43: (15703-16116)
      000028c2: POP                            // SRCID43: (15703-16116)
      000028c3: JUMP                           // SRCID43: (15703-16116)
[008] 000028c4: JUMPDEST                       // SRCID43: (16122-16212)
[008] 000028c5: PUSH1 0x0                      // SRCID43: (16156-16163)
[008] 000028c7: DUP2                           // SRCID43: (16199-16204)
[008] 000028c8: ISZERO                         // SRCID43: (16192-16205)
[008] 000028c9: ISZERO                         // SRCID43: (16185-16206)
[008] 000028ca: SWAP1                          // SRCID43: (16174-16206)
[008] 000028cb: POP                            // SRCID43: (16174-16206)
[008] 000028cc: SWAP2                          // SRCID43: (16122-16212)
[008] 000028cd: SWAP1                          // SRCID43: (16122-16212)
[008] 000028ce: POP                            // SRCID43: (16122-16212)
[008] 000028cf: JUMP                           // SRCID43: (16122-16212)
[006] 000028d0: JUMPDEST                       // SRCID43: (16218-16327)
[006] 000028d1: PUSH2 0x28d9                   // SRCID43: (16299-16320)
[006] 000028d4: DUP2                           // SRCID43: (16314-16319)
[006] 000028d5: PUSH2 0x28c4                   // SRCID43: (16299-16320)
[006] 000028d8: JUMP                           // SRCID43: (16299-16320)
[006] 000028d9: JUMPDEST                       // SRCID43: (16299-16320)
[006] 000028da: DUP3                           // SRCID43: (16294-16297)
[006] 000028db: MSTORE                         // SRCID43: (16287-16321)
[006] 000028dc: POP                            // SRCID43: (16218-16327)
[006] 000028dd: POP                            // SRCID43: (16218-16327)
[006] 000028de: JUMP                           // SRCID43: (16218-16327)
      000028df: JUMPDEST                       // SRCID43: (16333-16543)
      000028e0: PUSH1 0x0                      // SRCID43: (16420-16424)
      000028e2: PUSH1 0x20                     // SRCID43: (16458-16460)
      000028e4: DUP3                           // SRCID43: (16447-16456)
      000028e5: ADD                            // SRCID43: (16443-16461)
      000028e6: SWAP1                          // SRCID43: (16435-16461)
      000028e7: POP                            // SRCID43: (16435-16461)
      000028e8: PUSH2 0x28f4                   // SRCID43: (16471-16536)
      000028eb: PUSH1 0x0                      // SRCID43: (16533-16534)
      000028ed: DUP4                           // SRCID43: (16522-16531)
      000028ee: ADD                            // SRCID43: (16518-16535)
      000028ef: DUP5                           // SRCID43: (16509-16515)
      000028f0: PUSH2 0x28d0                   // SRCID43: (16471-16536)
      000028f3: JUMP                           // SRCID43: (16471-16536)
      000028f4: JUMPDEST                       // SRCID43: (16471-16536)
      000028f5: SWAP3                          // SRCID43: (16333-16543)
      000028f6: SWAP2                          // SRCID43: (16333-16543)
      000028f7: POP                            // SRCID43: (16333-16543)
      000028f8: POP                            // SRCID43: (16333-16543)
      000028f9: JUMP                           // SRCID43: (16333-16543)
[002] 000028fa: JUMPDEST                       // SRCID43: (16549-16624)
[002] 000028fb: PUSH1 0x0                      // SRCID43: (16582-16588)
[002] 000028fd: PUSH1 0x40                     // SRCID43: (16615-16617)
[002] 000028ff: MLOAD                          // SRCID43: (16609-16618)
[002] 00002900: SWAP1                          // SRCID43: (16599-16618)
[002] 00002901: POP                            // SRCID43: (16599-16618)
[002] 00002902: SWAP1                          // SRCID43: (16549-16624)
[002] 00002903: JUMP                           // SRCID43: (16549-16624)
      00002904: JUMPDEST                       // SRCID43: (16630-16747)
      00002905: PUSH1 0x0                      // SRCID43: (16739-16740)
      00002907: DUP1                           // SRCID43: (16736-16737)
      00002908: REVERT                         // SRCID43: (16729-16741)
      00002909: JUMPDEST                       // SRCID43: (16753-16870)
      0000290a: PUSH1 0x0                      // SRCID43: (16862-16863)
      0000290c: DUP1                           // SRCID43: (16859-16860)
      0000290d: REVERT                         // SRCID43: (16852-16864)
[007] 0000290e: JUMPDEST                       // SRCID43: (16876-16988)
[007] 0000290f: PUSH1 0x0                      // SRCID43: (16929-16936)
[007] 00002911: PUSH2 0x2919                   // SRCID43: (16958-16982)
[007] 00002914: DUP3                           // SRCID43: (16976-16981)
[007] 00002915: PUSH2 0x227a                   // SRCID43: (16958-16982)
[007] 00002918: JUMP                           // SRCID43: (16958-16982)
[007] 00002919: JUMPDEST                       // SRCID43: (16958-16982)
[007] 0000291a: SWAP1                          // SRCID43: (16947-16982)
[007] 0000291b: POP                            // SRCID43: (16947-16982)
[007] 0000291c: SWAP2                          // SRCID43: (16876-16988)
[007] 0000291d: SWAP1                          // SRCID43: (16876-16988)
[007] 0000291e: POP                            // SRCID43: (16876-16988)
[007] 0000291f: JUMP                           // SRCID43: (16876-16988)
[007] 00002920: JUMPDEST                       // SRCID43: (16994-17148)
[007] 00002921: PUSH2 0x2929                   // SRCID43: (17083-17123)
[007] 00002924: DUP2                           // SRCID43: (17117-17122)
[007] 00002925: PUSH2 0x290e                   // SRCID43: (17083-17123)
[007] 00002928: JUMP                           // SRCID43: (17083-17123)
[007] 00002929: JUMPDEST                       // SRCID43: (17083-17123)
[007] 0000292a: DUP2                           // SRCID43: (17076-17081)
[007] 0000292b: EQ                             // SRCID43: (17073-17124)
[007] 0000292c: PUSH2 0x2934                   // SRCID43: (17063-17142)
[007] 0000292f: JUMPI                          // SRCID43: (17063-17142)
      00002930: PUSH1 0x0                      // SRCID43: (17138-17139)
      00002932: DUP1                           // SRCID43: (17135-17136)
      00002933: REVERT                         // SRCID43: (17128-17140)
[007] 00002934: JUMPDEST                       // SRCID43: (17063-17142)
[007] 00002935: POP                            // SRCID43: (16994-17148)
[007] 00002936: JUMP                           // SRCID43: (16994-17148)
[007] 00002937: JUMPDEST                       // SRCID43: (17154-17329)
[007] 00002938: PUSH1 0x0                      // SRCID43: (17227-17232)
[007] 0000293a: DUP2                           // SRCID43: (17258-17264)
[007] 0000293b: MLOAD                          // SRCID43: (17252-17265)
[007] 0000293c: SWAP1                          // SRCID43: (17243-17265)
[007] 0000293d: POP                            // SRCID43: (17243-17265)
[007] 0000293e: PUSH2 0x2946                   // SRCID43: (17274-17323)
[007] 00002941: DUP2                           // SRCID43: (17317-17322)
[007] 00002942: PUSH2 0x2920                   // SRCID43: (17274-17323)
[007] 00002945: JUMP                           // SRCID43: (17274-17323)
[007] 00002946: JUMPDEST                       // SRCID43: (17274-17323)
[007] 00002947: SWAP3                          // SRCID43: (17154-17329)
[007] 00002948: SWAP2                          // SRCID43: (17154-17329)
[007] 00002949: POP                            // SRCID43: (17154-17329)
[007] 0000294a: POP                            // SRCID43: (17154-17329)
[007] 0000294b: JUMP                           // SRCID43: (17154-17329)
[007] 0000294c: JUMPDEST                       // SRCID43: (17335-17453)
[007] 0000294d: PUSH1 0x0                      // SRCID43: (17394-17401)
[007] 0000294f: PUSH2 0x2957                   // SRCID43: (17423-17447)
[007] 00002952: DUP3                           // SRCID43: (17441-17446)
[007] 00002953: PUSH2 0x227a                   // SRCID43: (17423-17447)
[007] 00002956: JUMP                           // SRCID43: (17423-17447)
[007] 00002957: JUMPDEST                       // SRCID43: (17423-17447)
[007] 00002958: SWAP1                          // SRCID43: (17412-17447)
[007] 00002959: POP                            // SRCID43: (17412-17447)
[007] 0000295a: SWAP2                          // SRCID43: (17335-17453)
[007] 0000295b: SWAP1                          // SRCID43: (17335-17453)
[007] 0000295c: POP                            // SRCID43: (17335-17453)
[007] 0000295d: JUMP                           // SRCID43: (17335-17453)
[007] 0000295e: JUMPDEST                       // SRCID43: (17459-17625)
[007] 0000295f: PUSH2 0x2967                   // SRCID43: (17554-17600)
[007] 00002962: DUP2                           // SRCID43: (17594-17599)
[007] 00002963: PUSH2 0x294c                   // SRCID43: (17554-17600)
[007] 00002966: JUMP                           // SRCID43: (17554-17600)
[007] 00002967: JUMPDEST                       // SRCID43: (17554-17600)
[007] 00002968: DUP2                           // SRCID43: (17547-17552)
[007] 00002969: EQ                             // SRCID43: (17544-17601)
[007] 0000296a: PUSH2 0x2972                   // SRCID43: (17534-17619)
[007] 0000296d: JUMPI                          // SRCID43: (17534-17619)
      0000296e: PUSH1 0x0                      // SRCID43: (17615-17616)
      00002970: DUP1                           // SRCID43: (17612-17613)
      00002971: REVERT                         // SRCID43: (17605-17617)
[007] 00002972: JUMPDEST                       // SRCID43: (17534-17619)
[007] 00002973: POP                            // SRCID43: (17459-17625)
[007] 00002974: JUMP                           // SRCID43: (17459-17625)
[007] 00002975: JUMPDEST                       // SRCID43: (17631-17818)
[007] 00002976: PUSH1 0x0                      // SRCID43: (17710-17715)
[007] 00002978: DUP2                           // SRCID43: (17741-17747)
[007] 00002979: MLOAD                          // SRCID43: (17735-17748)
[007] 0000297a: SWAP1                          // SRCID43: (17726-17748)
[007] 0000297b: POP                            // SRCID43: (17726-17748)
[007] 0000297c: PUSH2 0x2984                   // SRCID43: (17757-17812)
[007] 0000297f: DUP2                           // SRCID43: (17806-17811)
[007] 00002980: PUSH2 0x295e                   // SRCID43: (17757-17812)
[007] 00002983: JUMP                           // SRCID43: (17757-17812)
[007] 00002984: JUMPDEST                       // SRCID43: (17757-17812)
[007] 00002985: SWAP3                          // SRCID43: (17631-17818)
[007] 00002986: SWAP2                          // SRCID43: (17631-17818)
[007] 00002987: POP                            // SRCID43: (17631-17818)
[007] 00002988: POP                            // SRCID43: (17631-17818)
[007] 00002989: JUMP                           // SRCID43: (17631-17818)
[007] 0000298a: JUMPDEST                       // SRCID43: (17824-18407)
[007] 0000298b: PUSH1 0x0                      // SRCID43: (17941-17947)
[007] 0000298d: DUP1                           // SRCID43: (17949-17955)
[007] 0000298e: PUSH1 0x40                     // SRCID43: (17998-18000)
[007] 00002990: DUP4                           // SRCID43: (17986-17995)
[007] 00002991: DUP6                           // SRCID43: (17977-17984)
[007] 00002992: SUB                            // SRCID43: (17973-17996)
[007] 00002993: SLT                            // SRCID43: (17969-18001)
[007] 00002994: ISZERO                         // SRCID43: (17966-18085)
[007] 00002995: PUSH2 0x29a1                   // SRCID43: (17966-18085)
[007] 00002998: JUMPI                          // SRCID43: (17966-18085)
      00002999: PUSH2 0x29a0                   // SRCID43: (18004-18083)
      0000299c: PUSH2 0x2904                   // SRCID43: (18004-18083)
      0000299f: JUMP                           // SRCID43: (18004-18083)
      000029a0: JUMPDEST                       // SRCID43: (18004-18083)
[007] 000029a1: JUMPDEST                       // SRCID43: (17966-18085)
[007] 000029a2: PUSH1 0x0                      // SRCID43: (18124-18125)
[007] 000029a4: PUSH2 0x29af                   // SRCID43: (18149-18229)
[007] 000029a7: DUP6                           // SRCID43: (18221-18228)
[007] 000029a8: DUP3                           // SRCID43: (18212-18218)
[007] 000029a9: DUP7                           // SRCID43: (18201-18210)
[007] 000029aa: ADD                            // SRCID43: (18197-18219)
[007] 000029ab: PUSH2 0x2937                   // SRCID43: (18149-18229)
[007] 000029ae: JUMP                           // SRCID43: (18149-18229)
[007] 000029af: JUMPDEST                       // SRCID43: (18149-18229)
[007] 000029b0: SWAP3                          // SRCID43: (18139-18229)
[007] 000029b1: POP                            // SRCID43: (18139-18229)
[007] 000029b2: POP                            // SRCID43: (18095-18239)
[007] 000029b3: PUSH1 0x20                     // SRCID43: (18278-18280)
[007] 000029b5: PUSH2 0x29c0                   // SRCID43: (18304-18390)
[007] 000029b8: DUP6                           // SRCID43: (18382-18389)
[007] 000029b9: DUP3                           // SRCID43: (18373-18379)
[007] 000029ba: DUP7                           // SRCID43: (18362-18371)
[007] 000029bb: ADD                            // SRCID43: (18358-18380)
[007] 000029bc: PUSH2 0x2975                   // SRCID43: (18304-18390)
[007] 000029bf: JUMP                           // SRCID43: (18304-18390)
[007] 000029c0: JUMPDEST                       // SRCID43: (18304-18390)
[007] 000029c1: SWAP2                          // SRCID43: (18294-18390)
[007] 000029c2: POP                            // SRCID43: (18294-18390)
[007] 000029c3: POP                            // SRCID43: (18249-18400)
[007] 000029c4: SWAP3                          // SRCID43: (17824-18407)
[007] 000029c5: POP                            // SRCID43: (17824-18407)
[007] 000029c6: SWAP3                          // SRCID43: (17824-18407)
[007] 000029c7: SWAP1                          // SRCID43: (17824-18407)
[007] 000029c8: POP                            // SRCID43: (17824-18407)
[007] 000029c9: JUMP                           // SRCID43: (17824-18407)
[014] 000029ca: JUMPDEST                       // SRCID43: (18413-18535)
[014] 000029cb: PUSH2 0x29d3                   // SRCID43: (18486-18510)
[014] 000029ce: DUP2                           // SRCID43: (18504-18509)
[014] 000029cf: PUSH2 0x27e8                   // SRCID43: (18486-18510)
[014] 000029d2: JUMP                           // SRCID43: (18486-18510)
[014] 000029d3: JUMPDEST                       // SRCID43: (18486-18510)
[014] 000029d4: DUP2                           // SRCID43: (18479-18484)
[014] 000029d5: EQ                             // SRCID43: (18476-18511)
[014] 000029d6: PUSH2 0x29de                   // SRCID43: (18466-18529)
[014] 000029d9: JUMPI                          // SRCID43: (18466-18529)
      000029da: PUSH1 0x0                      // SRCID43: (18525-18526)
      000029dc: DUP1                           // SRCID43: (18522-18523)
      000029dd: REVERT                         // SRCID43: (18515-18527)
[014] 000029de: JUMPDEST                       // SRCID43: (18466-18529)
[014] 000029df: POP                            // SRCID43: (18413-18535)
[014] 000029e0: JUMP                           // SRCID43: (18413-18535)
[014] 000029e1: JUMPDEST                       // SRCID43: (18541-18684)
[014] 000029e2: PUSH1 0x0                      // SRCID43: (18598-18603)
[014] 000029e4: DUP2                           // SRCID43: (18629-18635)
[014] 000029e5: MLOAD                          // SRCID43: (18623-18636)
[014] 000029e6: SWAP1                          // SRCID43: (18614-18636)
[014] 000029e7: POP                            // SRCID43: (18614-18636)
[014] 000029e8: PUSH2 0x29f0                   // SRCID43: (18645-18678)
[014] 000029eb: DUP2                           // SRCID43: (18672-18677)
[014] 000029ec: PUSH2 0x29ca                   // SRCID43: (18645-18678)
[014] 000029ef: JUMP                           // SRCID43: (18645-18678)
[014] 000029f0: JUMPDEST                       // SRCID43: (18645-18678)
[014] 000029f1: SWAP3                          // SRCID43: (18541-18684)
[014] 000029f2: SWAP2                          // SRCID43: (18541-18684)
[014] 000029f3: POP                            // SRCID43: (18541-18684)
[014] 000029f4: POP                            // SRCID43: (18541-18684)
[014] 000029f5: JUMP                           // SRCID43: (18541-18684)
[015] 000029f6: JUMPDEST                       // SRCID43: (18690-18812)
[015] 000029f7: PUSH2 0x29ff                   // SRCID43: (18763-18787)
[015] 000029fa: DUP2                           // SRCID43: (18781-18786)
[015] 000029fb: PUSH2 0x227a                   // SRCID43: (18763-18787)
[015] 000029fe: JUMP                           // SRCID43: (18763-18787)
[015] 000029ff: JUMPDEST                       // SRCID43: (18763-18787)
[015] 00002a00: DUP2                           // SRCID43: (18756-18761)
[015] 00002a01: EQ                             // SRCID43: (18753-18788)
[015] 00002a02: PUSH2 0x2a0a                   // SRCID43: (18743-18806)
[015] 00002a05: JUMPI                          // SRCID43: (18743-18806)
      00002a06: PUSH1 0x0                      // SRCID43: (18802-18803)
      00002a08: DUP1                           // SRCID43: (18799-18800)
      00002a09: REVERT                         // SRCID43: (18792-18804)
[015] 00002a0a: JUMPDEST                       // SRCID43: (18743-18806)
[015] 00002a0b: POP                            // SRCID43: (18690-18812)
[015] 00002a0c: JUMP                           // SRCID43: (18690-18812)
[015] 00002a0d: JUMPDEST                       // SRCID43: (18818-18961)
[015] 00002a0e: PUSH1 0x0                      // SRCID43: (18875-18880)
[015] 00002a10: DUP2                           // SRCID43: (18906-18912)
[015] 00002a11: MLOAD                          // SRCID43: (18900-18913)
[015] 00002a12: SWAP1                          // SRCID43: (18891-18913)
[015] 00002a13: POP                            // SRCID43: (18891-18913)
[015] 00002a14: PUSH2 0x2a1c                   // SRCID43: (18922-18955)
[015] 00002a17: DUP2                           // SRCID43: (18949-18954)
[015] 00002a18: PUSH2 0x29f6                   // SRCID43: (18922-18955)
[015] 00002a1b: JUMP                           // SRCID43: (18922-18955)
[015] 00002a1c: JUMPDEST                       // SRCID43: (18922-18955)
[015] 00002a1d: SWAP3                          // SRCID43: (18818-18961)
[015] 00002a1e: SWAP2                          // SRCID43: (18818-18961)
[015] 00002a1f: POP                            // SRCID43: (18818-18961)
[015] 00002a20: POP                            // SRCID43: (18818-18961)
[015] 00002a21: JUMP                           // SRCID43: (18818-18961)
[007] 00002a22: JUMPDEST                       // SRCID43: (18967-19044)
[007] 00002a23: PUSH1 0x0                      // SRCID43: (19004-19011)
[007] 00002a25: DUP2                           // SRCID43: (19033-19038)
[007] 00002a26: SWAP1                          // SRCID43: (19022-19038)
[007] 00002a27: POP                            // SRCID43: (19022-19038)
[007] 00002a28: SWAP2                          // SRCID43: (18967-19044)
[007] 00002a29: SWAP1                          // SRCID43: (18967-19044)
[007] 00002a2a: POP                            // SRCID43: (18967-19044)
[007] 00002a2b: JUMP                           // SRCID43: (18967-19044)
[007] 00002a2c: JUMPDEST                       // SRCID43: (19050-19172)
[007] 00002a2d: PUSH2 0x2a35                   // SRCID43: (19123-19147)
[007] 00002a30: DUP2                           // SRCID43: (19141-19146)
[007] 00002a31: PUSH2 0x2a22                   // SRCID43: (19123-19147)
[007] 00002a34: JUMP                           // SRCID43: (19123-19147)
[007] 00002a35: JUMPDEST                       // SRCID43: (19123-19147)
[007] 00002a36: DUP2                           // SRCID43: (19116-19121)
[007] 00002a37: EQ                             // SRCID43: (19113-19148)
[007] 00002a38: PUSH2 0x2a40                   // SRCID43: (19103-19166)
[007] 00002a3b: JUMPI                          // SRCID43: (19103-19166)
      00002a3c: PUSH1 0x0                      // SRCID43: (19162-19163)
      00002a3e: DUP1                           // SRCID43: (19159-19160)
      00002a3f: REVERT                         // SRCID43: (19152-19164)
[007] 00002a40: JUMPDEST                       // SRCID43: (19103-19166)
[007] 00002a41: POP                            // SRCID43: (19050-19172)
[007] 00002a42: JUMP                           // SRCID43: (19050-19172)
[007] 00002a43: JUMPDEST                       // SRCID43: (19178-19321)
[007] 00002a44: PUSH1 0x0                      // SRCID43: (19235-19240)
[007] 00002a46: DUP2                           // SRCID43: (19266-19272)
[007] 00002a47: MLOAD                          // SRCID43: (19260-19273)
[007] 00002a48: SWAP1                          // SRCID43: (19251-19273)
[007] 00002a49: POP                            // SRCID43: (19251-19273)
[007] 00002a4a: PUSH2 0x2a52                   // SRCID43: (19282-19315)
[007] 00002a4d: DUP2                           // SRCID43: (19309-19314)
[007] 00002a4e: PUSH2 0x2a2c                   // SRCID43: (19282-19315)
[007] 00002a51: JUMP                           // SRCID43: (19282-19315)
[007] 00002a52: JUMPDEST                       // SRCID43: (19282-19315)
[007] 00002a53: SWAP3                          // SRCID43: (19178-19321)
[007] 00002a54: SWAP2                          // SRCID43: (19178-19321)
[007] 00002a55: POP                            // SRCID43: (19178-19321)
[007] 00002a56: POP                            // SRCID43: (19178-19321)
[007] 00002a57: JUMP                           // SRCID43: (19178-19321)
[007] 00002a58: JUMPDEST                       // SRCID43: (19327-19428)
[007] 00002a59: PUSH1 0x0                      // SRCID43: (19363-19370)
[007] 00002a5b: PUSH8 0xffffffffffffffff       // SRCID43: (19403-19421)
[007] 00002a64: DUP3                           // SRCID43: (19396-19401)
[007] 00002a65: AND                            // SRCID43: (19392-19422)
[007] 00002a66: SWAP1                          // SRCID43: (19381-19422)
[007] 00002a67: POP                            // SRCID43: (19381-19422)
[007] 00002a68: SWAP2                          // SRCID43: (19327-19428)
[007] 00002a69: SWAP1                          // SRCID43: (19327-19428)
[007] 00002a6a: POP                            // SRCID43: (19327-19428)
[007] 00002a6b: JUMP                           // SRCID43: (19327-19428)
[007] 00002a6c: JUMPDEST                       // SRCID43: (19434-19554)
[007] 00002a6d: PUSH2 0x2a75                   // SRCID43: (19506-19529)
[007] 00002a70: DUP2                           // SRCID43: (19523-19528)
[007] 00002a71: PUSH2 0x2a58                   // SRCID43: (19506-19529)
[007] 00002a74: JUMP                           // SRCID43: (19506-19529)
[007] 00002a75: JUMPDEST                       // SRCID43: (19506-19529)
[007] 00002a76: DUP2                           // SRCID43: (19499-19504)
[007] 00002a77: EQ                             // SRCID43: (19496-19530)
[007] 00002a78: PUSH2 0x2a80                   // SRCID43: (19486-19548)
[007] 00002a7b: JUMPI                          // SRCID43: (19486-19548)
      00002a7c: PUSH1 0x0                      // SRCID43: (19544-19545)
      00002a7e: DUP1                           // SRCID43: (19541-19542)
      00002a7f: REVERT                         // SRCID43: (19534-19546)
[007] 00002a80: JUMPDEST                       // SRCID43: (19486-19548)
[007] 00002a81: POP                            // SRCID43: (19434-19554)
[007] 00002a82: JUMP                           // SRCID43: (19434-19554)
[007] 00002a83: JUMPDEST                       // SRCID43: (19560-19701)
[007] 00002a84: PUSH1 0x0                      // SRCID43: (19616-19621)
[007] 00002a86: DUP2                           // SRCID43: (19647-19653)
[007] 00002a87: MLOAD                          // SRCID43: (19641-19654)
[007] 00002a88: SWAP1                          // SRCID43: (19632-19654)
[007] 00002a89: POP                            // SRCID43: (19632-19654)
[007] 00002a8a: PUSH2 0x2a92                   // SRCID43: (19663-19695)
[007] 00002a8d: DUP2                           // SRCID43: (19689-19694)
[007] 00002a8e: PUSH2 0x2a6c                   // SRCID43: (19663-19695)
[007] 00002a91: JUMP                           // SRCID43: (19663-19695)
[007] 00002a92: JUMPDEST                       // SRCID43: (19663-19695)
[007] 00002a93: SWAP3                          // SRCID43: (19560-19701)
[007] 00002a94: SWAP2                          // SRCID43: (19560-19701)
[007] 00002a95: POP                            // SRCID43: (19560-19701)
[007] 00002a96: POP                            // SRCID43: (19560-19701)
[007] 00002a97: JUMP                           // SRCID43: (19560-19701)
[007] 00002a98: JUMPDEST                       // SRCID43: (19707-19800)
[007] 00002a99: PUSH1 0x0                      // SRCID43: (19743-19750)
[007] 00002a9b: PUSH4 0xffffffff               // SRCID43: (19783-19793)
[007] 00002aa0: DUP3                           // SRCID43: (19776-19781)
[007] 00002aa1: AND                            // SRCID43: (19772-19794)
[007] 00002aa2: SWAP1                          // SRCID43: (19761-19794)
[007] 00002aa3: POP                            // SRCID43: (19761-19794)
[007] 00002aa4: SWAP2                          // SRCID43: (19707-19800)
[007] 00002aa5: SWAP1                          // SRCID43: (19707-19800)
[007] 00002aa6: POP                            // SRCID43: (19707-19800)
[007] 00002aa7: JUMP                           // SRCID43: (19707-19800)
[007] 00002aa8: JUMPDEST                       // SRCID43: (19806-19926)
[007] 00002aa9: PUSH2 0x2ab1                   // SRCID43: (19878-19901)
[007] 00002aac: DUP2                           // SRCID43: (19895-19900)
[007] 00002aad: PUSH2 0x2a98                   // SRCID43: (19878-19901)
[007] 00002ab0: JUMP                           // SRCID43: (19878-19901)
[007] 00002ab1: JUMPDEST                       // SRCID43: (19878-19901)
[007] 00002ab2: DUP2                           // SRCID43: (19871-19876)
[007] 00002ab3: EQ                             // SRCID43: (19868-19902)
[007] 00002ab4: PUSH2 0x2abc                   // SRCID43: (19858-19920)
[007] 00002ab7: JUMPI                          // SRCID43: (19858-19920)
      00002ab8: PUSH1 0x0                      // SRCID43: (19916-19917)
      00002aba: DUP1                           // SRCID43: (19913-19914)
      00002abb: REVERT                         // SRCID43: (19906-19918)
[007] 00002abc: JUMPDEST                       // SRCID43: (19858-19920)
[007] 00002abd: POP                            // SRCID43: (19806-19926)
[007] 00002abe: JUMP                           // SRCID43: (19806-19926)
[007] 00002abf: JUMPDEST                       // SRCID43: (19932-20073)
[007] 00002ac0: PUSH1 0x0                      // SRCID43: (19988-19993)
[007] 00002ac2: DUP2                           // SRCID43: (20019-20025)
[007] 00002ac3: MLOAD                          // SRCID43: (20013-20026)
[007] 00002ac4: SWAP1                          // SRCID43: (20004-20026)
[007] 00002ac5: POP                            // SRCID43: (20004-20026)
[007] 00002ac6: PUSH2 0x2ace                   // SRCID43: (20035-20067)
[007] 00002ac9: DUP2                           // SRCID43: (20061-20066)
[007] 00002aca: PUSH2 0x2aa8                   // SRCID43: (20035-20067)
[007] 00002acd: JUMP                           // SRCID43: (20035-20067)
[007] 00002ace: JUMPDEST                       // SRCID43: (20035-20067)
[007] 00002acf: SWAP3                          // SRCID43: (19932-20073)
[007] 00002ad0: SWAP2                          // SRCID43: (19932-20073)
[007] 00002ad1: POP                            // SRCID43: (19932-20073)
[007] 00002ad2: POP                            // SRCID43: (19932-20073)
[007] 00002ad3: JUMP                           // SRCID43: (19932-20073)
[007] 00002ad4: JUMPDEST                       // SRCID43: (20079-21366)
[007] 00002ad5: PUSH1 0x0                      // SRCID43: (20201-20207)
[007] 00002ad7: DUP1                           // SRCID43: (20209-20215)
[007] 00002ad8: PUSH1 0x0                      // SRCID43: (20217-20223)
[007] 00002ada: DUP1                           // SRCID43: (20225-20231)
[007] 00002adb: PUSH1 0x0                      // SRCID43: (20233-20239)
[007] 00002add: DUP1                           // SRCID43: (20241-20247)
[007] 00002ade: PUSH1 0x0                      // SRCID43: (20249-20255)
[007] 00002ae0: PUSH1 0xe0                     // SRCID43: (20298-20301)
[007] 00002ae2: DUP9                           // SRCID43: (20286-20295)
[007] 00002ae3: DUP11                          // SRCID43: (20277-20284)
[007] 00002ae4: SUB                            // SRCID43: (20273-20296)
[007] 00002ae5: SLT                            // SRCID43: (20269-20302)
[007] 00002ae6: ISZERO                         // SRCID43: (20266-20386)
[007] 00002ae7: PUSH2 0x2af3                   // SRCID43: (20266-20386)
[007] 00002aea: JUMPI                          // SRCID43: (20266-20386)
      00002aeb: PUSH2 0x2af2                   // SRCID43: (20305-20384)
      00002aee: PUSH2 0x2904                   // SRCID43: (20305-20384)
      00002af1: JUMP                           // SRCID43: (20305-20384)
      00002af2: JUMPDEST                       // SRCID43: (20305-20384)
[007] 00002af3: JUMPDEST                       // SRCID43: (20266-20386)
[007] 00002af4: PUSH1 0x0                      // SRCID43: (20425-20426)
[007] 00002af6: PUSH2 0x2b01                   // SRCID43: (20450-20514)
[007] 00002af9: DUP11                          // SRCID43: (20506-20513)
[007] 00002afa: DUP3                           // SRCID43: (20497-20503)
[007] 00002afb: DUP12                          // SRCID43: (20486-20495)
[007] 00002afc: ADD                            // SRCID43: (20482-20504)
[007] 00002afd: PUSH2 0x29e1                   // SRCID43: (20450-20514)
[007] 00002b00: JUMP                           // SRCID43: (20450-20514)
[007] 00002b01: JUMPDEST                       // SRCID43: (20450-20514)
[007] 00002b02: SWAP8                          // SRCID43: (20440-20514)
[007] 00002b03: POP                            // SRCID43: (20440-20514)
[007] 00002b04: POP                            // SRCID43: (20396-20524)
[007] 00002b05: PUSH1 0x20                     // SRCID43: (20563-20565)
[007] 00002b07: PUSH2 0x2b12                   // SRCID43: (20589-20653)
[007] 00002b0a: DUP11                          // SRCID43: (20645-20652)
[007] 00002b0b: DUP3                           // SRCID43: (20636-20642)
[007] 00002b0c: DUP12                          // SRCID43: (20625-20634)
[007] 00002b0d: ADD                            // SRCID43: (20621-20643)
[007] 00002b0e: PUSH2 0x29e1                   // SRCID43: (20589-20653)
[007] 00002b11: JUMP                           // SRCID43: (20589-20653)
[007] 00002b12: JUMPDEST                       // SRCID43: (20589-20653)
[007] 00002b13: SWAP7                          // SRCID43: (20579-20653)
[007] 00002b14: POP                            // SRCID43: (20579-20653)
[007] 00002b15: POP                            // SRCID43: (20534-20663)
[007] 00002b16: PUSH1 0x40                     // SRCID43: (20702-20704)
[007] 00002b18: PUSH2 0x2b23                   // SRCID43: (20728-20792)
[007] 00002b1b: DUP11                          // SRCID43: (20784-20791)
[007] 00002b1c: DUP3                           // SRCID43: (20775-20781)
[007] 00002b1d: DUP12                          // SRCID43: (20764-20773)
[007] 00002b1e: ADD                            // SRCID43: (20760-20782)
[007] 00002b1f: PUSH2 0x2a0d                   // SRCID43: (20728-20792)
[007] 00002b22: JUMP                           // SRCID43: (20728-20792)
[007] 00002b23: JUMPDEST                       // SRCID43: (20728-20792)
[007] 00002b24: SWAP6                          // SRCID43: (20718-20792)
[007] 00002b25: POP                            // SRCID43: (20718-20792)
[007] 00002b26: POP                            // SRCID43: (20673-20802)
[007] 00002b27: PUSH1 0x60                     // SRCID43: (20841-20843)
[007] 00002b29: PUSH2 0x2b34                   // SRCID43: (20867-20931)
[007] 00002b2c: DUP11                          // SRCID43: (20923-20930)
[007] 00002b2d: DUP3                           // SRCID43: (20914-20920)
[007] 00002b2e: DUP12                          // SRCID43: (20903-20912)
[007] 00002b2f: ADD                            // SRCID43: (20899-20921)
[007] 00002b30: PUSH2 0x2a43                   // SRCID43: (20867-20931)
[007] 00002b33: JUMP                           // SRCID43: (20867-20931)
[007] 00002b34: JUMPDEST                       // SRCID43: (20867-20931)
[007] 00002b35: SWAP5                          // SRCID43: (20857-20931)
[007] 00002b36: POP                            // SRCID43: (20857-20931)
[007] 00002b37: POP                            // SRCID43: (20812-20941)
[007] 00002b38: PUSH1 0x80                     // SRCID43: (20980-20983)
[007] 00002b3a: PUSH2 0x2b45                   // SRCID43: (21007-21070)
[007] 00002b3d: DUP11                          // SRCID43: (21062-21069)
[007] 00002b3e: DUP3                           // SRCID43: (21053-21059)
[007] 00002b3f: DUP12                          // SRCID43: (21042-21051)
[007] 00002b40: ADD                            // SRCID43: (21038-21060)
[007] 00002b41: PUSH2 0x2a83                   // SRCID43: (21007-21070)
[007] 00002b44: JUMP                           // SRCID43: (21007-21070)
[007] 00002b45: JUMPDEST                       // SRCID43: (21007-21070)
[007] 00002b46: SWAP4                          // SRCID43: (20997-21070)
[007] 00002b47: POP                            // SRCID43: (20997-21070)
[007] 00002b48: POP                            // SRCID43: (20951-21080)
[007] 00002b49: PUSH1 0xa0                     // SRCID43: (21119-21122)
[007] 00002b4b: PUSH2 0x2b56                   // SRCID43: (21146-21209)
[007] 00002b4e: DUP11                          // SRCID43: (21201-21208)
[007] 00002b4f: DUP3                           // SRCID43: (21192-21198)
[007] 00002b50: DUP12                          // SRCID43: (21181-21190)
[007] 00002b51: ADD                            // SRCID43: (21177-21199)
[007] 00002b52: PUSH2 0x2abf                   // SRCID43: (21146-21209)
[007] 00002b55: JUMP                           // SRCID43: (21146-21209)
[007] 00002b56: JUMPDEST                       // SRCID43: (21146-21209)
[007] 00002b57: SWAP3                          // SRCID43: (21136-21209)
[007] 00002b58: POP                            // SRCID43: (21136-21209)
[007] 00002b59: POP                            // SRCID43: (21090-21219)
[007] 00002b5a: PUSH1 0xc0                     // SRCID43: (21258-21261)
[007] 00002b5c: PUSH2 0x2b67                   // SRCID43: (21285-21349)
[007] 00002b5f: DUP11                          // SRCID43: (21341-21348)
[007] 00002b60: DUP3                           // SRCID43: (21332-21338)
[007] 00002b61: DUP12                          // SRCID43: (21321-21330)
[007] 00002b62: ADD                            // SRCID43: (21317-21339)
[007] 00002b63: PUSH2 0x2a0d                   // SRCID43: (21285-21349)
[007] 00002b66: JUMP                           // SRCID43: (21285-21349)
[007] 00002b67: JUMPDEST                       // SRCID43: (21285-21349)
[007] 00002b68: SWAP2                          // SRCID43: (21275-21349)
[007] 00002b69: POP                            // SRCID43: (21275-21349)
[007] 00002b6a: POP                            // SRCID43: (21229-21359)
[007] 00002b6b: SWAP3                          // SRCID43: (20079-21366)
[007] 00002b6c: SWAP6                          // SRCID43: (20079-21366)
[007] 00002b6d: SWAP9                          // SRCID43: (20079-21366)
[007] 00002b6e: SWAP2                          // SRCID43: (20079-21366)
[007] 00002b6f: SWAP5                          // SRCID43: (20079-21366)
[007] 00002b70: SWAP8                          // SRCID43: (20079-21366)
[007] 00002b71: POP                            // SRCID43: (20079-21366)
[007] 00002b72: SWAP3                          // SRCID43: (20079-21366)
[007] 00002b73: SWAP6                          // SRCID43: (20079-21366)
[007] 00002b74: POP                            // SRCID43: (20079-21366)
[007] 00002b75: JUMP                           // SRCID43: (20079-21366)
[007] 00002b76: JUMPDEST                       // SRCID43: (21372-21704)
[007] 00002b77: PUSH1 0x0                      // SRCID43: (21493-21497)
[007] 00002b79: PUSH1 0x40                     // SRCID43: (21531-21533)
[007] 00002b7b: DUP3                           // SRCID43: (21520-21529)
[007] 00002b7c: ADD                            // SRCID43: (21516-21534)
[007] 00002b7d: SWAP1                          // SRCID43: (21508-21534)
[007] 00002b7e: POP                            // SRCID43: (21508-21534)
[007] 00002b7f: PUSH2 0x2b8b                   // SRCID43: (21544-21615)
[007] 00002b82: PUSH1 0x0                      // SRCID43: (21612-21613)
[007] 00002b84: DUP4                           // SRCID43: (21601-21610)
[007] 00002b85: ADD                            // SRCID43: (21597-21614)
[007] 00002b86: DUP6                           // SRCID43: (21588-21594)
[007] 00002b87: PUSH2 0x25b3                   // SRCID43: (21544-21615)
[007] 00002b8a: JUMP                           // SRCID43: (21544-21615)
[007] 00002b8b: JUMPDEST                       // SRCID43: (21544-21615)
[007] 00002b8c: PUSH2 0x2b98                   // SRCID43: (21625-21697)
[007] 00002b8f: PUSH1 0x20                     // SRCID43: (21693-21695)
[007] 00002b91: DUP4                           // SRCID43: (21682-21691)
[007] 00002b92: ADD                            // SRCID43: (21678-21696)
[007] 00002b93: DUP5                           // SRCID43: (21669-21675)
[007] 00002b94: PUSH2 0x27f2                   // SRCID43: (21625-21697)
[007] 00002b97: JUMP                           // SRCID43: (21625-21697)
[007] 00002b98: JUMPDEST                       // SRCID43: (21625-21697)
[007] 00002b99: SWAP4                          // SRCID43: (21372-21704)
[007] 00002b9a: SWAP3                          // SRCID43: (21372-21704)
[007] 00002b9b: POP                            // SRCID43: (21372-21704)
[007] 00002b9c: POP                            // SRCID43: (21372-21704)
[007] 00002b9d: POP                            // SRCID43: (21372-21704)
[007] 00002b9e: JUMP                           // SRCID43: (21372-21704)
      00002b9f: JUMPDEST                       // SRCID43: (21710-21890)
      00002ba0: PUSH32 0x4e487b7100000000000000000000000000000000000000000000000000000000 // SRCID43: (21758-21835)
      00002bc1: PUSH1 0x0                      // SRCID43: (21755-21756)
      00002bc3: MSTORE                         // SRCID43: (21748-21836)
      00002bc4: PUSH1 0x21                     // SRCID43: (21855-21859)
      00002bc6: PUSH1 0x4                      // SRCID43: (21852-21853)
      00002bc8: MSTORE                         // SRCID43: (21845-21860)
      00002bc9: PUSH1 0x24                     // SRCID43: (21879-21883)
      00002bcb: PUSH1 0x0                      // SRCID43: (21876-21877)
      00002bcd: REVERT                         // SRCID43: (21869-21884)
[001] 00002bce: JUMPDEST                       // SRCID43: (21896-22012)
[001] 00002bcf: PUSH1 0x2                      // SRCID43: (21986-21987)
[001] 00002bd1: DUP2                           // SRCID43: (21979-21984)
[001] 00002bd2: LT                             // SRCID43: (21976-21988)
[001] 00002bd3: PUSH2 0x2bdb                   // SRCID43: (21966-22006)
[001] 00002bd6: JUMPI                          // SRCID43: (21966-22006)
      00002bd7: PUSH1 0x0                      // SRCID43: (22002-22003)
      00002bd9: DUP1                           // SRCID43: (21999-22000)
      00002bda: REVERT                         // SRCID43: (21992-22004)
[001] 00002bdb: JUMPDEST                       // SRCID43: (21966-22006)
[001] 00002bdc: POP                            // SRCID43: (21896-22012)
[001] 00002bdd: JUMP                           // SRCID43: (21896-22012)
[001] 00002bde: JUMPDEST                       // SRCID43: (22018-22195)
[001] 00002bdf: PUSH1 0x0                      // SRCID43: (22092-22097)
[001] 00002be1: DUP2                           // SRCID43: (22123-22129)
[001] 00002be2: MLOAD                          // SRCID43: (22117-22130)
[001] 00002be3: SWAP1                          // SRCID43: (22108-22130)
[001] 00002be4: POP                            // SRCID43: (22108-22130)
[001] 00002be5: PUSH2 0x2bed                   // SRCID43: (22139-22189)
[001] 00002be8: DUP2                           // SRCID43: (22183-22188)
[001] 00002be9: PUSH2 0x2bce                   // SRCID43: (22139-22189)
[001] 00002bec: JUMP                           // SRCID43: (22139-22189)
[001] 00002bed: JUMPDEST                       // SRCID43: (22139-22189)
[001] 00002bee: SWAP3                          // SRCID43: (22018-22195)
[001] 00002bef: SWAP2                          // SRCID43: (22018-22195)
[001] 00002bf0: POP                            // SRCID43: (22018-22195)
[001] 00002bf1: POP                            // SRCID43: (22018-22195)
[001] 00002bf2: JUMP                           // SRCID43: (22018-22195)
[001] 00002bf3: JUMPDEST                       // SRCID43: (22201-22586)
[001] 00002bf4: PUSH1 0x0                      // SRCID43: (22288-22294)
[001] 00002bf6: PUSH1 0x20                     // SRCID43: (22337-22339)
[001] 00002bf8: DUP3                           // SRCID43: (22325-22334)
[001] 00002bf9: DUP5                           // SRCID43: (22316-22323)
[001] 00002bfa: SUB                            // SRCID43: (22312-22335)
[001] 00002bfb: SLT                            // SRCID43: (22308-22340)
[001] 00002bfc: ISZERO                         // SRCID43: (22305-22424)
[001] 00002bfd: PUSH2 0x2c09                   // SRCID43: (22305-22424)
[001] 00002c00: JUMPI                          // SRCID43: (22305-22424)
      00002c01: PUSH2 0x2c08                   // SRCID43: (22343-22422)
      00002c04: PUSH2 0x2904                   // SRCID43: (22343-22422)
      00002c07: JUMP                           // SRCID43: (22343-22422)
      00002c08: JUMPDEST                       // SRCID43: (22343-22422)
[001] 00002c09: JUMPDEST                       // SRCID43: (22305-22424)
[001] 00002c0a: PUSH1 0x0                      // SRCID43: (22463-22464)
[001] 00002c0c: PUSH2 0x2c17                   // SRCID43: (22488-22569)
[001] 00002c0f: DUP5                           // SRCID43: (22561-22568)
[001] 00002c10: DUP3                           // SRCID43: (22552-22558)
[001] 00002c11: DUP6                           // SRCID43: (22541-22550)
[001] 00002c12: ADD                            // SRCID43: (22537-22559)
[001] 00002c13: PUSH2 0x2bde                   // SRCID43: (22488-22569)
[001] 00002c16: JUMP                           // SRCID43: (22488-22569)
[001] 00002c17: JUMPDEST                       // SRCID43: (22488-22569)
[001] 00002c18: SWAP2                          // SRCID43: (22478-22569)
[001] 00002c19: POP                            // SRCID43: (22478-22569)
[001] 00002c1a: POP                            // SRCID43: (22434-22579)
[001] 00002c1b: SWAP3                          // SRCID43: (22201-22586)
[001] 00002c1c: SWAP2                          // SRCID43: (22201-22586)
[001] 00002c1d: POP                            // SRCID43: (22201-22586)
[001] 00002c1e: POP                            // SRCID43: (22201-22586)
[001] 00002c1f: JUMP                           // SRCID43: (22201-22586)
      00002c20: JUMPDEST                       // SRCID43: (22592-22772)
      00002c21: PUSH32 0x4e487b7100000000000000000000000000000000000000000000000000000000 // SRCID43: (22640-22717)
      00002c42: PUSH1 0x0                      // SRCID43: (22637-22638)
      00002c44: MSTORE                         // SRCID43: (22630-22718)
      00002c45: PUSH1 0x1                      // SRCID43: (22737-22741)
      00002c47: PUSH1 0x4                      // SRCID43: (22734-22735)
      00002c49: MSTORE                         // SRCID43: (22727-22742)
      00002c4a: PUSH1 0x24                     // SRCID43: (22761-22765)
      00002c4c: PUSH1 0x0                      // SRCID43: (22758-22759)
      00002c4e: REVERT                         // SRCID43: (22751-22766)
      00002c4f: JUMPDEST                       // SRCID43: (22778-22958)
      00002c50: PUSH32 0x4e487b7100000000000000000000000000000000000000000000000000000000 // SRCID43: (22826-22903)
      00002c71: PUSH1 0x0                      // SRCID43: (22823-22824)
      00002c73: MSTORE                         // SRCID43: (22816-22904)
      00002c74: PUSH1 0x22                     // SRCID43: (22923-22927)
      00002c76: PUSH1 0x4                      // SRCID43: (22920-22921)
      00002c78: MSTORE                         // SRCID43: (22913-22928)
      00002c79: PUSH1 0x24                     // SRCID43: (22947-22951)
      00002c7b: PUSH1 0x0                      // SRCID43: (22944-22945)
      00002c7d: REVERT                         // SRCID43: (22937-22952)
      00002c7e: JUMPDEST                       // SRCID43: (22964-23284)
      00002c7f: PUSH1 0x0                      // SRCID43: (23008-23014)
      00002c81: PUSH1 0x2                      // SRCID43: (23045-23046)
      00002c83: DUP3                           // SRCID43: (23039-23043)
      00002c84: DIV                            // SRCID43: (23035-23047)
      00002c85: SWAP1                          // SRCID43: (23025-23047)
      00002c86: POP                            // SRCID43: (23025-23047)
      00002c87: PUSH1 0x1                      // SRCID43: (23092-23093)
      00002c89: DUP3                           // SRCID43: (23086-23090)
      00002c8a: AND                            // SRCID43: (23082-23094)
      00002c8b: DUP1                           // SRCID43: (23113-23131)
      00002c8c: PUSH2 0x2c96                   // SRCID43: (23103-23184)
      00002c8f: JUMPI                          // SRCID43: (23103-23184)
      00002c90: PUSH1 0x7f                     // SRCID43: (23169-23173)
      00002c92: DUP3                           // SRCID43: (23161-23167)
      00002c93: AND                            // SRCID43: (23157-23174)
      00002c94: SWAP2                          // SRCID43: (23147-23174)
      00002c95: POP                            // SRCID43: (23147-23174)
      00002c96: JUMPDEST                       // SRCID43: (23103-23184)
      00002c97: PUSH1 0x20                     // SRCID43: (23231-23233)
      00002c99: DUP3                           // SRCID43: (23223-23229)
      00002c9a: LT                             // SRCID43: (23220-23234)
      00002c9b: DUP2                           // SRCID43: (23200-23218)
      00002c9c: SUB                            // SRCID43: (23197-23235)
      00002c9d: PUSH2 0x2ca9                   // SRCID43: (23194-23278)
      00002ca0: JUMPI                          // SRCID43: (23194-23278)
      00002ca1: PUSH2 0x2ca8                   // SRCID43: (23250-23268)
      00002ca4: PUSH2 0x2c4f                   // SRCID43: (23250-23268)
      00002ca7: JUMP                           // SRCID43: (23250-23268)
      00002ca8: JUMPDEST                       // SRCID43: (23250-23268)
      00002ca9: JUMPDEST                       // SRCID43: (23194-23278)
      00002caa: POP                            // SRCID43: (23015-23284)
      00002cab: SWAP2                          // SRCID43: (22964-23284)
      00002cac: SWAP1                          // SRCID43: (22964-23284)
      00002cad: POP                            // SRCID43: (22964-23284)
      00002cae: JUMP                           // SRCID43: (22964-23284)
      00002caf: JUMPDEST                       // SRCID43: (23290-23470)
      00002cb0: PUSH32 0x4e487b7100000000000000000000000000000000000000000000000000000000 // SRCID43: (23338-23415)
      00002cd1: PUSH1 0x0                      // SRCID43: (23335-23336)
      00002cd3: MSTORE                         // SRCID43: (23328-23416)
      00002cd4: PUSH1 0x11                     // SRCID43: (23435-23439)
      00002cd6: PUSH1 0x4                      // SRCID43: (23432-23433)
      00002cd8: MSTORE                         // SRCID43: (23425-23440)
      00002cd9: PUSH1 0x24                     // SRCID43: (23459-23463)
      00002cdb: PUSH1 0x0                      // SRCID43: (23456-23457)
      00002cdd: REVERT                         // SRCID43: (23449-23464)
[009] 00002cde: JUMPDEST                       // SRCID43: (23476-23667)
[009] 00002cdf: PUSH1 0x0                      // SRCID43: (23516-23519)
[009] 00002ce1: PUSH2 0x2ce9                   // SRCID43: (23535-23555)
[009] 00002ce4: DUP3                           // SRCID43: (23553-23554)
[009] 00002ce5: PUSH2 0x27e8                   // SRCID43: (23535-23555)
[009] 00002ce8: JUMP                           // SRCID43: (23535-23555)
[009] 00002ce9: JUMPDEST                       // SRCID43: (23535-23555)
[009] 00002cea: SWAP2                          // SRCID43: (23530-23555)
[009] 00002ceb: POP                            // SRCID43: (23530-23555)
[009] 00002cec: PUSH2 0x2cf4                   // SRCID43: (23569-23589)
[009] 00002cef: DUP4                           // SRCID43: (23587-23588)
[009] 00002cf0: PUSH2 0x27e8                   // SRCID43: (23569-23589)
[009] 00002cf3: JUMP                           // SRCID43: (23569-23589)
[009] 00002cf4: JUMPDEST                       // SRCID43: (23569-23589)
[009] 00002cf5: SWAP3                          // SRCID43: (23564-23589)
[009] 00002cf6: POP                            // SRCID43: (23564-23589)
[009] 00002cf7: DUP3                           // SRCID43: (23612-23613)
[009] 00002cf8: DUP3                           // SRCID43: (23609-23610)
[009] 00002cf9: ADD                            // SRCID43: (23605-23614)
[009] 00002cfa: SWAP1                          // SRCID43: (23598-23614)
[009] 00002cfb: POP                            // SRCID43: (23598-23614)
[009] 00002cfc: DUP1                           // SRCID43: (23633-23636)
[009] 00002cfd: DUP3                           // SRCID43: (23630-23631)
[009] 00002cfe: GT                             // SRCID43: (23627-23637)
[009] 00002cff: ISZERO                         // SRCID43: (23624-23660)
[009] 00002d00: PUSH2 0x2d0c                   // SRCID43: (23624-23660)
[009] 00002d03: JUMPI                          // SRCID43: (23624-23660)
      00002d04: PUSH2 0x2d0b                   // SRCID43: (23640-23658)
      00002d07: PUSH2 0x2caf                   // SRCID43: (23640-23658)
      00002d0a: JUMP                           // SRCID43: (23640-23658)
      00002d0b: JUMPDEST                       // SRCID43: (23640-23658)
[009] 00002d0c: JUMPDEST                       // SRCID43: (23624-23660)
[009] 00002d0d: SWAP3                          // SRCID43: (23476-23667)
[009] 00002d0e: SWAP2                          // SRCID43: (23476-23667)
[009] 00002d0f: POP                            // SRCID43: (23476-23667)
[009] 00002d10: POP                            // SRCID43: (23476-23667)
[009] 00002d11: JUMP                           // SRCID43: (23476-23667)
[004] 00002d12: JUMPDEST                       // SRCID43: (23673-23841)
[004] 00002d13: PUSH1 0x0                      // SRCID43: (23756-23767)
[004] 00002d15: DUP3                           // SRCID43: (23790-23796)
[004] 00002d16: DUP3                           // SRCID43: (23785-23788)
[004] 00002d17: MSTORE                         // SRCID43: (23778-23797)
[004] 00002d18: PUSH1 0x20                     // SRCID43: (23830-23834)
[004] 00002d1a: DUP3                           // SRCID43: (23825-23828)
[004] 00002d1b: ADD                            // SRCID43: (23821-23835)
[004] 00002d1c: SWAP1                          // SRCID43: (23806-23835)
[004] 00002d1d: POP                            // SRCID43: (23806-23835)
[004] 00002d1e: SWAP3                          // SRCID43: (23673-23841)
[004] 00002d1f: SWAP2                          // SRCID43: (23673-23841)
[004] 00002d20: POP                            // SRCID43: (23673-23841)
[004] 00002d21: POP                            // SRCID43: (23673-23841)
[004] 00002d22: JUMP                           // SRCID43: (23673-23841)
[004] 00002d23: JUMPDEST                       // SRCID43: (23847-23961)
[004] 00002d24: POP                            // SRCID43: (23847-23961)
[004] 00002d25: JUMP                           // SRCID43: (23847-23961)
[004] 00002d26: JUMPDEST                       // SRCID43: (23967-24329)
[004] 00002d27: PUSH1 0x0                      // SRCID43: (24108-24111)
[004] 00002d29: PUSH2 0x2d33                   // SRCID43: (24129-24194)
[004] 00002d2c: PUSH1 0x0                      // SRCID43: (24192-24193)
[004] 00002d2e: DUP4                           // SRCID43: (24187-24190)
[004] 00002d2f: PUSH2 0x2d12                   // SRCID43: (24129-24194)
[004] 00002d32: JUMP                           // SRCID43: (24129-24194)
[004] 00002d33: JUMPDEST                       // SRCID43: (24129-24194)
[004] 00002d34: SWAP2                          // SRCID43: (24122-24194)
[004] 00002d35: POP                            // SRCID43: (24122-24194)
[004] 00002d36: PUSH2 0x2d3e                   // SRCID43: (24203-24296)
[004] 00002d39: DUP3                           // SRCID43: (24292-24295)
[004] 00002d3a: PUSH2 0x2d23                   // SRCID43: (24203-24296)
[004] 00002d3d: JUMP                           // SRCID43: (24203-24296)
[004] 00002d3e: JUMPDEST                       // SRCID43: (24203-24296)
[004] 00002d3f: PUSH1 0x0                      // SRCID43: (24321-24322)
[004] 00002d41: DUP3                           // SRCID43: (24316-24319)
[004] 00002d42: ADD                            // SRCID43: (24312-24323)
[004] 00002d43: SWAP1                          // SRCID43: (24305-24323)
[004] 00002d44: POP                            // SRCID43: (24305-24323)
[004] 00002d45: SWAP2                          // SRCID43: (23967-24329)
[004] 00002d46: SWAP1                          // SRCID43: (23967-24329)
[004] 00002d47: POP                            // SRCID43: (23967-24329)
[004] 00002d48: JUMP                           // SRCID43: (23967-24329)
[004] 00002d49: JUMPDEST                       // SRCID43: (24335-24752)
[004] 00002d4a: PUSH1 0x0                      // SRCID43: (24500-24504)
[004] 00002d4c: PUSH1 0x20                     // SRCID43: (24538-24540)
[004] 00002d4e: DUP3                           // SRCID43: (24527-24536)
[004] 00002d4f: ADD                            // SRCID43: (24523-24541)
[004] 00002d50: SWAP1                          // SRCID43: (24515-24541)
[004] 00002d51: POP                            // SRCID43: (24515-24541)
[004] 00002d52: DUP2                           // SRCID43: (24587-24596)
[004] 00002d53: DUP2                           // SRCID43: (24581-24585)
[004] 00002d54: SUB                            // SRCID43: (24577-24597)
[004] 00002d55: PUSH1 0x0                      // SRCID43: (24573-24574)
[004] 00002d57: DUP4                           // SRCID43: (24562-24571)
[004] 00002d58: ADD                            // SRCID43: (24558-24575)
[004] 00002d59: MSTORE                         // SRCID43: (24551-24598)
[004] 00002d5a: PUSH2 0x2d62                   // SRCID43: (24615-24745)
[004] 00002d5d: DUP2                           // SRCID43: (24740-24744)
[004] 00002d5e: PUSH2 0x2d26                   // SRCID43: (24615-24745)
[004] 00002d61: JUMP                           // SRCID43: (24615-24745)
[004] 00002d62: JUMPDEST                       // SRCID43: (24615-24745)
[004] 00002d63: SWAP1                          // SRCID43: (24607-24745)
[004] 00002d64: POP                            // SRCID43: (24607-24745)
[004] 00002d65: SWAP2                          // SRCID43: (24335-24752)
[004] 00002d66: SWAP1                          // SRCID43: (24335-24752)
[004] 00002d67: POP                            // SRCID43: (24335-24752)
[004] 00002d68: JUMP                           // SRCID43: (24335-24752)
[002] 00002d69: JUMPDEST                       // SRCID43: (24758-24873)
[002] 00002d6a: PUSH2 0x2d72                   // SRCID43: (24843-24866)
[002] 00002d6d: DUP2                           // SRCID43: (24860-24865)
[002] 00002d6e: PUSH2 0x2635                   // SRCID43: (24843-24866)
[002] 00002d71: JUMP                           // SRCID43: (24843-24866)
[002] 00002d72: JUMPDEST                       // SRCID43: (24843-24866)
[002] 00002d73: DUP3                           // SRCID43: (24838-24841)
[002] 00002d74: MSTORE                         // SRCID43: (24831-24867)
[002] 00002d75: POP                            // SRCID43: (24758-24873)
[002] 00002d76: POP                            // SRCID43: (24758-24873)
[002] 00002d77: JUMP                           // SRCID43: (24758-24873)
[002] 00002d78: JUMPDEST                       // SRCID43: (24879-25097)
[002] 00002d79: PUSH1 0x0                      // SRCID43: (24970-24974)
[002] 00002d7b: PUSH1 0x20                     // SRCID43: (25008-25010)
[002] 00002d7d: DUP3                           // SRCID43: (24997-25006)
[002] 00002d7e: ADD                            // SRCID43: (24993-25011)
[002] 00002d7f: SWAP1                          // SRCID43: (24985-25011)
[002] 00002d80: POP                            // SRCID43: (24985-25011)
[002] 00002d81: PUSH2 0x2d8d                   // SRCID43: (25021-25090)
[002] 00002d84: PUSH1 0x0                      // SRCID43: (25087-25088)
[002] 00002d86: DUP4                           // SRCID43: (25076-25085)
[002] 00002d87: ADD                            // SRCID43: (25072-25089)
[002] 00002d88: DUP5                           // SRCID43: (25063-25069)
[002] 00002d89: PUSH2 0x2d69                   // SRCID43: (25021-25090)
[002] 00002d8c: JUMP                           // SRCID43: (25021-25090)
[002] 00002d8d: JUMPDEST                       // SRCID43: (25021-25090)
[002] 00002d8e: SWAP3                          // SRCID43: (24879-25097)
[002] 00002d8f: SWAP2                          // SRCID43: (24879-25097)
[002] 00002d90: POP                            // SRCID43: (24879-25097)
[002] 00002d91: POP                            // SRCID43: (24879-25097)
[002] 00002d92: JUMP                           // SRCID43: (24879-25097)
[001] 00002d93: JUMPDEST                       // SRCID43: (25103-25188)
[001] 00002d94: PUSH1 0x0                      // SRCID43: (25148-25155)
[001] 00002d96: DUP2                           // SRCID43: (25177-25182)
[001] 00002d97: SWAP1                          // SRCID43: (25166-25182)
[001] 00002d98: POP                            // SRCID43: (25166-25182)
[001] 00002d99: SWAP2                          // SRCID43: (25103-25188)
[001] 00002d9a: SWAP1                          // SRCID43: (25103-25188)
[001] 00002d9b: POP                            // SRCID43: (25103-25188)
[001] 00002d9c: JUMP                           // SRCID43: (25103-25188)
[001] 00002d9d: JUMPDEST                       // SRCID43: (25194-25254)
[001] 00002d9e: PUSH1 0x0                      // SRCID43: (25222-25225)
[001] 00002da0: DUP2                           // SRCID43: (25243-25248)
[001] 00002da1: SWAP1                          // SRCID43: (25236-25248)
[001] 00002da2: POP                            // SRCID43: (25236-25248)
[001] 00002da3: SWAP2                          // SRCID43: (25194-25254)
[001] 00002da4: SWAP1                          // SRCID43: (25194-25254)
[001] 00002da5: POP                            // SRCID43: (25194-25254)
[001] 00002da6: JUMP                           // SRCID43: (25194-25254)
[001] 00002da7: JUMPDEST                       // SRCID43: (25260-25418)
[001] 00002da8: PUSH1 0x0                      // SRCID43: (25318-25327)
[001] 00002daa: PUSH2 0x2dc2                   // SRCID43: (25351-25412)
[001] 00002dad: PUSH2 0x2dbd                   // SRCID43: (25369-25411)
[001] 00002db0: PUSH2 0x2db8                   // SRCID43: (25378-25410)
[001] 00002db3: DUP5                           // SRCID43: (25404-25409)
[001] 00002db4: PUSH2 0x2d93                   // SRCID43: (25378-25410)
[001] 00002db7: JUMP                           // SRCID43: (25378-25410)
[001] 00002db8: JUMPDEST                       // SRCID43: (25378-25410)
[001] 00002db9: PUSH2 0x2d9d                   // SRCID43: (25369-25411)
[001] 00002dbc: JUMP                           // SRCID43: (25369-25411)
[001] 00002dbd: JUMPDEST                       // SRCID43: (25369-25411)
[001] 00002dbe: PUSH2 0x27e8                   // SRCID43: (25351-25412)
[001] 00002dc1: JUMP                           // SRCID43: (25351-25412)
[001] 00002dc2: JUMPDEST                       // SRCID43: (25351-25412)
[001] 00002dc3: SWAP1                          // SRCID43: (25338-25412)
[001] 00002dc4: POP                            // SRCID43: (25338-25412)
[001] 00002dc5: SWAP2                          // SRCID43: (25260-25418)
[001] 00002dc6: SWAP1                          // SRCID43: (25260-25418)
[001] 00002dc7: POP                            // SRCID43: (25260-25418)
[001] 00002dc8: JUMP                           // SRCID43: (25260-25418)
[001] 00002dc9: JUMPDEST                       // SRCID43: (25424-25571)
[001] 00002dca: PUSH2 0x2dd2                   // SRCID43: (25519-25564)
[001] 00002dcd: DUP2                           // SRCID43: (25558-25563)
[001] 00002dce: PUSH2 0x2da7                   // SRCID43: (25519-25564)
[001] 00002dd1: JUMP                           // SRCID43: (25519-25564)
[001] 00002dd2: JUMPDEST                       // SRCID43: (25519-25564)
[001] 00002dd3: DUP3                           // SRCID43: (25514-25517)
[001] 00002dd4: MSTORE                         // SRCID43: (25507-25565)
[001] 00002dd5: POP                            // SRCID43: (25424-25571)
[001] 00002dd6: POP                            // SRCID43: (25424-25571)
[001] 00002dd7: JUMP                           // SRCID43: (25424-25571)
[001] 00002dd8: JUMPDEST                       // SRCID43: (25577-25815)
[001] 00002dd9: PUSH1 0x0                      // SRCID43: (25678-25682)
[001] 00002ddb: PUSH1 0x20                     // SRCID43: (25716-25718)
[001] 00002ddd: DUP3                           // SRCID43: (25705-25714)
[001] 00002dde: ADD                            // SRCID43: (25701-25719)
[001] 00002ddf: SWAP1                          // SRCID43: (25693-25719)
[001] 00002de0: POP                            // SRCID43: (25693-25719)
[001] 00002de1: PUSH2 0x2ded                   // SRCID43: (25729-25808)
[001] 00002de4: PUSH1 0x0                      // SRCID43: (25805-25806)
[001] 00002de6: DUP4                           // SRCID43: (25794-25803)
[001] 00002de7: ADD                            // SRCID43: (25790-25807)
[001] 00002de8: DUP5                           // SRCID43: (25781-25787)
[001] 00002de9: PUSH2 0x2dc9                   // SRCID43: (25729-25808)
[001] 00002dec: JUMP                           // SRCID43: (25729-25808)
[001] 00002ded: JUMPDEST                       // SRCID43: (25729-25808)
[001] 00002dee: SWAP3                          // SRCID43: (25577-25815)
[001] 00002def: SWAP2                          // SRCID43: (25577-25815)
[001] 00002df0: POP                            // SRCID43: (25577-25815)
[001] 00002df1: POP                            // SRCID43: (25577-25815)
[001] 00002df2: JUMP                           // SRCID43: (25577-25815)
[001] 00002df3: JUMPDEST                       // SRCID43: (25821-26172)
[001] 00002df4: PUSH1 0x0                      // SRCID43: (25891-25897)
[001] 00002df6: PUSH1 0x20                     // SRCID43: (25940-25942)
[001] 00002df8: DUP3                           // SRCID43: (25928-25937)
[001] 00002df9: DUP5                           // SRCID43: (25919-25926)
[001] 00002dfa: SUB                            // SRCID43: (25915-25938)
[001] 00002dfb: SLT                            // SRCID43: (25911-25943)
[001] 00002dfc: ISZERO                         // SRCID43: (25908-26027)
[001] 00002dfd: PUSH2 0x2e09                   // SRCID43: (25908-26027)
[001] 00002e00: JUMPI                          // SRCID43: (25908-26027)
      00002e01: PUSH2 0x2e08                   // SRCID43: (25946-26025)
      00002e04: PUSH2 0x2904                   // SRCID43: (25946-26025)
      00002e07: JUMP                           // SRCID43: (25946-26025)
      00002e08: JUMPDEST                       // SRCID43: (25946-26025)
[001] 00002e09: JUMPDEST                       // SRCID43: (25908-26027)
[001] 00002e0a: PUSH1 0x0                      // SRCID43: (26066-26067)
[001] 00002e0c: PUSH2 0x2e17                   // SRCID43: (26091-26155)
[001] 00002e0f: DUP5                           // SRCID43: (26147-26154)
[001] 00002e10: DUP3                           // SRCID43: (26138-26144)
[001] 00002e11: DUP6                           // SRCID43: (26127-26136)
[001] 00002e12: ADD                            // SRCID43: (26123-26145)
[001] 00002e13: PUSH2 0x2a0d                   // SRCID43: (26091-26155)
[001] 00002e16: JUMP                           // SRCID43: (26091-26155)
[001] 00002e17: JUMPDEST                       // SRCID43: (26091-26155)
[001] 00002e18: SWAP2                          // SRCID43: (26081-26155)
[001] 00002e19: POP                            // SRCID43: (26081-26155)
[001] 00002e1a: POP                            // SRCID43: (26037-26165)
[001] 00002e1b: SWAP3                          // SRCID43: (25821-26172)
[001] 00002e1c: SWAP2                          // SRCID43: (25821-26172)
[001] 00002e1d: POP                            // SRCID43: (25821-26172)
[001] 00002e1e: POP                            // SRCID43: (25821-26172)
[001] 00002e1f: JUMP                           // SRCID43: (25821-26172)
[002] 00002e20: JUMPDEST                       // SRCID43: (26178-26294)
[002] 00002e21: PUSH2 0x2e29                   // SRCID43: (26248-26269)
[002] 00002e24: DUP2                           // SRCID43: (26263-26268)
[002] 00002e25: PUSH2 0x28c4                   // SRCID43: (26248-26269)
[002] 00002e28: JUMP                           // SRCID43: (26248-26269)
[002] 00002e29: JUMPDEST                       // SRCID43: (26248-26269)
[002] 00002e2a: DUP2                           // SRCID43: (26241-26246)
[002] 00002e2b: EQ                             // SRCID43: (26238-26270)
[002] 00002e2c: PUSH2 0x2e34                   // SRCID43: (26228-26288)
[002] 00002e2f: JUMPI                          // SRCID43: (26228-26288)
      00002e30: PUSH1 0x0                      // SRCID43: (26284-26285)
      00002e32: DUP1                           // SRCID43: (26281-26282)
      00002e33: REVERT                         // SRCID43: (26274-26286)
[002] 00002e34: JUMPDEST                       // SRCID43: (26228-26288)
[002] 00002e35: POP                            // SRCID43: (26178-26294)
[002] 00002e36: JUMP                           // SRCID43: (26178-26294)
[002] 00002e37: JUMPDEST                       // SRCID43: (26300-26437)
[002] 00002e38: PUSH1 0x0                      // SRCID43: (26354-26359)
[002] 00002e3a: DUP2                           // SRCID43: (26385-26391)
[002] 00002e3b: MLOAD                          // SRCID43: (26379-26392)
[002] 00002e3c: SWAP1                          // SRCID43: (26370-26392)
[002] 00002e3d: POP                            // SRCID43: (26370-26392)
[002] 00002e3e: PUSH2 0x2e46                   // SRCID43: (26401-26431)
[002] 00002e41: DUP2                           // SRCID43: (26425-26430)
[002] 00002e42: PUSH2 0x2e20                   // SRCID43: (26401-26431)
[002] 00002e45: JUMP                           // SRCID43: (26401-26431)
[002] 00002e46: JUMPDEST                       // SRCID43: (26401-26431)
[002] 00002e47: SWAP3                          // SRCID43: (26300-26437)
[002] 00002e48: SWAP2                          // SRCID43: (26300-26437)
[002] 00002e49: POP                            // SRCID43: (26300-26437)
[002] 00002e4a: POP                            // SRCID43: (26300-26437)
[002] 00002e4b: JUMP                           // SRCID43: (26300-26437)
      00002e4c: JUMPDEST                       // SRCID43: (26443-26560)
      00002e4d: PUSH1 0x0                      // SRCID43: (26552-26553)
      00002e4f: DUP1                           // SRCID43: (26549-26550)
      00002e50: REVERT                         // SRCID43: (26542-26554)
      00002e51: JUMPDEST                       // SRCID43: (26566-26683)
      00002e52: PUSH1 0x0                      // SRCID43: (26675-26676)
      00002e54: DUP1                           // SRCID43: (26672-26673)
      00002e55: REVERT                         // SRCID43: (26665-26677)
      00002e56: JUMPDEST                       // SRCID43: (26689-26869)
      00002e57: PUSH32 0x4e487b7100000000000000000000000000000000000000000000000000000000 // SRCID43: (26737-26814)
      00002e78: PUSH1 0x0                      // SRCID43: (26734-26735)
      00002e7a: MSTORE                         // SRCID43: (26727-26815)
      00002e7b: PUSH1 0x41                     // SRCID43: (26834-26838)
      00002e7d: PUSH1 0x4                      // SRCID43: (26831-26832)
      00002e7f: MSTORE                         // SRCID43: (26824-26839)
      00002e80: PUSH1 0x24                     // SRCID43: (26858-26862)
      00002e82: PUSH1 0x0                      // SRCID43: (26855-26856)
      00002e84: REVERT                         // SRCID43: (26848-26863)
[002] 00002e85: JUMPDEST                       // SRCID43: (26875-27156)
[002] 00002e86: PUSH2 0x2e8e                   // SRCID43: (26958-26985)
[002] 00002e89: DUP3                           // SRCID43: (26980-26984)
[002] 00002e8a: PUSH2 0x23de                   // SRCID43: (26958-26985)
[002] 00002e8d: JUMP                           // SRCID43: (26958-26985)
[002] 00002e8e: JUMPDEST                       // SRCID43: (26958-26985)
[002] 00002e8f: DUP2                           // SRCID43: (26950-26956)
[002] 00002e90: ADD                            // SRCID43: (26946-26986)
[002] 00002e91: DUP2                           // SRCID43: (27088-27094)
[002] 00002e92: DUP2                           // SRCID43: (27076-27086)
[002] 00002e93: LT                             // SRCID43: (27073-27095)
[002] 00002e94: PUSH8 0xffffffffffffffff       // SRCID43: (27052-27070)
[002] 00002e9d: DUP3                           // SRCID43: (27040-27050)
[002] 00002e9e: GT                             // SRCID43: (27037-27071)
[002] 00002e9f: OR                             // SRCID43: (27034-27096)
[002] 00002ea0: ISZERO                         // SRCID43: (27031-27119)
[002] 00002ea1: PUSH2 0x2ead                   // SRCID43: (27031-27119)
[002] 00002ea4: JUMPI                          // SRCID43: (27031-27119)
      00002ea5: PUSH2 0x2eac                   // SRCID43: (27099-27117)
      00002ea8: PUSH2 0x2e56                   // SRCID43: (27099-27117)
      00002eab: JUMP                           // SRCID43: (27099-27117)
      00002eac: JUMPDEST                       // SRCID43: (27099-27117)
[002] 00002ead: JUMPDEST                       // SRCID43: (27031-27119)
[002] 00002eae: DUP1                           // SRCID43: (27139-27149)
[002] 00002eaf: PUSH1 0x40                     // SRCID43: (27135-27137)
[002] 00002eb1: MSTORE                         // SRCID43: (27128-27150)
[002] 00002eb2: POP                            // SRCID43: (26918-27156)
[002] 00002eb3: POP                            // SRCID43: (26875-27156)
[002] 00002eb4: POP                            // SRCID43: (26875-27156)
[002] 00002eb5: JUMP                           // SRCID43: (26875-27156)
[002] 00002eb6: JUMPDEST                       // SRCID43: (27162-27291)
[002] 00002eb7: PUSH1 0x0                      // SRCID43: (27196-27202)
[002] 00002eb9: PUSH2 0x2ec0                   // SRCID43: (27223-27243)
[002] 00002ebc: PUSH2 0x28fa                   // SRCID43: (27223-27243)
[002] 00002ebf: JUMP                           // SRCID43: (27223-27243)
[002] 00002ec0: JUMPDEST                       // SRCID43: (27223-27243)
[002] 00002ec1: SWAP1                          // SRCID43: (27213-27243)
[002] 00002ec2: POP                            // SRCID43: (27213-27243)
[002] 00002ec3: PUSH2 0x2ecc                   // SRCID43: (27252-27285)
[002] 00002ec6: DUP3                           // SRCID43: (27280-27284)
[002] 00002ec7: DUP3                           // SRCID43: (27272-27278)
[002] 00002ec8: PUSH2 0x2e85                   // SRCID43: (27252-27285)
[002] 00002ecb: JUMP                           // SRCID43: (27252-27285)
[002] 00002ecc: JUMPDEST                       // SRCID43: (27252-27285)
[002] 00002ecd: SWAP2                          // SRCID43: (27162-27291)
[002] 00002ece: SWAP1                          // SRCID43: (27162-27291)
[002] 00002ecf: POP                            // SRCID43: (27162-27291)
[002] 00002ed0: JUMP                           // SRCID43: (27162-27291)
[002] 00002ed1: JUMPDEST                       // SRCID43: (27297-27604)
[002] 00002ed2: PUSH1 0x0                      // SRCID43: (27358-27362)
[002] 00002ed4: PUSH8 0xffffffffffffffff       // SRCID43: (27448-27466)
[002] 00002edd: DUP3                           // SRCID43: (27440-27446)
[002] 00002ede: GT                             // SRCID43: (27437-27467)
[002] 00002edf: ISZERO                         // SRCID43: (27434-27490)
[002] 00002ee0: PUSH2 0x2eec                   // SRCID43: (27434-27490)
[002] 00002ee3: JUMPI                          // SRCID43: (27434-27490)
      00002ee4: PUSH2 0x2eeb                   // SRCID43: (27470-27488)
      00002ee7: PUSH2 0x2e56                   // SRCID43: (27470-27488)
      00002eea: JUMP                           // SRCID43: (27470-27488)
      00002eeb: JUMPDEST                       // SRCID43: (27470-27488)
[002] 00002eec: JUMPDEST                       // SRCID43: (27434-27490)
[002] 00002eed: PUSH2 0x2ef5                   // SRCID43: (27508-27537)
[002] 00002ef0: DUP3                           // SRCID43: (27530-27536)
[002] 00002ef1: PUSH2 0x23de                   // SRCID43: (27508-27537)
[002] 00002ef4: JUMP                           // SRCID43: (27508-27537)
[002] 00002ef5: JUMPDEST                       // SRCID43: (27508-27537)
[002] 00002ef6: SWAP1                          // SRCID43: (27500-27537)
[002] 00002ef7: POP                            // SRCID43: (27500-27537)
[002] 00002ef8: PUSH1 0x20                     // SRCID43: (27592-27596)
[002] 00002efa: DUP2                           // SRCID43: (27586-27590)
[002] 00002efb: ADD                            // SRCID43: (27582-27597)
[002] 00002efc: SWAP1                          // SRCID43: (27574-27597)
[002] 00002efd: POP                            // SRCID43: (27574-27597)
[002] 00002efe: SWAP2                          // SRCID43: (27297-27604)
[002] 00002eff: SWAP1                          // SRCID43: (27297-27604)
[002] 00002f00: POP                            // SRCID43: (27297-27604)
[002] 00002f01: JUMP                           // SRCID43: (27297-27604)
[002] 00002f02: JUMPDEST                       // SRCID43: (27610-28042)
[002] 00002f03: PUSH1 0x0                      // SRCID43: (27698-27703)
[002] 00002f05: PUSH2 0x2f15                   // SRCID43: (27723-27788)
[002] 00002f08: PUSH2 0x2f10                   // SRCID43: (27739-27787)
[002] 00002f0b: DUP5                           // SRCID43: (27780-27786)
[002] 00002f0c: PUSH2 0x2ed1                   // SRCID43: (27739-27787)
[002] 00002f0f: JUMP                           // SRCID43: (27739-27787)
[002] 00002f10: JUMPDEST                       // SRCID43: (27739-27787)
[002] 00002f11: PUSH2 0x2eb6                   // SRCID43: (27723-27788)
[002] 00002f14: JUMP                           // SRCID43: (27723-27788)
[002] 00002f15: JUMPDEST                       // SRCID43: (27723-27788)
[002] 00002f16: SWAP1                          // SRCID43: (27714-27788)
[002] 00002f17: POP                            // SRCID43: (27714-27788)
[002] 00002f18: DUP3                           // SRCID43: (27811-27817)
[002] 00002f19: DUP2                           // SRCID43: (27804-27809)
[002] 00002f1a: MSTORE                         // SRCID43: (27797-27818)
[002] 00002f1b: PUSH1 0x20                     // SRCID43: (27849-27853)
[002] 00002f1d: DUP2                           // SRCID43: (27842-27847)
[002] 00002f1e: ADD                            // SRCID43: (27838-27854)
[002] 00002f1f: DUP5                           // SRCID43: (27887-27890)
[002] 00002f20: DUP5                           // SRCID43: (27878-27884)
[002] 00002f21: DUP5                           // SRCID43: (27873-27876)
[002] 00002f22: ADD                            // SRCID43: (27869-27885)
[002] 00002f23: GT                             // SRCID43: (27866-27891)
[002] 00002f24: ISZERO                         // SRCID43: (27863-27975)
[002] 00002f25: PUSH2 0x2f31                   // SRCID43: (27863-27975)
[002] 00002f28: JUMPI                          // SRCID43: (27863-27975)
      00002f29: PUSH2 0x2f30                   // SRCID43: (27894-27973)
      00002f2c: PUSH2 0x2e51                   // SRCID43: (27894-27973)
      00002f2f: JUMP                           // SRCID43: (27894-27973)
      00002f30: JUMPDEST                       // SRCID43: (27894-27973)
[002] 00002f31: JUMPDEST                       // SRCID43: (27863-27975)
[002] 00002f32: PUSH2 0x2f3c                   // SRCID43: (27984-28036)
[002] 00002f35: DUP5                           // SRCID43: (28029-28035)
[002] 00002f36: DUP3                           // SRCID43: (28024-28027)
[002] 00002f37: DUP6                           // SRCID43: (28019-28022)
[002] 00002f38: PUSH2 0x23b4                   // SRCID43: (27984-28036)
[002] 00002f3b: JUMP                           // SRCID43: (27984-28036)
[002] 00002f3c: JUMPDEST                       // SRCID43: (27984-28036)
[002] 00002f3d: POP                            // SRCID43: (27704-28042)
[002] 00002f3e: SWAP4                          // SRCID43: (27610-28042)
[002] 00002f3f: SWAP3                          // SRCID43: (27610-28042)
[002] 00002f40: POP                            // SRCID43: (27610-28042)
[002] 00002f41: POP                            // SRCID43: (27610-28042)
[002] 00002f42: POP                            // SRCID43: (27610-28042)
[002] 00002f43: JUMP                           // SRCID43: (27610-28042)
[002] 00002f44: JUMPDEST                       // SRCID43: (28061-28414)
[002] 00002f45: PUSH1 0x0                      // SRCID43: (28127-28132)
[002] 00002f47: DUP3                           // SRCID43: (28176-28179)
[002] 00002f48: PUSH1 0x1f                     // SRCID43: (28169-28173)
[002] 00002f4a: DUP4                           // SRCID43: (28161-28167)
[002] 00002f4b: ADD                            // SRCID43: (28157-28174)
[002] 00002f4c: SLT                            // SRCID43: (28153-28180)
[002] 00002f4d: PUSH2 0x2f59                   // SRCID43: (28143-28265)
[002] 00002f50: JUMPI                          // SRCID43: (28143-28265)
      00002f51: PUSH2 0x2f58                   // SRCID43: (28184-28263)
      00002f54: PUSH2 0x2e4c                   // SRCID43: (28184-28263)
      00002f57: JUMP                           // SRCID43: (28184-28263)
      00002f58: JUMPDEST                       // SRCID43: (28184-28263)
[002] 00002f59: JUMPDEST                       // SRCID43: (28143-28265)
[002] 00002f5a: DUP2                           // SRCID43: (28294-28300)
[002] 00002f5b: MLOAD                          // SRCID43: (28288-28301)
[002] 00002f5c: PUSH2 0x2f69                   // SRCID43: (28319-28408)
[002] 00002f5f: DUP5                           // SRCID43: (28404-28407)
[002] 00002f60: DUP3                           // SRCID43: (28396-28402)
[002] 00002f61: PUSH1 0x20                     // SRCID43: (28389-28393)
[002] 00002f63: DUP7                           // SRCID43: (28381-28387)
[002] 00002f64: ADD                            // SRCID43: (28377-28394)
[002] 00002f65: PUSH2 0x2f02                   // SRCID43: (28319-28408)
[002] 00002f68: JUMP                           // SRCID43: (28319-28408)
[002] 00002f69: JUMPDEST                       // SRCID43: (28319-28408)
[002] 00002f6a: SWAP2                          // SRCID43: (28310-28408)
[002] 00002f6b: POP                            // SRCID43: (28310-28408)
[002] 00002f6c: POP                            // SRCID43: (28133-28414)
[002] 00002f6d: SWAP3                          // SRCID43: (28061-28414)
[002] 00002f6e: SWAP2                          // SRCID43: (28061-28414)
[002] 00002f6f: POP                            // SRCID43: (28061-28414)
[002] 00002f70: POP                            // SRCID43: (28061-28414)
[002] 00002f71: JUMP                           // SRCID43: (28061-28414)
[002] 00002f72: JUMPDEST                       // SRCID43: (28420-29092)
[002] 00002f73: PUSH1 0x0                      // SRCID43: (28505-28511)
[002] 00002f75: DUP1                           // SRCID43: (28513-28519)
[002] 00002f76: PUSH1 0x40                     // SRCID43: (28562-28564)
[002] 00002f78: DUP4                           // SRCID43: (28550-28559)
[002] 00002f79: DUP6                           // SRCID43: (28541-28548)
[002] 00002f7a: SUB                            // SRCID43: (28537-28560)
[002] 00002f7b: SLT                            // SRCID43: (28533-28565)
[002] 00002f7c: ISZERO                         // SRCID43: (28530-28649)
[002] 00002f7d: PUSH2 0x2f89                   // SRCID43: (28530-28649)
[002] 00002f80: JUMPI                          // SRCID43: (28530-28649)
      00002f81: PUSH2 0x2f88                   // SRCID43: (28568-28647)
      00002f84: PUSH2 0x2904                   // SRCID43: (28568-28647)
      00002f87: JUMP                           // SRCID43: (28568-28647)
      00002f88: JUMPDEST                       // SRCID43: (28568-28647)
[002] 00002f89: JUMPDEST                       // SRCID43: (28530-28649)
[002] 00002f8a: PUSH1 0x0                      // SRCID43: (28688-28689)
[002] 00002f8c: PUSH2 0x2f97                   // SRCID43: (28713-28774)
[002] 00002f8f: DUP6                           // SRCID43: (28766-28773)
[002] 00002f90: DUP3                           // SRCID43: (28757-28763)
[002] 00002f91: DUP7                           // SRCID43: (28746-28755)
[002] 00002f92: ADD                            // SRCID43: (28742-28764)
[002] 00002f93: PUSH2 0x2e37                   // SRCID43: (28713-28774)
[002] 00002f96: JUMP                           // SRCID43: (28713-28774)
[002] 00002f97: JUMPDEST                       // SRCID43: (28713-28774)
[002] 00002f98: SWAP3                          // SRCID43: (28703-28774)
[002] 00002f99: POP                            // SRCID43: (28703-28774)
[002] 00002f9a: POP                            // SRCID43: (28659-28784)
[002] 00002f9b: PUSH1 0x20                     // SRCID43: (28844-28846)
[002] 00002f9d: DUP4                           // SRCID43: (28833-28842)
[002] 00002f9e: ADD                            // SRCID43: (28829-28847)
[002] 00002f9f: MLOAD                          // SRCID43: (28823-28848)
[002] 00002fa0: PUSH8 0xffffffffffffffff       // SRCID43: (28875-28893)
[002] 00002fa9: DUP2                           // SRCID43: (28867-28873)
[002] 00002faa: GT                             // SRCID43: (28864-28894)
[002] 00002fab: ISZERO                         // SRCID43: (28861-28978)
[002] 00002fac: PUSH2 0x2fb8                   // SRCID43: (28861-28978)
[002] 00002faf: JUMPI                          // SRCID43: (28861-28978)
      00002fb0: PUSH2 0x2fb7                   // SRCID43: (28897-28976)
      00002fb3: PUSH2 0x2909                   // SRCID43: (28897-28976)
      00002fb6: JUMP                           // SRCID43: (28897-28976)
      00002fb7: JUMPDEST                       // SRCID43: (28897-28976)
[002] 00002fb8: JUMPDEST                       // SRCID43: (28861-28978)
[002] 00002fb9: PUSH2 0x2fc4                   // SRCID43: (29002-29075)
[002] 00002fbc: DUP6                           // SRCID43: (29067-29074)
[002] 00002fbd: DUP3                           // SRCID43: (29058-29064)
[002] 00002fbe: DUP7                           // SRCID43: (29047-29056)
[002] 00002fbf: ADD                            // SRCID43: (29043-29065)
[002] 00002fc0: PUSH2 0x2f44                   // SRCID43: (29002-29075)
[002] 00002fc3: JUMP                           // SRCID43: (29002-29075)
[002] 00002fc4: JUMPDEST                       // SRCID43: (29002-29075)
[002] 00002fc5: SWAP2                          // SRCID43: (28992-29075)
[002] 00002fc6: POP                            // SRCID43: (28992-29075)
[002] 00002fc7: POP                            // SRCID43: (28794-29085)
[002] 00002fc8: SWAP3                          // SRCID43: (28420-29092)
[002] 00002fc9: POP                            // SRCID43: (28420-29092)
[002] 00002fca: SWAP3                          // SRCID43: (28420-29092)
[002] 00002fcb: SWAP1                          // SRCID43: (28420-29092)
[002] 00002fcc: POP                            // SRCID43: (28420-29092)
[002] 00002fcd: JUMP                           // SRCID43: (28420-29092)
[001] 00002fce: JUMPDEST                       // SRCID43: (29098-29714)
[001] 00002fcf: PUSH1 0x0                      // SRCID43: (29279-29283)
[001] 00002fd1: PUSH1 0xa0                     // SRCID43: (29317-29320)
[001] 00002fd3: DUP3                           // SRCID43: (29306-29315)
[001] 00002fd4: ADD                            // SRCID43: (29302-29321)
[001] 00002fd5: SWAP1                          // SRCID43: (29294-29321)
[001] 00002fd6: POP                            // SRCID43: (29294-29321)
[001] 00002fd7: PUSH2 0x2fe3                   // SRCID43: (29331-29396)
[001] 00002fda: PUSH1 0x0                      // SRCID43: (29393-29394)
[001] 00002fdc: DUP4                           // SRCID43: (29382-29391)
[001] 00002fdd: ADD                            // SRCID43: (29378-29395)
[001] 00002fde: DUP9                           // SRCID43: (29369-29375)
[001] 00002fdf: PUSH2 0x28d0                   // SRCID43: (29331-29396)
[001] 00002fe2: JUMP                           // SRCID43: (29331-29396)
[001] 00002fe3: JUMPDEST                       // SRCID43: (29331-29396)
[001] 00002fe4: PUSH2 0x2ff0                   // SRCID43: (29406-29472)
[001] 00002fe7: PUSH1 0x20                     // SRCID43: (29468-29470)
[001] 00002fe9: DUP4                           // SRCID43: (29457-29466)
[001] 00002fea: ADD                            // SRCID43: (29453-29471)
[001] 00002feb: DUP8                           // SRCID43: (29444-29450)
[001] 00002fec: PUSH2 0x28d0                   // SRCID43: (29406-29472)
[001] 00002fef: JUMP                           // SRCID43: (29406-29472)
[001] 00002ff0: JUMPDEST                       // SRCID43: (29406-29472)
[001] 00002ff1: PUSH2 0x2ffd                   // SRCID43: (29482-29548)
[001] 00002ff4: PUSH1 0x40                     // SRCID43: (29544-29546)
[001] 00002ff6: DUP4                           // SRCID43: (29533-29542)
[001] 00002ff7: ADD                            // SRCID43: (29529-29547)
[001] 00002ff8: DUP7                           // SRCID43: (29520-29526)
[001] 00002ff9: PUSH2 0x28d0                   // SRCID43: (29482-29548)
[001] 00002ffc: JUMP                           // SRCID43: (29482-29548)
[001] 00002ffd: JUMPDEST                       // SRCID43: (29482-29548)
[001] 00002ffe: PUSH2 0x300a                   // SRCID43: (29558-29624)
[001] 00003001: PUSH1 0x60                     // SRCID43: (29620-29622)
[001] 00003003: DUP4                           // SRCID43: (29609-29618)
[001] 00003004: ADD                            // SRCID43: (29605-29623)
[001] 00003005: DUP6                           // SRCID43: (29596-29602)
[001] 00003006: PUSH2 0x28d0                   // SRCID43: (29558-29624)
[001] 00003009: JUMP                           // SRCID43: (29558-29624)
[001] 0000300a: JUMPDEST                       // SRCID43: (29558-29624)
[001] 0000300b: PUSH2 0x3017                   // SRCID43: (29634-29707)
[001] 0000300e: PUSH1 0x80                     // SRCID43: (29702-29705)
[001] 00003010: DUP4                           // SRCID43: (29691-29700)
[001] 00003011: ADD                            // SRCID43: (29687-29706)
[001] 00003012: DUP5                           // SRCID43: (29678-29684)
[001] 00003013: PUSH2 0x25b3                   // SRCID43: (29634-29707)
[001] 00003016: JUMP                           // SRCID43: (29634-29707)
[001] 00003017: JUMPDEST                       // SRCID43: (29634-29707)
[001] 00003018: SWAP7                          // SRCID43: (29098-29714)
[001] 00003019: SWAP6                          // SRCID43: (29098-29714)
[001] 0000301a: POP                            // SRCID43: (29098-29714)
[001] 0000301b: POP                            // SRCID43: (29098-29714)
[001] 0000301c: POP                            // SRCID43: (29098-29714)
[001] 0000301d: POP                            // SRCID43: (29098-29714)
[001] 0000301e: POP                            // SRCID43: (29098-29714)
[001] 0000301f: POP                            // SRCID43: (29098-29714)
[001] 00003020: JUMP                           // SRCID43: (29098-29714)
      00003021: JUMPDEST                       // SRCID43: (29720-29838)
      00003022: PUSH2 0x302a                   // SRCID43: (29807-29831)
      00003025: DUP2                           // SRCID43: (29825-29830)
      00003026: PUSH2 0x2a22                   // SRCID43: (29807-29831)
      00003029: JUMP                           // SRCID43: (29807-29831)
      0000302a: JUMPDEST                       // SRCID43: (29807-29831)
      0000302b: DUP3                           // SRCID43: (29802-29805)
      0000302c: MSTORE                         // SRCID43: (29795-29832)
      0000302d: POP                            // SRCID43: (29720-29838)
      0000302e: POP                            // SRCID43: (29720-29838)
      0000302f: JUMP                           // SRCID43: (29720-29838)
      00003030: JUMPDEST                       // SRCID43: (29844-30176)
      00003031: PUSH1 0x0                      // SRCID43: (29965-29969)
      00003033: PUSH1 0x40                     // SRCID43: (30003-30005)
      00003035: DUP3                           // SRCID43: (29992-30001)
      00003036: ADD                            // SRCID43: (29988-30006)
      00003037: SWAP1                          // SRCID43: (29980-30006)
      00003038: POP                            // SRCID43: (29980-30006)
      00003039: PUSH2 0x3045                   // SRCID43: (30016-30087)
      0000303c: PUSH1 0x0                      // SRCID43: (30084-30085)
      0000303e: DUP4                           // SRCID43: (30073-30082)
      0000303f: ADD                            // SRCID43: (30069-30086)
      00003040: DUP6                           // SRCID43: (30060-30066)
      00003041: PUSH2 0x25b3                   // SRCID43: (30016-30087)
      00003044: JUMP                           // SRCID43: (30016-30087)
      00003045: JUMPDEST                       // SRCID43: (30016-30087)
      00003046: PUSH2 0x3052                   // SRCID43: (30097-30169)
      00003049: PUSH1 0x20                     // SRCID43: (30165-30167)
      0000304b: DUP4                           // SRCID43: (30154-30163)
      0000304c: ADD                            // SRCID43: (30150-30168)
      0000304d: DUP5                           // SRCID43: (30141-30147)
      0000304e: PUSH2 0x3021                   // SRCID43: (30097-30169)
      00003051: JUMP                           // SRCID43: (30097-30169)
      00003052: JUMPDEST                       // SRCID43: (30097-30169)
      00003053: SWAP4                          // SRCID43: (29844-30176)
      00003054: SWAP3                          // SRCID43: (29844-30176)
      00003055: POP                            // SRCID43: (29844-30176)
      00003056: POP                            // SRCID43: (29844-30176)
      00003057: POP                            // SRCID43: (29844-30176)
      00003058: JUMP                           // SRCID43: (29844-30176)
      00003059: JUMPDEST                       // SRCID43: (30182-30533)
      0000305a: PUSH1 0x0                      // SRCID43: (30252-30258)
      0000305c: PUSH1 0x20                     // SRCID43: (30301-30303)
      0000305e: DUP3                           // SRCID43: (30289-30298)
      0000305f: DUP5                           // SRCID43: (30280-30287)
      00003060: SUB                            // SRCID43: (30276-30299)
      00003061: SLT                            // SRCID43: (30272-30304)
      00003062: ISZERO                         // SRCID43: (30269-30388)
      00003063: PUSH2 0x306f                   // SRCID43: (30269-30388)
      00003066: JUMPI                          // SRCID43: (30269-30388)
      00003067: PUSH2 0x306e                   // SRCID43: (30307-30386)
      0000306a: PUSH2 0x2904                   // SRCID43: (30307-30386)
      0000306d: JUMP                           // SRCID43: (30307-30386)
      0000306e: JUMPDEST                       // SRCID43: (30307-30386)
      0000306f: JUMPDEST                       // SRCID43: (30269-30388)
      00003070: PUSH1 0x0                      // SRCID43: (30427-30428)
      00003072: PUSH2 0x307d                   // SRCID43: (30452-30516)
      00003075: DUP5                           // SRCID43: (30508-30515)
      00003076: DUP3                           // SRCID43: (30499-30505)
      00003077: DUP6                           // SRCID43: (30488-30497)
      00003078: ADD                            // SRCID43: (30484-30506)
      00003079: PUSH2 0x2a43                   // SRCID43: (30452-30516)
      0000307c: JUMP                           // SRCID43: (30452-30516)
      0000307d: JUMPDEST                       // SRCID43: (30452-30516)
      0000307e: SWAP2                          // SRCID43: (30442-30516)
      0000307f: POP                            // SRCID43: (30442-30516)
      00003080: POP                            // SRCID43: (30398-30526)
      00003081: SWAP3                          // SRCID43: (30182-30533)
      00003082: SWAP2                          // SRCID43: (30182-30533)
      00003083: POP                            // SRCID43: (30182-30533)
      00003084: POP                            // SRCID43: (30182-30533)
      00003085: JUMP                           // SRCID43: (30182-30533)
[001] 00003086: JUMPDEST                       // SRCID43: (30539-30847)
[001] 00003087: PUSH1 0x0                      // SRCID43: (30648-30652)
[001] 00003089: PUSH1 0x40                     // SRCID43: (30686-30688)
[001] 0000308b: DUP3                           // SRCID43: (30675-30684)
[001] 0000308c: ADD                            // SRCID43: (30671-30689)
[001] 0000308d: SWAP1                          // SRCID43: (30663-30689)
[001] 0000308e: POP                            // SRCID43: (30663-30689)
[001] 0000308f: PUSH2 0x309b                   // SRCID43: (30699-30764)
[001] 00003092: PUSH1 0x0                      // SRCID43: (30761-30762)
[001] 00003094: DUP4                           // SRCID43: (30750-30759)
[001] 00003095: ADD                            // SRCID43: (30746-30763)
[001] 00003096: DUP6                           // SRCID43: (30737-30743)
[001] 00003097: PUSH2 0x28d0                   // SRCID43: (30699-30764)
[001] 0000309a: JUMP                           // SRCID43: (30699-30764)
[001] 0000309b: JUMPDEST                       // SRCID43: (30699-30764)
[001] 0000309c: PUSH2 0x30a8                   // SRCID43: (30774-30840)
[001] 0000309f: PUSH1 0x20                     // SRCID43: (30836-30838)
[001] 000030a1: DUP4                           // SRCID43: (30825-30834)
[001] 000030a2: ADD                            // SRCID43: (30821-30839)
[001] 000030a3: DUP5                           // SRCID43: (30812-30818)
[001] 000030a4: PUSH2 0x28d0                   // SRCID43: (30774-30840)
[001] 000030a7: JUMP                           // SRCID43: (30774-30840)
[001] 000030a8: JUMPDEST                       // SRCID43: (30774-30840)
[001] 000030a9: SWAP4                          // SRCID43: (30539-30847)
[001] 000030aa: SWAP3                          // SRCID43: (30539-30847)
[001] 000030ab: POP                            // SRCID43: (30539-30847)
[001] 000030ac: POP                            // SRCID43: (30539-30847)
[001] 000030ad: POP                            // SRCID43: (30539-30847)
[001] 000030ae: JUMP                           // SRCID43: (30539-30847)
